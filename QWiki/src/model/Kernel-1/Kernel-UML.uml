<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Model xmi:id="_o8I_sGvaEdq4DLWZOhbdEA" name="UML">
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhHJMO5rEearKK0ZImZXdA" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhHJMe5rEearKK0ZImZXdA" source="UML/Actions"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhOd8O5rEearKK0ZImZXdA" source="UML/Activities"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhQTIO5rEearKK0ZImZXdA" source="UML/Classification"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhSvYO5rEearKK0ZImZXdA" source="UML/CommonBehavior"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhTWcO5rEearKK0ZImZXdA" source="UML/CommonStructure" references="_JcYaM-5rEearKK0ZImZXdA _JcYaMO5rEearKK0ZImZXdA _JcYaOO5rEearKK0ZImZXdA _WiuJ4LGzEeCDe8CO90iVKQ _Q8DcULGzEeCDe8CO90iVKQ _JcYaSu5rEearKK0ZImZXdA _JcYaTu5rEearKK0ZImZXdA _JcYaUe5rEearKK0ZImZXdA _JcYaPu5rEearKK0ZImZXdA _sD4acEzSEeO2z-YY6ENIIA _JcZBRO5rEearKK0ZImZXdA _rEDGkGwKEdq7X4sGURiZYA _JcZBSe5rEearKK0ZImZXdA _JcZBTO5rEearKK0ZImZXdA _JBgfoKPAEdqi_5gqUMOQtA _JcZBVu5rEearKK0ZImZXdA _GDD2YAtAEeGcpbeCPJfCmw _N3hRMAtAEeGcpbeCPJfCmw _JcZoUO5rEearKK0ZImZXdA _JcZoV-5rEearKK0ZImZXdA _kl90MGvbEdq4DLWZOhbdEA _fO7PkLG0EeCDe8CO90iVKQ _JcaPae5rEearKK0ZImZXdA _JcaPa-5rEearKK0ZImZXdA _JcaPbe5rEearKK0ZImZXdA _JcaPcO5rEearKK0ZImZXdA _RPl78GwIEdq7X4sGURiZYA _Jca2du5rEearKK0ZImZXdA _Jca2ee5rEearKK0ZImZXdA _5i6zsIRPEeOnobsWSpJONg _Jca2fe5rEearKK0ZImZXdA _ZQJacIRQEeOnobsWSpJONg _Jca2ge5rEearKK0ZImZXdA _Jca2hO5rEearKK0ZImZXdA _Jca2iu5rEearKK0ZImZXdA _Jca2ku5rEearKK0ZImZXdA _Jca2me5rEearKK0ZImZXdA _Y8IpELL3EeCBifIhhuFqZA _JcbdhO5rEearKK0ZImZXdA _a_qnELL3EeCBifIhhuFqZA _Jcbdje5rEearKK0ZImZXdA _Gjgl0GveEdq4DLWZOhbdEA _A9YUsIUBEeOxOrTbpQATOA _8n2t4LGzEeCDe8CO90iVKQ _JccEoO5rEearKK0ZImZXdA _1vzv0LbIEeCRxrN1JUGuxA _JccEpe5rEearKK0ZImZXdA _PfdtELG0EeCDe8CO90iVKQ _JccroO5rEearKK0ZImZXdA _Jccrp-5rEearKK0ZImZXdA _Jccrru5rEearKK0ZImZXdA _8RZtgLL3EeCBifIhhuFqZA _JccruO5rEearKK0ZImZXdA _uR4xEIRfEeOrzvVsV3Q4sA _csVgUGvtEdqG6fBIPwe-mw _JcdSu-5rEearKK0ZImZXdA _JcdSv-5rEearKK0ZImZXdA _JcdSw-5rEearKK0ZImZXdA _JcdSx-5rEearKK0ZImZXdA _JcdSy-5rEearKK0ZImZXdA _Jcd5wO5rEearKK0ZImZXdA _Jcd5xO5rEearKK0ZImZXdA _Jcd5zu5rEearKK0ZImZXdA _Jcd51u5rEearKK0ZImZXdA _OanVoLL4EeCBifIhhuFqZA _Jcd55e5rEearKK0ZImZXdA _ZiwkoGwLEdq7X4sGURiZYA _nxsncH2aEeSVK_cyXH-KWw _jKxnwGwLEdq7X4sGURiZYA _Jceg3u5rEearKK0ZImZXdA _Jceg4O5rEearKK0ZImZXdA _Jceg4u5rEearKK0ZImZXdA _SnNPIGwIEdq7X4sGURiZYA _JcfH6e5rEearKK0ZImZXdA _JcfH7-5rEearKK0ZImZXdA _JcfH4O5rEearKK0ZImZXdA _JcfH9O5rEearKK0ZImZXdA _JcfH-e5rEearKK0ZImZXdA _DH62EKPAEdqi_5gqUMOQtA _h18oENlrEduDKPkA-0jJZg _AyM_oGwMEdq7X4sGURiZYA _JchkKe5rEearKK0ZImZXdA _JchkKO5rEearKK0ZImZXdA _JchkLe5rEearKK0ZImZXdA _JchkLO5rEearKK0ZImZXdA _JchkMO5rEearKK0ZImZXdA _JchkMe5rEearKK0ZImZXdA _JchkMu5rEearKK0ZImZXdA _JchkM-5rEearKK0ZImZXdA _JchkNe5rEearKK0ZImZXdA _JchkNO5rEearKK0ZImZXdA _JchkOe5rEearKK0ZImZXdA _JchkOO5rEearKK0ZImZXdA _JchkPe5rEearKK0ZImZXdA _JchkPO5rEearKK0ZImZXdA _epbu4EzPEeO2z-YY6ENIIA _JciLMe5rEearKK0ZImZXdA _JciLMO5rEearKK0ZImZXdA _JciLNO5rEearKK0ZImZXdA _JciLM-5rEearKK0ZImZXdA _JciLN-5rEearKK0ZImZXdA _JciLNu5rEearKK0ZImZXdA _bU41QAtAEeGcpbeCPJfCmw _JciLO-5rEearKK0ZImZXdA _JciLOu5rEearKK0ZImZXdA _JciLPu5rEearKK0ZImZXdA _JciLPe5rEearKK0ZImZXdA _JciLQu5rEearKK0ZImZXdA _JciLQe5rEearKK0ZImZXdA _JciLRu5rEearKK0ZImZXdA _JciLRe5rEearKK0ZImZXdA _JciLS-5rEearKK0ZImZXdA _JciLSu5rEearKK0ZImZXdA _JciyQe5rEearKK0ZImZXdA _JciyQO5rEearKK0ZImZXdA _JciyRO5rEearKK0ZImZXdA _JciyQ-5rEearKK0ZImZXdA _JciySO5rEearKK0ZImZXdA _JciyR-5rEearKK0ZImZXdA"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhVysO5rEearKK0ZImZXdA" source="UML/Deployments"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhVyse5rEearKK0ZImZXdA" source="UML/InformationFlows"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhWZwO5rEearKK0ZImZXdA" source="UML/Interactions"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhYO8O5rEearKK0ZImZXdA" source="UML/Packages" references="_vyLfILG3EeCDe8CO90iVKQ _NVhqMGv0Edq7X4sGURiZYA _Jcz4C-5rEearKK0ZImZXdA _Jcz4Du5rEearKK0ZImZXdA _XSjCgLbQEeCRxrN1JUGuxA _Jc0fHO5rEearKK0ZImZXdA _Jc0fJO5rEearKK0ZImZXdA _Jc0fK-5rEearKK0ZImZXdA _Jc0fMe5rEearKK0ZImZXdA _Jc0fOe5rEearKK0ZImZXdA __wMTILL4EeCBifIhhuFqZA _kWuyMLL5EeCBifIhhuFqZA _yfRaMLL5EeCBifIhhuFqZA _Jc1GKu5rEearKK0ZImZXdA _-cvRAGvzEdq7X4sGURiZYA _Jc4Jde5rEearKK0ZImZXdA _Jc4JdO5rEearKK0ZImZXdA _Jc4JeO5rEearKK0ZImZXdA"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhY2AO5rEearKK0ZImZXdA" source="UML/SimpleClassifiers"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhZdEO5rEearKK0ZImZXdA" source="UML/StateMachines"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhbSQO5rEearKK0ZImZXdA" source="UML/StructuredClassifiers" references="_JdGy8O5rEearKK0ZImZXdA _6VRNQLLREeCsYvaJqFFivQ _AwvxoGwNEdq7X4sGURiZYA"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhcgYO5rEearKK0ZImZXdA" source="UML/UseCases" references="_JdRLAO5rEearKK0ZImZXdA _JdRLEO5rEearKK0ZImZXdA _JdRLE-5rEearKK0ZImZXdA _JdRLFe5rEearKK0ZImZXdA _JdRLF-5rEearKK0ZImZXdA _JdRLCe5rEearKK0ZImZXdA _JdRLIO5rEearKK0ZImZXdA _JdRLGu5rEearKK0ZImZXdA _JdRyFO5rEearKK0ZImZXdA _JdRyFu5rEearKK0ZImZXdA _JdRyEO5rEearKK0ZImZXdA _JdRyJ-5rEearKK0ZImZXdA _JdRyK-5rEearKK0ZImZXdA _JdRyL-5rEearKK0ZImZXdA _JdRyN-5rEearKK0ZImZXdA _JdRyGO5rEearKK0ZImZXdA _JdRyPu5rEearKK0ZImZXdA _JdRyP-5rEearKK0ZImZXdA _JdRyQe5rEearKK0ZImZXdA _JdRyQ-5rEearKK0ZImZXdA _JdRyQu5rEearKK0ZImZXdA _JdSZIe5rEearKK0ZImZXdA _JdSZIO5rEearKK0ZImZXdA _JdSZJe5rEearKK0ZImZXdA _JdSZJO5rEearKK0ZImZXdA _JdSZKO5rEearKK0ZImZXdA _JdSZJ-5rEearKK0ZImZXdA"/>
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_JhdHcO5rEearKK0ZImZXdA" source="UML/Values" references="_JdTAMe5rEearKK0ZImZXdA _JdTANO5rEearKK0ZImZXdA _-Ixo8H4XEdq7cMP_l1l5Gg _JdTAQe5rEearKK0ZImZXdA _JdTARe5rEearKK0ZImZXdA _JdTAOO5rEearKK0ZImZXdA _JdTASu5rEearKK0ZImZXdA _JdTATO5rEearKK0ZImZXdA _JdTAR-5rEearKK0ZImZXdA _JdTAVO5rEearKK0ZImZXdA _JdTAV-5rEearKK0ZImZXdA _JdTATu5rEearKK0ZImZXdA _JdTAXe5rEearKK0ZImZXdA _-NPagLG3EeCDe8CO90iVKQ _8QuDcLG3EeCDe8CO90iVKQ _JdTnRe5rEearKK0ZImZXdA _JdTnR-5rEearKK0ZImZXdA _JdTnQu5rEearKK0ZImZXdA _JdTnTO5rEearKK0ZImZXdA _JdTnSe5rEearKK0ZImZXdA _JdTnUO5rEearKK0ZImZXdA _JdTnU-5rEearKK0ZImZXdA _JdTnWO5rEearKK0ZImZXdA _FFMNsGveEdq4DLWZOhbdEA _JdUOUu5rEearKK0ZImZXdA _JdUOVe5rEearKK0ZImZXdA _JdUOWu5rEearKK0ZImZXdA _Dy77oGveEdq4DLWZOhbdEA _JdUOYu5rEearKK0ZImZXdA _JdUOZ-5rEearKK0ZImZXdA _JdUOX-5rEearKK0ZImZXdA _JdUObu5rEearKK0ZImZXdA _JdUOcO5rEearKK0ZImZXdA _JdUOde5rEearKK0ZImZXdA _KF5QYK3PEeCff5DsMzqH0w _JdU1YO5rEearKK0ZImZXdA _RFmAkLG4EeCDe8CO90iVKQ _JdU1Z-5rEearKK0ZImZXdA _JdU1bO5rEearKK0ZImZXdA _5jXJsTEkEdu9VoNTbEBQkQ _JdU1c-5rEearKK0ZImZXdA _JdU1du5rEearKK0ZImZXdA _JdVccO5rEearKK0ZImZXdA _Q-yR4GveEdq4DLWZOhbdEA _JdVcde5rEearKK0ZImZXdA _w__dcLG0EeCDe8CO90iVKQ _D0kWwLG1EeCDe8CO90iVKQ _JdWDg-5rEearKK0ZImZXdA _JdWDiO5rEearKK0ZImZXdA _JdWDj-5rEearKK0ZImZXdA _mv9LcFYiEdqB6vblk3tuMA _JdWDmu5rEearKK0ZImZXdA _ChRfcGveEdq4DLWZOhbdEA _JdWqmu5rEearKK0ZImZXdA _JdWqne5rEearKK0ZImZXdA _JdWqoe5rEearKK0ZImZXdA _JdWqkO5rEearKK0ZImZXdA _JdWqrO5rEearKK0ZImZXdA _JdWqsO5rEearKK0ZImZXdA _JdWqpu5rEearKK0ZImZXdA _JdWqt-5rEearKK0ZImZXdA _JdWquu5rEearKK0ZImZXdA _DylKEH4YEdq7cMP_l1l5Gg _JdXRo-5rEearKK0ZImZXdA _JdXRpe5rEearKK0ZImZXdA _JdXRoO5rEearKK0ZImZXdA _JdXRqu5rEearKK0ZImZXdA _JdXRrO5rEearKK0ZImZXdA _JdXRp-5rEearKK0ZImZXdA _JdXRs-5rEearKK0ZImZXdA _JdXRue5rEearKK0ZImZXdA _JdXRv-5rEearKK0ZImZXdA _JdXRxe5rEearKK0ZImZXdA _JdXRyu5rEearKK0ZImZXdA _JdXRz-5rEearKK0ZImZXdA _JdXR1e5rEearKK0ZImZXdA _JdXR2-5rEearKK0ZImZXdA _JdXRr-5rEearKK0ZImZXdA _JdX4se5rEearKK0ZImZXdA _JdX4sO5rEearKK0ZImZXdA _JdX4tu5rEearKK0ZImZXdA _JdX4tO5rEearKK0ZImZXdA _JdX4u-5rEearKK0ZImZXdA _JdX4ue5rEearKK0ZImZXdA _JdX4v-5rEearKK0ZImZXdA _JdX4vu5rEearKK0ZImZXdA _JdX4wu5rEearKK0ZImZXdA _JdX4we5rEearKK0ZImZXdA _JdX4xu5rEearKK0ZImZXdA _JdX4xO5rEearKK0ZImZXdA _JdX4yO5rEearKK0ZImZXdA _JdYfxu5rEearKK0ZImZXdA _JdYfxO5rEearKK0ZImZXdA _JdYfye5rEearKK0ZImZXdA _JdYfyO5rEearKK0ZImZXdA _JdYfze5rEearKK0ZImZXdA _JdYfzO5rEearKK0ZImZXdA _JdYf0e5rEearKK0ZImZXdA _JdYf0O5rEearKK0ZImZXdA _JdYf1O5rEearKK0ZImZXdA _JdYf0-5rEearKK0ZImZXdA _JdYf2e5rEearKK0ZImZXdA _JdYf1-5rEearKK0ZImZXdA _JdYf3u5rEearKK0ZImZXdA _JdYf3O5rEearKK0ZImZXdA _JdZG0u5rEearKK0ZImZXdA _JdZG0O5rEearKK0ZImZXdA _JdZG1e5rEearKK0ZImZXdA _JdZG1O5rEearKK0ZImZXdA _JdZG2O5rEearKK0ZImZXdA _JdZG1-5rEearKK0ZImZXdA"/>
    </eAnnotations>
    <packageImport xmi:type="uml:PackageImport" xmi:id="__as3cGvaEdq4DLWZOhbdEA">
      <importedPackage xmi:type="uml:Model" href="org.eclipse.uml2.uml/Ecore.uml#_SeWiQMX_EduPJbEsMYXjUQ"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_WPl70C-TEeO5Ur9hrpFPZA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Association" xmi:id="_5mgloAx5Eeat1-DywZGp2A" name="A_client_clientDependency" visibility="private" memberEnd="_fCuvgAx6Eeat1-DywZGp2A _A9YUsIUBEeOxOrTbpQATOA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_fCuvgAx6Eeat1-DywZGp2A" name="client" visibility="private" type="_csVgUGvtEdqG6fBIPwe-mw" association="_5mgloAx5Eeat1-DywZGp2A">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i3urIAx6Eeat1-DywZGp2A" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JcYaMO5rEearKK0ZImZXdA" name="Abstraction">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaMe5rEearKK0ZImZXdA" annotatedElement="_JcYaMO5rEearKK0ZImZXdA">
        <body>An Abstraction is a Relationship that relates two Elements or sets of Elements that represent the same concept at different levels of abstraction or from different viewpoints.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcYaMu5rEearKK0ZImZXdA" general="_rEDGkGwKEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcYaM-5rEearKK0ZImZXdA" name="mapping" type="_ChRfcGveEdq4DLWZOhbdEA" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JciyR-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaNO5rEearKK0ZImZXdA" annotatedElement="_JcYaM-5rEearKK0ZImZXdA">
          <body>An OpaqueExpression that states the abstraction relationship between the supplier(s) and the client(s). In some cases, such as derivation, it is usually formal and unidirectional; in other cases, such as trace, it is usually informal and bidirectional. The mapping expression is optional and may be omitted if the precise relationship between the Elements is not specified.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcYaNe5rEearKK0ZImZXdA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q8DcULGzEeCDe8CO90iVKQ" name="Comment">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaNu5rEearKK0ZImZXdA" annotatedElement="_Q8DcULGzEeCDe8CO90iVKQ">
        <body>A Comment is a textual annotation that can be attached to a set of Elements.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcYaN-5rEearKK0ZImZXdA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcYaOO5rEearKK0ZImZXdA" name="annotatedElement" type="_kl90MGvbEdq4DLWZOhbdEA" association="_JciyQ-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaOe5rEearKK0ZImZXdA" annotatedElement="_JcYaOO5rEearKK0ZImZXdA">
          <body>References the Element(s) being commented.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcYaOu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcYaO-5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_WiuJ4LGzEeCDe8CO90iVKQ" name="body">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaPO5rEearKK0ZImZXdA" annotatedElement="_WiuJ4LGzEeCDe8CO90iVKQ">
          <body>Specifies a string that is the comment.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcYaPe5rEearKK0ZImZXdA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JcYaPu5rEearKK0ZImZXdA" name="Constraint">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaP-5rEearKK0ZImZXdA" annotatedElement="_JcYaPu5rEearKK0ZImZXdA">
        <body>A Constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an Element or set of Elements.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcYaQO5rEearKK0ZImZXdA" name="boolean_value" constrainedElement="_JcYaPu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaQe5rEearKK0ZImZXdA" annotatedElement="_JcYaQO5rEearKK0ZImZXdA">
          <body>The ValueSpecification for a Constraint must evaluate to a Boolean value.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcYaQu5rEearKK0ZImZXdA" language=""/>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcYaQ-5rEearKK0ZImZXdA" name="no_side_effects" constrainedElement="_JcYaPu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaRO5rEearKK0ZImZXdA" annotatedElement="_JcYaQ-5rEearKK0ZImZXdA">
          <body>Evaluating the ValueSpecification for a Constraint must not have side effects.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcYaRe5rEearKK0ZImZXdA" language=""/>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcYaRu5rEearKK0ZImZXdA" name="not_apply_to_self" constrainedElement="_JcYaPu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaR-5rEearKK0ZImZXdA" annotatedElement="_JcYaRu5rEearKK0ZImZXdA">
          <body>A Constraint cannot be applied to itself.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcYaSO5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>not constrainedElement->includes(self)</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcYaSe5rEearKK0ZImZXdA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcYaSu5rEearKK0ZImZXdA" name="constrainedElement" type="_kl90MGvbEdq4DLWZOhbdEA" isOrdered="true" association="_JciLSu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaS-5rEearKK0ZImZXdA" annotatedElement="_JcYaSu5rEearKK0ZImZXdA">
          <body>The ordered set of Elements referenced by this Constraint.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcYaTO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcYaTe5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcYaTu5rEearKK0ZImZXdA" name="context" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_1vzv0LbIEeCRxrN1JUGuxA" association="_JchkMu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaT-5rEearKK0ZImZXdA" annotatedElement="_JcYaTu5rEearKK0ZImZXdA">
          <body>Specifies the Namespace that owns the Constraint.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcYaUO5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcYaUe5rEearKK0ZImZXdA" name="specification" type="_JdXRr-5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JciyQO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaUu5rEearKK0ZImZXdA" annotatedElement="_JcYaUe5rEearKK0ZImZXdA">
          <body>A condition that must be true when evaluated in order for the Constraint to be satisfied.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rEDGkGwKEdq7X4sGURiZYA" name="Dependency">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcYaU-5rEearKK0ZImZXdA" annotatedElement="_rEDGkGwKEdq7X4sGURiZYA">
        <body>A Dependency is a Relationship that signifies that a single model Element or a set of model Elements requires other model Elements for their specification or implementation. This means that the complete semantics of the client Element(s) are either semantically or structurally dependent on the definition of the supplier Element(s).</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcZBQO5rEearKK0ZImZXdA" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcZBQe5rEearKK0ZImZXdA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_sD4acEzSEeO2z-YY6ENIIA" name="client" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_JcZBSe5rEearKK0ZImZXdA" association="_epbu4EzPEeO2z-YY6ENIIA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBQu5rEearKK0ZImZXdA" annotatedElement="_sD4acEzSEeO2z-YY6ENIIA">
          <body>The Element(s) dependent on the supplier Element(s). In some cases (such as a trace Abstraction) the assignment of direction (that is, the designation of the client Element) is at the discretion of the modeler and is a stipulation.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcZBQ-5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcZBRO5rEearKK0ZImZXdA" name="supplier" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_JcZBTO5rEearKK0ZImZXdA" association="_JciLRe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBRe5rEearKK0ZImZXdA" annotatedElement="_JcZBRO5rEearKK0ZImZXdA">
          <body>The Element(s) on which the client Element(s) depend in some respect. The modeler may stipulate a sense of Dependency direction suitable for their domain.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcZBRu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JBgfoKPAEdqi_5gqUMOQtA" name="DirectedRelationship" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBR-5rEearKK0ZImZXdA" annotatedElement="_JBgfoKPAEdqi_5gqUMOQtA">
        <body>A DirectedRelationship represents a relationship between a collection of source model Elements and a collection of target model Elements.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcZBSO5rEearKK0ZImZXdA" general="_DH62EKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcZBSe5rEearKK0ZImZXdA" name="source" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_JcfH-e5rEearKK0ZImZXdA" association="_JciLPe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBSu5rEearKK0ZImZXdA" annotatedElement="_JcZBSe5rEearKK0ZImZXdA">
          <body>Specifies the source Element(s) of the DirectedRelationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcZBS-5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcZBTO5rEearKK0ZImZXdA" name="target" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_JcfH-e5rEearKK0ZImZXdA" association="_JciLQe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBTe5rEearKK0ZImZXdA" annotatedElement="_JcZBTO5rEearKK0ZImZXdA">
          <body>Specifies the target Element(s) of the DirectedRelationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcZBTu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_kl90MGvbEdq4DLWZOhbdEA" name="Element" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBT-5rEearKK0ZImZXdA" annotatedElement="_kl90MGvbEdq4DLWZOhbdEA">
        <body>An Element is a constituent of a model. As such, it has the capability of owning other Elements.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcZBUO5rEearKK0ZImZXdA" name="has_owner" constrainedElement="_kl90MGvbEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBUe5rEearKK0ZImZXdA" annotatedElement="_JcZBUO5rEearKK0ZImZXdA">
          <body>Elements that must be owned must have an owner.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcZBUu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>mustBeOwned() implies owner->notEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcZBU-5rEearKK0ZImZXdA" name="not_own_self" constrainedElement="_kl90MGvbEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBVO5rEearKK0ZImZXdA" annotatedElement="_JcZBU-5rEearKK0ZImZXdA">
          <body>An element may not directly or indirectly own itself.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcZBVe5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>not allOwnedElements()->includes(self)</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_rcp_MGvbEdq4DLWZOhbdEA">
        <general xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWihMX_EduPJbEsMYXjUQ"/>
      </generalization>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcZBVu5rEearKK0ZImZXdA" name="ownedComment" type="_Q8DcULGzEeCDe8CO90iVKQ" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JciLOu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBV-5rEearKK0ZImZXdA" annotatedElement="_JcZBVu5rEearKK0ZImZXdA">
          <body>The Comments owned by this Element.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcZBWO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcZBWe5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_GDD2YAtAEeGcpbeCPJfCmw" name="ownedElement" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" aggregation="composite" isDerived="true" isDerivedUnion="true" association="_bU41QAtAEeGcpbeCPJfCmw">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBWu5rEearKK0ZImZXdA" annotatedElement="_GDD2YAtAEeGcpbeCPJfCmw">
          <body>The Elements owned by this Element.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcZBW-5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcZBXO5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_N3hRMAtAEeGcpbeCPJfCmw" name="owner" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_bU41QAtAEeGcpbeCPJfCmw">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZBXe5rEearKK0ZImZXdA" annotatedElement="_N3hRMAtAEeGcpbeCPJfCmw">
          <body>The Element that owns this Element.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcZBXu5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_jlv7EGvgEdq4DLWZOhbdEA" name="addKeyword">
        <ownedComment xmi:type="uml:Comment" xmi:id="_2oMhsOwbEdqYHf-imTcTdw" annotatedElement="_jlv7EGvgEdq4DLWZOhbdEA">
          <body>Adds the specified keyword to this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_y6GO4GvgEdq4DLWZOhbdEA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_mQqpMGvgEdq4DLWZOhbdEA" name="keyword" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_3Z64UPIAEdulR8T2OJRyFQ" annotatedElement="_mQqpMGvgEdq4DLWZOhbdEA">
            <body>The keyword to add.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_DkmGMGv1Edq7X4sGURiZYA" name="applyStereotype">
        <ownedComment xmi:type="uml:Comment" xmi:id="_KtkUgOwcEdqYHf-imTcTdw" annotatedElement="_DkmGMGv1Edq7X4sGURiZYA">
          <body>Applies the specified stereotype to this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_GGbJwGv1Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWijsX_EduPJbEsMYXjUQ"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_GmnFsGv1Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_4-WfgPIAEdulR8T2OJRyFQ" annotatedElement="_GmnFsGv1Edq7X4sGURiZYA">
            <body>The stereotype to apply.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Tj6BkYbbEdq0WtDJCT4EaQ" name="createEAnnotation">
        <ownedComment xmi:type="uml:Comment" xmi:id="_u8XzkOwdEdqYHf-imTcTdw" annotatedElement="_Tj6BkYbbEdq0WtDJCT4EaQ">
          <body>Creates an annotation with the specified source and this element as its model element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_YE_AEIbbEdq0WtDJCT4EaQ" direction="return">
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWj6cX_EduPJbEsMYXjUQ"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_aXUPEIbbEdq0WtDJCT4EaQ" name="source" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_6bxfwPIAEdulR8T2OJRyFQ" annotatedElement="_aXUPEIbbEdq0WtDJCT4EaQ">
            <body>The source for the new annotation.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_XebbkGvuEdqG6fBIPwe-mw" name="destroy">
        <ownedComment xmi:type="uml:Comment" xmi:id="_skdy8ewbEdqYHf-imTcTdw" annotatedElement="_XebbkGvuEdqG6fBIPwe-mw">
          <body>Destroys this element by removing all cross references to/from it and removing it from its containing resource or object.</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_bx0EsGvgEdq4DLWZOhbdEA" name="getKeywords" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_0r7CQOwbEdqYHf-imTcTdw" annotatedElement="_bx0EsGvgEdq4DLWZOhbdEA">
          <body>Retrieves the keywords for this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_fZ0tMGvgEdq4DLWZOhbdEA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hyHaQGvgEdq4DLWZOhbdEA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hyHaQWvgEdq4DLWZOhbdEA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_CQI_QGv2Edq7X4sGURiZYA" name="getApplicableStereotype" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_UmbQAOwcEdqYHf-imTcTdw" annotatedElement="_CQI_QGv2Edq7X4sGURiZYA">
          <body>Retrieves the stereotype with the specified qualified name that is applicable to this element, or null if no such stereotype is applicable.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_FC9FIGv2Edq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_i-hrkGv3Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i-hrkWv3Edq7X4sGURiZYA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_FX9r0Gv2Edq7X4sGURiZYA" name="qualifiedName" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="__AGmkPIAEdulR8T2OJRyFQ" annotatedElement="_FX9r0Gv2Edq7X4sGURiZYA">
            <body>The qualified name of the applicable stereotype to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_7oNB8Gv1Edq7X4sGURiZYA" name="getApplicableStereotypes" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_RO894OwcEdqYHf-imTcTdw" annotatedElement="_7oNB8Gv1Edq7X4sGURiZYA">
          <body>Retrieves the stereotypes that are applicable to this element, including those that are required and/or may already be applied.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_-J4UgGv1Edq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ah4GoGv2Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ah4GoWv2Edq7X4sGURiZYA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_pCV6EGv1Edq7X4sGURiZYA" name="getAppliedStereotype" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_IBy1UOwdEdqYHf-imTcTdw" annotatedElement="_pCV6EGv1Edq7X4sGURiZYA">
          <body>Retrieves the stereotype with the specified qualified name that is applied to this element, or null if no such stereotype is  applied.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_rLbtgGv1Edq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mO2M0Gv3Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mO2M0Wv3Edq7X4sGURiZYA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_r4SMcGv1Edq7X4sGURiZYA" name="qualifiedName" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_A1hQEPIBEdulR8T2OJRyFQ" annotatedElement="_r4SMcGv1Edq7X4sGURiZYA">
            <body>The qualified name of the applied stereotype to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_ZR1OsGv1Edq7X4sGURiZYA" name="getAppliedStereotypes" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Dj1cQOwdEdqYHf-imTcTdw" annotatedElement="_ZR1OsGv1Edq7X4sGURiZYA">
          <body>Retrieves the stereotypes that are applied to this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_cNu_IGv1Edq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eHU-AGv1Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eHU-AWv1Edq7X4sGURiZYA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_KpgogGv3Edq7X4sGURiZYA" name="getAppliedSubstereotype" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_P0Fs8OwdEdqYHf-imTcTdw" annotatedElement="_KpgogGv3Edq7X4sGURiZYA">
          <body>Retrieves the substereotype of the specified stereotype with the specified qualified name that is applied to this element, or null if no such stereotype is applied.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_KpgogWv3Edq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qg4pwGv3Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qg4pwWv3Edq7X4sGURiZYA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_NcK9YGv3Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_ZJ1IgPIBEdulR8T2OJRyFQ" annotatedElement="_NcK9YGv3Edq7X4sGURiZYA">
            <body>The superstereotype of the applied substereotype to retrieve.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Kpgogmv3Edq7X4sGURiZYA" name="qualifiedName" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_UNpiYPIBEdulR8T2OJRyFQ" annotatedElement="_Kpgogmv3Edq7X4sGURiZYA">
            <body>The qualified name of the applied substereotype to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="__s2tsGv2Edq7X4sGURiZYA" name="getAppliedSubstereotypes" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_NAYPMOwdEdqYHf-imTcTdw" annotatedElement="__s2tsGv2Edq7X4sGURiZYA">
          <body>Retrieves the substereotypes of the specified stereotype that are applied to this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="__s2tsWv2Edq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="__s2ts2v2Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__s2tsmv2Edq7X4sGURiZYA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_DJsA8Gv3Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_cF4C4PIBEdulR8T2OJRyFQ" annotatedElement="_DJsA8Gv3Edq7X4sGURiZYA">
            <body>The superstereotype of the applied substereotypes to retrieve.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Gv0hgGv0Edq7X4sGURiZYA" name="getModel" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="__lAEoOwbEdqYHf-imTcTdw" annotatedElement="_Gv0hgGv0Edq7X4sGURiZYA">
          <body>Retrieves the model that owns (either directly or indirectly) this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Pj1U0Gv0Edq7X4sGURiZYA" type="_NVhqMGv0Edq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zCjv4Gv3Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zCjv4Wv3Edq7X4sGURiZYA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_674ZYGvzEdq7X4sGURiZYA" name="getNearestPackage" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8qbw8OwbEdqYHf-imTcTdw" annotatedElement="_674ZYGvzEdq7X4sGURiZYA">
          <body>Retrieves the nearest package that owns (either directly or indirectly) this element, or the element itself (if it is a package).</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_DyktQGv0Edq7X4sGURiZYA" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1aQnEGv3Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1aQnEWv3Edq7X4sGURiZYA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_4IIuwKO_Edqi_5gqUMOQtA" name="getRelationships">
        <ownedComment xmi:type="uml:Comment" xmi:id="_znllgOwdEdqYHf-imTcTdw" annotatedElement="_4IIuwKO_Edqi_5gqUMOQtA">
          <body>Retrieves the relationships in which this element is involved.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_OGNIkKPAEdqi_5gqUMOQtA" type="_DH62EKPAEdqi_5gqUMOQtA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R5soUKPAEdqi_5gqUMOQtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R5soUaPAEdqi_5gqUMOQtA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_UJyboKPAEdqi_5gqUMOQtA" name="getRelationships">
        <ownedComment xmi:type="uml:Comment" xmi:id="_1gb9gOwdEdqYHf-imTcTdw" annotatedElement="_UJyboKPAEdqi_5gqUMOQtA">
          <body>Retrieves the relationships of the specified type in which this element is involved.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_UJyboaPAEdqi_5gqUMOQtA" type="_DH62EKPAEdqi_5gqUMOQtA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_UJybo6PAEdqi_5gqUMOQtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UJyboqPAEdqi_5gqUMOQtA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_XBN7wKPAEdqi_5gqUMOQtA" name="eClass" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_mhklsPIBEdulR8T2OJRyFQ" annotatedElement="_XBN7wKPAEdqi_5gqUMOQtA">
            <body>The (meta)type of the relationships to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWizcX_EduPJbEsMYXjUQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_yk3QYHFfEdqziYxiZo0YtA" name="getRequiredStereotype" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-7KA8OwcEdqYHf-imTcTdw" annotatedElement="_yk3QYHFfEdqziYxiZo0YtA">
          <body>Retrieves the stereotype with the specified qualified name that is required for this element, or null if no such stereotype is required.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_8ovJEHFfEdqziYxiZo0YtA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Cpo7kHFgEdqziYxiZo0YtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cpo7kXFgEdqziYxiZo0YtA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_9NGaYHFfEdqziYxiZo0YtA" name="qualifiedName" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_r0tTQPIBEdulR8T2OJRyFQ" annotatedElement="_9NGaYHFfEdqziYxiZo0YtA">
            <body>The qualified name of the required stereotype to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_ko32oHFfEdqziYxiZo0YtA" name="getRequiredStereotypes" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_57OjQOwcEdqYHf-imTcTdw" annotatedElement="_ko32oHFfEdqziYxiZo0YtA">
          <body>Retrieves the stereotypes that are required for this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_qX5O8HFfEdqziYxiZo0YtA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KSF6sHFgEdqziYxiZo0YtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KSF6sXFgEdqziYxiZo0YtA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_fBOfQKPAEdqi_5gqUMOQtA" name="getSourceDirectedRelationships">
        <ownedComment xmi:type="uml:Comment" xmi:id="_5RsBkOwdEdqYHf-imTcTdw" annotatedElement="_fBOfQKPAEdqi_5gqUMOQtA">
          <body>Retrieves the directed relationships for which this element is a source.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_fBOfQaPAEdqi_5gqUMOQtA" type="_JBgfoKPAEdqi_5gqUMOQtA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fBOfQ6PAEdqi_5gqUMOQtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fBOfQqPAEdqi_5gqUMOQtA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_fBOfRKPAEdqi_5gqUMOQtA" name="getSourceDirectedRelationships">
        <ownedComment xmi:type="uml:Comment" xmi:id="_63dskOwdEdqYHf-imTcTdw" annotatedElement="_fBOfRKPAEdqi_5gqUMOQtA">
          <body>Retrieves the directed relationships of the specified type for which this element is a source.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_fBOfRaPAEdqi_5gqUMOQtA" type="_JBgfoKPAEdqi_5gqUMOQtA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fBOfR6PAEdqi_5gqUMOQtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fBOfRqPAEdqi_5gqUMOQtA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_fBOfSKPAEdqi_5gqUMOQtA" name="eClass" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_3TviYPIBEdulR8T2OJRyFQ" annotatedElement="_fBOfSKPAEdqi_5gqUMOQtA">
            <body>The (meta)type of the directed relationships to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWizcX_EduPJbEsMYXjUQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Rw07YGv1Edq7X4sGURiZYA" name="getStereotypeApplication" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_uNjbMOwcEdqYHf-imTcTdw" annotatedElement="_Rw07YGv1Edq7X4sGURiZYA">
          <body>Retrieves the application of the specified stereotype for this element, or null if no such stereotype application exists.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Uw5aIGv1Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWijsX_EduPJbEsMYXjUQ"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4QyvUGv3Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4QyvUWv3Edq7X4sGURiZYA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_VtGjsGv1Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_7ovzwPIBEdulR8T2OJRyFQ" annotatedElement="_VtGjsGv1Edq7X4sGURiZYA">
            <body>The stereotype for which to retrieve an application.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_IFUr8GvgEdq4DLWZOhbdEA" name="getStereotypeApplications" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_hu_owOwcEdqYHf-imTcTdw" annotatedElement="_IFUr8GvgEdq4DLWZOhbdEA">
          <body>Retrieves the stereotype applications for this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_PAVWQGvgEdq4DLWZOhbdEA" direction="return">
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWijsX_EduPJbEsMYXjUQ"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oJqQgGvzEdq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJqQgWvzEdq7X4sGURiZYA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_t5G5gKPAEdqi_5gqUMOQtA" name="getTargetDirectedRelationships">
        <ownedComment xmi:type="uml:Comment" xmi:id="_9qIBcOwdEdqYHf-imTcTdw" annotatedElement="_t5G5gKPAEdqi_5gqUMOQtA">
          <body>Retrieves the directed relationships for which this element is a target.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_t5G5gaPAEdqi_5gqUMOQtA" type="_JBgfoKPAEdqi_5gqUMOQtA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_t5G5g6PAEdqi_5gqUMOQtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t5G5gqPAEdqi_5gqUMOQtA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_t5G5hKPAEdqi_5gqUMOQtA" name="getTargetDirectedRelationships">
        <ownedComment xmi:type="uml:Comment" xmi:id="__rxJEOwdEdqYHf-imTcTdw" annotatedElement="_t5G5hKPAEdqi_5gqUMOQtA">
          <body>Retrieves the directed relationships of the specified type for which this element is a target.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_t5G5haPAEdqi_5gqUMOQtA" type="_JBgfoKPAEdqi_5gqUMOQtA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_t5G5h6PAEdqi_5gqUMOQtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t5G5hqPAEdqi_5gqUMOQtA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_t5G5iKPAEdqi_5gqUMOQtA" name="eClass" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_-J0pYPIBEdulR8T2OJRyFQ" annotatedElement="_t5G5iKPAEdqi_5gqUMOQtA">
            <body>The (meta)type of the directed relationships to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWizcX_EduPJbEsMYXjUQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_WGA9gGv2Edq7X4sGURiZYA" name="getValue" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_jrANAOwdEdqYHf-imTcTdw" annotatedElement="_WGA9gGv2Edq7X4sGURiZYA">
          <body>Retrieves the value of the property with the specified name in the specified stereotype for this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_dYH5MGv2Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="org.eclipse.uml2.uml/Ecore.uml#_SeWkccX_EduPJbEsMYXjUQ"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8gS1oGv3Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8gS1oWv3Edq7X4sGURiZYA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_g41m4Gv2Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_DgsncPICEdulR8T2OJRyFQ" annotatedElement="_g41m4Gv2Edq7X4sGURiZYA">
            <body>The stereotype for which to retrieve the value.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_eZGOAGv2Edq7X4sGURiZYA" name="propertyName" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_DAp1cPICEdulR8T2OJRyFQ" annotatedElement="_eZGOAGv2Edq7X4sGURiZYA">
            <body>The name of the property whose value to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_7f8qYGvgEdq4DLWZOhbdEA" name="hasKeyword" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_vBX6QOwbEdqYHf-imTcTdw" annotatedElement="_7f8qYGvgEdq4DLWZOhbdEA">
          <body>Determines whether this element has the specified keyword.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_9mECUGvgEdq4DLWZOhbdEA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="__FRyUGvgEdq4DLWZOhbdEA" name="keyword" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_Oe9r0PICEdulR8T2OJRyFQ" annotatedElement="__FRyUGvgEdq4DLWZOhbdEA">
            <body>The keyword in question.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JbZFAGv2Edq7X4sGURiZYA" name="hasValue" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_b4HfgOwdEdqYHf-imTcTdw" annotatedElement="_JbZFAGv2Edq7X4sGURiZYA">
          <body>Determines whether this element has a (non-default) value for the property with the specified name in the specified stereotype.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_L6F8EGv2Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_MqEngGv2Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_Zk10EPICEdulR8T2OJRyFQ" annotatedElement="_MqEngGv2Edq7X4sGURiZYA">
            <body>The stereotype for which to test the property.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_RaWfoGv2Edq7X4sGURiZYA" name="propertyName" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_XhkUwPICEdulR8T2OJRyFQ" annotatedElement="_RaWfoGv2Edq7X4sGURiZYA">
            <body>The name of the property in question.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_aAC2wHFfEdqziYxiZo0YtA" name="isStereotypeApplicable" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_ErVFQOwcEdqYHf-imTcTdw" annotatedElement="_aAC2wHFfEdqziYxiZo0YtA">
          <body>Determines whether the specified stereotype is applicable to this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_dR_vsHFfEdqziYxiZo0YtA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_d5o-gHFfEdqziYxiZo0YtA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_bLzx4PICEdulR8T2OJRyFQ" annotatedElement="_d5o-gHFfEdqziYxiZo0YtA">
            <body>The stereotype in question.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_hDDkwGv0Edq7X4sGURiZYA" name="isStereotypeApplied" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_HClQgOwcEdqYHf-imTcTdw" annotatedElement="_hDDkwGv0Edq7X4sGURiZYA">
          <body>Determines whether the specified stereotype is applied to this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_izQ-IGv0Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_jenoQGv0Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_c-11wPICEdulR8T2OJRyFQ" annotatedElement="_jenoQGv0Edq7X4sGURiZYA">
            <body>The stereotype in question.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_nd4TIGv0Edq7X4sGURiZYA" name="isStereotypeRequired" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_GPxTgOwcEdqYHf-imTcTdw" annotatedElement="_nd4TIGv0Edq7X4sGURiZYA">
          <body>Determines whether the specified stereotype is required for this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_A-TZYGv1Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_0weVIGv1Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_gsqLUPICEdulR8T2OJRyFQ" annotatedElement="_0weVIGv1Edq7X4sGURiZYA">
            <body>The stereotype in question.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_qB6tQGvgEdq4DLWZOhbdEA" name="removeKeyword">
        <ownedComment xmi:type="uml:Comment" xmi:id="_4b-zgOwbEdqYHf-imTcTdw" annotatedElement="_qB6tQGvgEdq4DLWZOhbdEA">
          <body>Removes the specified keyword from this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_1_Pa4GvgEdq4DLWZOhbdEA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_3u_hQGvgEdq4DLWZOhbdEA" name="keyword" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_79s6oPICEdulR8T2OJRyFQ" annotatedElement="_3u_hQGvgEdq4DLWZOhbdEA">
            <body>The keyword to remove.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_nMWzYGv2Edq7X4sGURiZYA" name="setValue">
        <ownedComment xmi:type="uml:Comment" xmi:id="_qqfHoOwdEdqYHf-imTcTdw" annotatedElement="_nMWzYGv2Edq7X4sGURiZYA">
          <body>Sets the value of the property with the specified name in the specified stereotype for this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_resLQGv2Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_DkshMPIDEdulR8T2OJRyFQ" annotatedElement="_resLQGv2Edq7X4sGURiZYA">
            <body>The stereotype for which to set the value.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_o6B2IGv2Edq7X4sGURiZYA" name="propertyName" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_BIFU0PIDEdulR8T2OJRyFQ" annotatedElement="_o6B2IGv2Edq7X4sGURiZYA">
            <body>The name of the property whose value to set.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_m5bH4GzIEdqNr-AKm4G4QQ" name="newValue" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_9wvlkPICEdulR8T2OJRyFQ" annotatedElement="_m5bH4GzIEdqNr-AKm4G4QQ">
            <body>The new value for the property.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="org.eclipse.uml2.uml/Ecore.uml#_SeWkccX_EduPJbEsMYXjUQ"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_LUETUGv1Edq7X4sGURiZYA" name="unapplyStereotype">
        <ownedComment xmi:type="uml:Comment" xmi:id="_MSdOsOwcEdqYHf-imTcTdw" annotatedElement="_LUETUGv1Edq7X4sGURiZYA">
          <body>Unapplies the specified stereotype from this element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_NqRVsGv1Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWijsX_EduPJbEsMYXjUQ"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_OI9c0Gv1Edq7X4sGURiZYA" name="stereotype" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_FrjgAPIDEdulR8T2OJRyFQ" annotatedElement="_OI9c0Gv1Edq7X4sGURiZYA">
            <body>The stereotype to unapply.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JcZoUO5rEearKK0ZImZXdA" name="allOwnedElements" bodyCondition="_JcZoUu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZoUe5rEearKK0ZImZXdA" annotatedElement="_JcZoUO5rEearKK0ZImZXdA">
          <body>The query allOwnedElements() gives all of the direct and indirect ownedElements of an Element.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JcZoUu5rEearKK0ZImZXdA" name="spec" constrainedElement="_JcZoUO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcZoU-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))->asSet())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcZoVO5rEearKK0ZImZXdA" name="result" type="_kl90MGvbEdq4DLWZOhbdEA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcZoVe5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcZoVu5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JcZoV-5rEearKK0ZImZXdA" name="mustBeOwned" bodyCondition="_JcZoWe5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcZoWO5rEearKK0ZImZXdA" annotatedElement="_JcZoV-5rEearKK0ZImZXdA">
          <body>The query mustBeOwned() indicates whether Elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JcZoWe5rEearKK0ZImZXdA" name="spec" constrainedElement="_JcZoV-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcZoWu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (true)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcZoW-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RPl78GwIEdq7X4sGURiZYA" name="ElementImport">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcZoXO5rEearKK0ZImZXdA" annotatedElement="_RPl78GwIEdq7X4sGURiZYA">
        <body>An ElementImport identifies a NamedElement in a Namespace other than the one that owns that NamedElement and allows the NamedElement to be referenced using an unqualified name in the Namespace owning the ElementImport.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcaPYO5rEearKK0ZImZXdA" name="imported_element_is_public" constrainedElement="_RPl78GwIEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPYe5rEearKK0ZImZXdA" annotatedElement="_JcaPYO5rEearKK0ZImZXdA">
          <body>An importedElement has either public visibility or no visibility at all.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcaPYu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>importedElement.visibility &lt;> null implies importedElement.visibility = VisibilityKind::public</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcaPY-5rEearKK0ZImZXdA" name="visibility_public_or_private" constrainedElement="_RPl78GwIEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPZO5rEearKK0ZImZXdA" annotatedElement="_JcaPY-5rEearKK0ZImZXdA">
          <body>The visibility of an ElementImport is either public or private.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcaPZe5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>visibility = VisibilityKind::public or visibility = VisibilityKind::private</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcaPZu5rEearKK0ZImZXdA" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_fO7PkLG0EeCDe8CO90iVKQ" name="alias">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPZ-5rEearKK0ZImZXdA" annotatedElement="_fO7PkLG0EeCDe8CO90iVKQ">
          <body>Specifies the name that should be added to the importing Namespace in lieu of the name of the imported PackagableElement. The alias must not clash with any other member in the importing Namespace. By default, no alias is used.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcaPaO5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcaPae5rEearKK0ZImZXdA" name="importedElement" type="_jKxnwGwLEdq7X4sGURiZYA" subsettedProperty="_JcZBTO5rEearKK0ZImZXdA" association="_JciLNu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPau5rEearKK0ZImZXdA" annotatedElement="_JcaPae5rEearKK0ZImZXdA">
          <body>Specifies the PackageableElement whose name is to be added to a Namespace.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcaPa-5rEearKK0ZImZXdA" name="importingNamespace" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_JcZBSe5rEearKK0ZImZXdA _N3hRMAtAEeGcpbeCPJfCmw" association="_JchkMO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPbO5rEearKK0ZImZXdA" annotatedElement="_JcaPa-5rEearKK0ZImZXdA">
          <body>Specifies the Namespace that imports a PackageableElement from another Namespace.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcaPbe5rEearKK0ZImZXdA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPbu5rEearKK0ZImZXdA" annotatedElement="_JcaPbe5rEearKK0ZImZXdA">
          <body>Specifies the visibility of the imported PackageableElement within the importingNamespace, i.e., whether the  importedElement will in turn be visible to other Namespaces. If the ElementImport is public, the importedElement will be visible outside the importingNamespace while, if the ElementImport is private, it will not.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_JcaPb-5rEearKK0ZImZXdA" type="_AyM_oGwMEdq7X4sGURiZYA" instance="_6pIAcH2aEeSVK_cyXH-KWw"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JcaPcO5rEearKK0ZImZXdA" name="getName" bodyCondition="_JcaPcu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPce5rEearKK0ZImZXdA" annotatedElement="_JcaPcO5rEearKK0ZImZXdA">
          <body>The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JcaPcu5rEearKK0ZImZXdA" name="spec" constrainedElement="_JcaPcO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcaPc-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (if alias->notEmpty() then
  alias
else
  importedElement.name
endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcaPdO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Gjgl0GveEdq4DLWZOhbdEA" name="MultiplicityElement" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPde5rEearKK0ZImZXdA" annotatedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <body>A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A MultiplicityElement embeds this information to specify the allowable cardinalities for an instantiation of the Element.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcaPdu5rEearKK0ZImZXdA" name="upper_ge_lower" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPd-5rEearKK0ZImZXdA" annotatedElement="_JcaPdu5rEearKK0ZImZXdA">
          <body>The upper bound must be greater than or equal to the lower bound.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcaPeO5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>upperBound() >= lowerBound()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcaPee5rEearKK0ZImZXdA" name="lower_ge_0" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPeu5rEearKK0ZImZXdA" annotatedElement="_JcaPee5rEearKK0ZImZXdA">
          <body>The lower bound must be a non-negative integer literal.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcaPe-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>lowerBound() >= 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcaPfO5rEearKK0ZImZXdA" name="value_specification_no_side_effects" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPfe5rEearKK0ZImZXdA" annotatedElement="_JcaPfO5rEearKK0ZImZXdA">
          <body>If a non-literal ValueSpecification is used for lowerValue or upperValue, then evaluating that specification must not have side effects.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcaPfu5rEearKK0ZImZXdA" language=""/>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcaPf-5rEearKK0ZImZXdA" name="value_specification_constant" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcaPgO5rEearKK0ZImZXdA" annotatedElement="_JcaPf-5rEearKK0ZImZXdA">
          <body>If a non-literal ValueSpecification is used for lowerValue or upperValue, then that specification must be a constant expression.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcaPge5rEearKK0ZImZXdA" language=""/>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcaPgu5rEearKK0ZImZXdA" name="lower_is_integer" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2cO5rEearKK0ZImZXdA" annotatedElement="_JcaPgu5rEearKK0ZImZXdA">
          <body>If it is not empty, then lowerValue must have an Integer value.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jca2ce5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>lowerValue &lt;> null implies lowerValue.integerValue() &lt;> null</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_Jca2cu5rEearKK0ZImZXdA" name="upper_is_unlimitedNatural" constrainedElement="_Gjgl0GveEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2c-5rEearKK0ZImZXdA" annotatedElement="_Jca2cu5rEearKK0ZImZXdA">
          <body>If it is not empty, then upperValue must have an UnlimitedNatural value.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jca2dO5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>upperValue &lt;> null implies upperValue.unlimitedValue() &lt;> null</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_Jca2de5rEearKK0ZImZXdA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jca2du5rEearKK0ZImZXdA" name="isOrdered">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2d-5rEearKK0ZImZXdA" annotatedElement="_Jca2du5rEearKK0ZImZXdA">
          <body>For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this MultiplicityElement are sequentially ordered.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Jca2eO5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jca2ee5rEearKK0ZImZXdA" name="isUnique">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2eu5rEearKK0ZImZXdA" annotatedElement="_Jca2ee5rEearKK0ZImZXdA">
          <body>For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this MultiplicityElement are unique.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_Jca2e-5rEearKK0ZImZXdA" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_5i6zsIRPEeOnobsWSpJONg" name="lower" isDerived="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2fO5rEearKK0ZImZXdA" annotatedElement="_5i6zsIRPEeOnobsWSpJONg">
          <body>The lower bound of the multiplicity interval.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_VRJOQIRQEeOnobsWSpJONg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jca2fe5rEearKK0ZImZXdA" name="lowerValue" type="_JdXRr-5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JciLMO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2fu5rEearKK0ZImZXdA" annotatedElement="_Jca2fe5rEearKK0ZImZXdA">
          <body>The specification of the lower bound for this multiplicity.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jca2f-5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_ZQJacIRQEeOnobsWSpJONg" name="upper" isDerived="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2gO5rEearKK0ZImZXdA" annotatedElement="_ZQJacIRQEeOnobsWSpJONg">
          <body>The upper bound of the multiplicity interval.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
        <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ffIFMIRQEeOnobsWSpJONg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jca2ge5rEearKK0ZImZXdA" name="upperValue" type="_JdXRr-5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JciLM-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2gu5rEearKK0ZImZXdA" annotatedElement="_Jca2ge5rEearKK0ZImZXdA">
          <body>The specification of the upper bound for this multiplicity.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jca2g-5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_qtCaIFYkEdqB6vblk3tuMA" name="setLower" visibility="protected">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_scWboFYkEdqB6vblk3tuMA" name="newLower" visibility="protected" effect="read">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_vlEgEFYkEdqB6vblk3tuMA" name="setUpper" visibility="protected">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_xJp4QFYkEdqB6vblk3tuMA" name="newUpper" visibility="protected" effect="read">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jca2hO5rEearKK0ZImZXdA" name="compatibleWith" bodyCondition="_Jca2hu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2he5rEearKK0ZImZXdA" annotatedElement="_Jca2hO5rEearKK0ZImZXdA">
          <body>The operation compatibleWith takes another multiplicity as input. It returns true if the other multiplicity is wider than, or the same as, self.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jca2hu5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jca2hO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jca2h-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = ((other.lowerBound() &lt;= self.lowerBound()) and ((other.upperBound() = *) or (self.upperBound() &lt;= other.upperBound())))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jca2iO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jca2ie5rEearKK0ZImZXdA" name="other" type="_Gjgl0GveEdq4DLWZOhbdEA"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jca2iu5rEearKK0ZImZXdA" name="includesMultiplicity" bodyCondition="_Jca2ju5rEearKK0ZImZXdA" isQuery="true" precondition="_Jca2jO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2i-5rEearKK0ZImZXdA" annotatedElement="_Jca2iu5rEearKK0ZImZXdA">
          <body>The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jca2jO5rEearKK0ZImZXdA" name="pre" constrainedElement="_Jca2iu5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jca2je5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jca2ju5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jca2iu5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jca2j-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = ((self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound()))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jca2kO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jca2ke5rEearKK0ZImZXdA" name="M" type="_Gjgl0GveEdq4DLWZOhbdEA"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jca2ku5rEearKK0ZImZXdA" name="is" bodyCondition="_Jca2lO5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2k-5rEearKK0ZImZXdA" annotatedElement="_Jca2ku5rEearKK0ZImZXdA">
          <body>The operation is determines if the upper and lower bound of the ranges are the ones given.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jca2lO5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jca2ku5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jca2le5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (lowerbound = self.lowerBound() and upperbound = self.upperBound())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jca2lu5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jca2l-5rEearKK0ZImZXdA" name="lowerbound">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jca2mO5rEearKK0ZImZXdA" name="upperbound">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jca2me5rEearKK0ZImZXdA" name="isMultivalued" bodyCondition="_Jca2ne5rEearKK0ZImZXdA" isQuery="true" precondition="_Jca2m-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jca2mu5rEearKK0ZImZXdA" annotatedElement="_Jca2me5rEearKK0ZImZXdA">
          <body>The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jca2m-5rEearKK0ZImZXdA" name="pre" constrainedElement="_Jca2me5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jca2nO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>upperBound()->notEmpty()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jca2ne5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jca2me5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jca2nu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (upperBound() > 1)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jca2n-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Y8IpELL3EeCBifIhhuFqZA" name="lower" visibility="protected" bodyCondition="_Jcbdge5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcbdgO5rEearKK0ZImZXdA" annotatedElement="_Y8IpELL3EeCBifIhhuFqZA">
          <body>The derived lower attribute must equal the lowerBound.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcbdge5rEearKK0ZImZXdA" name="spec" constrainedElement="_Y8IpELL3EeCBifIhhuFqZA _5i6zsIRPEeOnobsWSpJONg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jcbdgu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (lowerBound())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Y8IpEbL3EeCBifIhhuFqZA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcbdg-5rEearKK0ZImZXdA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JcbdhO5rEearKK0ZImZXdA" name="lowerBound" bodyCondition="_Jcbdhu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcbdhe5rEearKK0ZImZXdA" annotatedElement="_JcbdhO5rEearKK0ZImZXdA">
          <body>The query lowerBound() returns the lower bound of the multiplicity as an integer, which is the integerValue of lowerValue, if this is given, and 1 otherwise.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcbdhu5rEearKK0ZImZXdA" name="spec" constrainedElement="_JcbdhO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jcbdh-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (if (lowerValue=null or lowerValue.integerValue()=null) then 1 else lowerValue.integerValue() endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcbdiO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_a_qnELL3EeCBifIhhuFqZA" name="upper" visibility="protected" bodyCondition="_Jcbdiu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcbdie5rEearKK0ZImZXdA" annotatedElement="_a_qnELL3EeCBifIhhuFqZA">
          <body>The derived upper attribute must equal the upperBound.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcbdiu5rEearKK0ZImZXdA" name="spec" constrainedElement="_a_qnELL3EeCBifIhhuFqZA _ZQJacIRQEeOnobsWSpJONg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jcbdi-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (upperBound())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_a_qnEbL3EeCBifIhhuFqZA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcbdjO5rEearKK0ZImZXdA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jcbdje5rEearKK0ZImZXdA" name="upperBound" bodyCondition="_Jcbdj-5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcbdju5rEearKK0ZImZXdA" annotatedElement="_Jcbdje5rEearKK0ZImZXdA">
          <body>The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural, which is the unlimitedNaturalValue of upperValue, if given, and 1, otherwise.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcbdj-5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jcbdje5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcbdkO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (if (upperValue=null or upperValue.unlimitedValue()=null) then 1 else upperValue.unlimitedValue() endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcbdke5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_csVgUGvtEdqG6fBIPwe-mw" name="NamedElement" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JccEkO5rEearKK0ZImZXdA" annotatedElement="_csVgUGvtEdqG6fBIPwe-mw">
        <body>A NamedElement is an Element in a model that may have a name. The name may be given directly and/or via the use of a StringExpression.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JccEke5rEearKK0ZImZXdA" name="visibility_needs_ownership" constrainedElement="_csVgUGvtEdqG6fBIPwe-mw">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccEku5rEearKK0ZImZXdA" annotatedElement="_JccEke5rEearKK0ZImZXdA">
          <body>If a NamedElement is owned by something other than a Namespace, it does not have a visibility. One that is not owned by anything (and hence must be a Package, as this is the only kind of NamedElement that overrides mustBeOwned()) may have a visibility.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JccEk-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>(namespace = null and owner &lt;> null) implies visibility = null</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JccElO5rEearKK0ZImZXdA" name="has_qualified_name" constrainedElement="_csVgUGvtEdqG6fBIPwe-mw">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccEle5rEearKK0ZImZXdA" annotatedElement="_JccElO5rEearKK0ZImZXdA">
          <body>When there is a name, and all of the containing Namespaces have a name, the qualifiedName is constructed from the name of the NamedElement and the names of the containing Namespaces.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JccElu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>(name &lt;> null and allNamespaces()->select(ns | ns.name = null)->isEmpty()) implies
  qualifiedName = allNamespaces()->iterate( ns : Namespace; agg: String = name | ns.name.concat(self.separator()).concat(agg))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JccEl-5rEearKK0ZImZXdA" name="has_no_qualified_name" constrainedElement="_csVgUGvtEdqG6fBIPwe-mw">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccEmO5rEearKK0ZImZXdA" annotatedElement="_JccEl-5rEearKK0ZImZXdA">
          <body>If there is no name, or one of the containing Namespaces has no name, there is no qualifiedName.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JccEme5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>name=null or allNamespaces()->select( ns | ns.name=null )->notEmpty() implies qualifiedName = null</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JccEmu5rEearKK0ZImZXdA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_A9YUsIUBEeOxOrTbpQATOA" name="clientDependency" type="_rEDGkGwKEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" subsettedProperty="_JciLPu5rEearKK0ZImZXdA" association="_5mgloAx5Eeat1-DywZGp2A">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccEm-5rEearKK0ZImZXdA" annotatedElement="_A9YUsIUBEeOxOrTbpQATOA">
          <body>Indicates the Dependencies that reference this NamedElement as a client.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JccEnO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JccEne5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8n2t4LGzEeCDe8CO90iVKQ" name="name">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccEnu5rEearKK0ZImZXdA" annotatedElement="_8n2t4LGzEeCDe8CO90iVKQ">
          <body>The name of the NamedElement.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JccEn-5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JccEoO5rEearKK0ZImZXdA" name="nameExpression" type="_JdWqkO5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JchkPO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccEoe5rEearKK0ZImZXdA" annotatedElement="_JccEoO5rEearKK0ZImZXdA">
          <body>The StringExpression used to define the name of this NamedElement.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JccEou5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_1vzv0LbIEeCRxrN1JUGuxA" name="namespace" type="_ZiwkoGwLEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_JchkNe5rEearKK0ZImZXdA _N3hRMAtAEeGcpbeCPJfCmw" association="_JchkMe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccEo-5rEearKK0ZImZXdA" annotatedElement="_1vzv0LbIEeCRxrN1JUGuxA">
          <body>Specifies the Namespace that owns the NamedElement.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JccEpO5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JccEpe5rEearKK0ZImZXdA" name="qualifiedName" isReadOnly="true" isDerived="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccEpu5rEearKK0ZImZXdA" annotatedElement="_JccEpe5rEearKK0ZImZXdA">
          <body>A name that allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing Namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JccEp-5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_PfdtELG0EeCDe8CO90iVKQ" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccEqO5rEearKK0ZImZXdA" annotatedElement="_PfdtELG0EeCDe8CO90iVKQ">
          <body>Determines whether and how the NamedElement is visible outside its owning Namespace.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JccEqe5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_o2CW4GwKEdq7X4sGURiZYA" name="createDependency">
        <ownedComment xmi:type="uml:Comment" xmi:id="_kZ5L8OwgEdqYHf-imTcTdw" annotatedElement="_o2CW4GwKEdq7X4sGURiZYA">
          <body>Creates a dependency between this named element and the specified supplier, owned by this named element's nearest package.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_us8f4GwKEdq7X4sGURiZYA" type="_rEDGkGwKEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_vYdiEGwKEdq7X4sGURiZYA" name="supplier" type="_csVgUGvtEdqG6fBIPwe-mw" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_z0MAYPIDEdulR8T2OJRyFQ" annotatedElement="_vYdiEGwKEdq7X4sGURiZYA">
            <body>The supplier for the new dependency.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Dww9MNlrEduDKPkA-0jJZg" name="createUsage">
        <ownedComment xmi:type="uml:Comment" xmi:id="_wQPHYNlrEduDKPkA-0jJZg" annotatedElement="_Dww9MNlrEduDKPkA-0jJZg">
          <body>Creates a usage between this named element and the specified supplier, owned by this named element's nearest package.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_phglkNlrEduDKPkA-0jJZg" type="_h18oENlrEduDKPkA-0jJZg" direction="return"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_xcQ1oNlrEduDKPkA-0jJZg" name="supplier" type="_csVgUGvtEdqG6fBIPwe-mw">
          <ownedComment xmi:type="uml:Comment" xmi:id="_05e0gPIDEdulR8T2OJRyFQ" annotatedElement="_xcQ1oNlrEduDKPkA-0jJZg">
            <body>The supplier for the new usage.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_z4f-wGwKEdq7X4sGURiZYA" name="getLabel" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_pnOzgOwgEdqYHf-imTcTdw" annotatedElement="_z4f-wGwKEdq7X4sGURiZYA">
          <body>Retrieves a localized label for this named element.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_1p5q8GwKEdq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_34WfgGwKEdq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_34WfgWwKEdq7X4sGURiZYA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_5KmxkGwKEdq7X4sGURiZYA" name="getLabel" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_rCa_IOwgEdqYHf-imTcTdw" annotatedElement="_5KmxkGwKEdq7X4sGURiZYA">
          <body>Retrieves a label for this named element, localized if indicated.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_5KmxkWwKEdq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5Kmxk2wKEdq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5KmxkmwKEdq7X4sGURiZYA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_6FwyQGwKEdq7X4sGURiZYA" name="localize" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_3OVzEPIDEdulR8T2OJRyFQ" annotatedElement="_6FwyQGwKEdq7X4sGURiZYA">
            <body>Whether to localize the label.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_qV1f0LL3EeCBifIhhuFqZA" name="namespace" visibility="protected">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_tdXRcLL3EeCBifIhhuFqZA" name="result" type="_ZiwkoGwLEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_tdXRcbL3EeCBifIhhuFqZA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JccroO5rEearKK0ZImZXdA" name="allNamespaces" bodyCondition="_Jccrou5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jccroe5rEearKK0ZImZXdA" annotatedElement="_JccroO5rEearKK0ZImZXdA">
          <body>The query allNamespaces() gives the sequence of Namespaces in which the NamedElement is nested, working outwards.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jccrou5rEearKK0ZImZXdA" name="spec" constrainedElement="_JccroO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jccro-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (
if owner = null
  then OrderedSet{}
else
  let enclosingNamespace : Namespace =
    if owner.oclIsKindOf(TemplateParameter) and owner.oclAsType(TemplateParameter).signature.template.oclIsKindOf(Namespace)
      then owner.oclAsType(TemplateParameter).signature.template.oclAsType(Namespace)
    else
      namespace
    endif
  in enclosingNamespace.allNamespaces()->prepend(enclosingNamespace)
endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JccrpO5rEearKK0ZImZXdA" name="result" type="_ZiwkoGwLEdq7X4sGURiZYA" isOrdered="true" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jccrpe5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jccrpu5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jccrp-5rEearKK0ZImZXdA" name="allOwningPackages" bodyCondition="_Jccrqe5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JccrqO5rEearKK0ZImZXdA" annotatedElement="_Jccrp-5rEearKK0ZImZXdA">
          <body>The query allOwningPackages() returns the set of all the enclosing Namespaces of this NamedElement, working outwards, that are Packages, up to but not including the first such Namespace that is not a Package.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jccrqe5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jccrp-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jccrqu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (if namespace.oclIsKindOf(Package)&#xD;
then&#xD;
  let owningPackage : Package = namespace.oclAsType(Package) in&#xD;
    owningPackage->union(owningPackage.allOwningPackages())&#xD;
else&#xD;
  null&#xD;
endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jccrq-5rEearKK0ZImZXdA" name="result" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JccrrO5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jccrre5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jccrru5rEearKK0ZImZXdA" name="isDistinguishableFrom" bodyCondition="_JccrsO5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jccrr-5rEearKK0ZImZXdA" annotatedElement="_Jccrru5rEearKK0ZImZXdA">
          <body>The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have types neither of which is a kind of the other or (b) they have different names.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JccrsO5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jccrru5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jccrse5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = ((self.oclIsKindOf(n.oclType()) or n.oclIsKindOf(self.oclType())) implies
    ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()
)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jccrsu5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jccrs-5rEearKK0ZImZXdA" name="n" type="_csVgUGvtEdqG6fBIPwe-mw"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JccrtO5rEearKK0ZImZXdA" name="ns" type="_ZiwkoGwLEdq7X4sGURiZYA"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_8RZtgLL3EeCBifIhhuFqZA" name="qualifiedName" visibility="protected" bodyCondition="_Jccrtu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jccrte5rEearKK0ZImZXdA" annotatedElement="_8RZtgLL3EeCBifIhhuFqZA">
          <body>When a NamedElement has a name, and all of its containing Namespaces have a name, the qualifiedName is constructed from the name of the NamedElement and the names of the containing Namespaces.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jccrtu5rEearKK0ZImZXdA" name="spec" constrainedElement="_8RZtgLL3EeCBifIhhuFqZA _JccEpe5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jccrt-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (if self.name &lt;> null and self.allNamespaces()->select( ns | ns.name=null )->isEmpty()
then 
    self.allNamespaces()->iterate( ns : Namespace; agg: String = self.name | ns.name.concat(self.separator()).concat(agg))
else
   null
endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_BRx3ILL4EeCBifIhhuFqZA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_BRyeMLL4EeCBifIhhuFqZA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JccruO5rEearKK0ZImZXdA" name="separator" bodyCondition="_Jccruu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jccrue5rEearKK0ZImZXdA" annotatedElement="_JccruO5rEearKK0ZImZXdA">
          <body>The query separator() gives the string that is used to separate names when constructing a qualifiedName.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jccruu5rEearKK0ZImZXdA" name="spec" constrainedElement="_JccruO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jccru-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = ('::')</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JccrvO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_uR4xEIRfEeOrzvVsV3Q4sA" name="clientDependency" visibility="protected" bodyCondition="_Jccrve5rEearKK0ZImZXdA" isQuery="true">
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jccrve5rEearKK0ZImZXdA" name="spec" constrainedElement="_uR4xEIRfEeOrzvVsV3Q4sA _A9YUsIUBEeOxOrTbpQATOA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jccrvu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (Dependency.allInstances()->select(d | d.client->includes(self)))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_uR4xE4RfEeOrzvVsV3Q4sA" name="result" type="_rEDGkGwKEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jccrv-5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JccrwO5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZiwkoGwLEdq7X4sGURiZYA" name="Namespace" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcdSsO5rEearKK0ZImZXdA" annotatedElement="_ZiwkoGwLEdq7X4sGURiZYA">
        <body>A Namespace is an Element in a model that owns and/or imports a set of NamedElements that can be identified by name.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcdSse5rEearKK0ZImZXdA" name="members_distinguishable" constrainedElement="_ZiwkoGwLEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcdSsu5rEearKK0ZImZXdA" annotatedElement="_JcdSse5rEearKK0ZImZXdA">
          <body>All the members of a Namespace are distinguishable within it.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcdSs-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>membersAreDistinguishable()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcdStO5rEearKK0ZImZXdA" name="cannot_import_self" constrainedElement="_ZiwkoGwLEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcdSte5rEearKK0ZImZXdA" annotatedElement="_JcdStO5rEearKK0ZImZXdA">
          <body>A Namespace cannot have a PackageImport to itself.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcdStu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>packageImport.importedPackage.oclAsType(Namespace)->excludes(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JcdSt-5rEearKK0ZImZXdA" name="cannot_import_ownedMembers" constrainedElement="_ZiwkoGwLEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcdSuO5rEearKK0ZImZXdA" annotatedElement="_JcdSt-5rEearKK0ZImZXdA">
          <body>A Namespace cannot have an ElementImport to one of its ownedMembers.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcdSue5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>elementImport.importedElement.oclAsType(Element)->excludesAll(ownedMember)</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcdSuu5rEearKK0ZImZXdA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcdSu-5rEearKK0ZImZXdA" name="elementImport" type="_RPl78GwIEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_JciLPu5rEearKK0ZImZXdA _GDD2YAtAEeGcpbeCPJfCmw" association="_JchkMO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcdSvO5rEearKK0ZImZXdA" annotatedElement="_JcdSu-5rEearKK0ZImZXdA">
          <body>References the ElementImports owned by the Namespace.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcdSve5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcdSvu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcdSv-5rEearKK0ZImZXdA" name="importedMember" type="_jKxnwGwLEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" subsettedProperty="_JcdSw-5rEearKK0ZImZXdA" association="_JchkOO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcdSwO5rEearKK0ZImZXdA" annotatedElement="_JcdSv-5rEearKK0ZImZXdA">
          <body>References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcdSwe5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcdSwu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcdSw-5rEearKK0ZImZXdA" name="member" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_JchkNO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcdSxO5rEearKK0ZImZXdA" annotatedElement="_JcdSw-5rEearKK0ZImZXdA">
          <body>A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcdSxe5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcdSxu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcdSx-5rEearKK0ZImZXdA" name="ownedMember" type="_csVgUGvtEdqG6fBIPwe-mw" isReadOnly="true" aggregation="composite" isDerived="true" isDerivedUnion="true" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw _JcdSw-5rEearKK0ZImZXdA" association="_JchkMe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcdSyO5rEearKK0ZImZXdA" annotatedElement="_JcdSx-5rEearKK0ZImZXdA">
          <body>A collection of NamedElements owned by the Namespace.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcdSye5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcdSyu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcdSy-5rEearKK0ZImZXdA" name="ownedRule" type="_JcYaPu5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_JcdSx-5rEearKK0ZImZXdA" association="_JchkMu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcdSzO5rEearKK0ZImZXdA" annotatedElement="_JcdSy-5rEearKK0ZImZXdA">
          <body>Specifies a set of Constraints owned by this Namespace.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JcdSze5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcdSzu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jcd5wO5rEearKK0ZImZXdA" name="packageImport" type="_SnNPIGwIEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_JciLPu5rEearKK0ZImZXdA _GDD2YAtAEeGcpbeCPJfCmw" association="_JchkM-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcd5we5rEearKK0ZImZXdA" annotatedElement="_Jcd5wO5rEearKK0ZImZXdA">
          <body>References the PackageImports owned by the Namespace.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcd5wu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jcd5w-5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_vI18QGwLEdq7X4sGURiZYA" name="createElementImport">
        <ownedComment xmi:type="uml:Comment" xmi:id="_sdLToOwlEdqYHf-imTcTdw" annotatedElement="_vI18QGwLEdq7X4sGURiZYA">
          <body>Creates an import of the specified element into this namespace with the specified visibility.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_xwes4GwLEdq7X4sGURiZYA" type="_RPl78GwIEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_yOllMGwLEdq7X4sGURiZYA" name="element" type="_jKxnwGwLEdq7X4sGURiZYA" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_5dZroPIDEdulR8T2OJRyFQ" annotatedElement="_yOllMGwLEdq7X4sGURiZYA">
            <body>The element to import.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_9mppoGwLEdq7X4sGURiZYA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_8P62kPIDEdulR8T2OJRyFQ" annotatedElement="_9mppoGwLEdq7X4sGURiZYA">
            <body>The visibility for the new element import.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_FRpmcGwMEdq7X4sGURiZYA" name="createPackageImport">
        <ownedComment xmi:type="uml:Comment" xmi:id="_t-ofUOwlEdqYHf-imTcTdw" annotatedElement="_FRpmcGwMEdq7X4sGURiZYA">
          <body>Creates an import of the specified package into this namespace with the specified visibility.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_IdWGYGwMEdq7X4sGURiZYA" type="_SnNPIGwIEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_RsevcGwMEdq7X4sGURiZYA" name="package_" type="_-cvRAGvzEdq7X4sGURiZYA" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_-NYo0PIDEdulR8T2OJRyFQ" annotatedElement="_RsevcGwMEdq7X4sGURiZYA">
            <body>The package to import.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_OxwqwGwMEdq7X4sGURiZYA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_CiGmUPIEEdulR8T2OJRyFQ" annotatedElement="_OxwqwGwMEdq7X4sGURiZYA">
            <body>The visibility for the new package import.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_aoDYwGwLEdq7X4sGURiZYA" name="getImportedElements" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_zNDPgOwmEdqYHf-imTcTdw" annotatedElement="_aoDYwGwLEdq7X4sGURiZYA">
          <body>Retrieves the elements imported by this namespace.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_mL5PYGwLEdq7X4sGURiZYA" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_n-CicGwLEdq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-CicWwLEdq7X4sGURiZYA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_2OvA4GwLEdq7X4sGURiZYA" name="getImportedPackages" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_0UuCMOwmEdqYHf-imTcTdw" annotatedElement="_2OvA4GwLEdq7X4sGURiZYA">
          <body>Retrieves the packages imported by this namespace.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_40lo0GwLEdq7X4sGURiZYA" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6sF9AGwLEdq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6sF9AWwLEdq7X4sGURiZYA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_aGIhkLL4EeCBifIhhuFqZA" name="ownedMember" visibility="protected">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_aGIhkbL4EeCBifIhhuFqZA" name="result" type="_csVgUGvtEdqG6fBIPwe-mw" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aGIhk7L4EeCBifIhhuFqZA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aGIhkrL4EeCBifIhhuFqZA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jcd5xO5rEearKK0ZImZXdA" name="excludeCollisions" bodyCondition="_Jcd5xu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcd5xe5rEearKK0ZImZXdA" annotatedElement="_Jcd5xO5rEearKK0ZImZXdA">
          <body>The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this Namespace.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcd5xu5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jcd5xO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jcd5x-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (imps->reject(imp1  | imps->exists(imp2 | not imp1.isDistinguishableFrom(imp2, self))))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcd5yO5rEearKK0ZImZXdA" name="result" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcd5ye5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jcd5yu5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcd5y-5rEearKK0ZImZXdA" name="imps" type="_jKxnwGwLEdq7X4sGURiZYA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcd5zO5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jcd5ze5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jcd5zu5rEearKK0ZImZXdA" name="getNamesOfMember" bodyCondition="_Jcd50O5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcd5z-5rEearKK0ZImZXdA" annotatedElement="_Jcd5zu5rEearKK0ZImZXdA">
          <body>The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace, taking importing into account. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcd50O5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jcd5zu5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jcd50e5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (if self.ownedMember ->includes(element)
then Set{element.name}
else let elementImports : Set(ElementImport) = self.elementImport->select(ei | ei.importedElement = element) in
  if elementImports->notEmpty()
  then
     elementImports->collect(el | el.getName())->asSet()
  else 
     self.packageImport->select(pi | pi.importedPackage.visibleMembers().oclAsType(NamedElement)->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))->asSet()
  endif
endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcd50u5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcd50-5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jcd51O5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcd51e5rEearKK0ZImZXdA" name="element" type="_csVgUGvtEdqG6fBIPwe-mw"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jcd51u5rEearKK0ZImZXdA" name="importMembers" bodyCondition="_Jcd52O5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcd51-5rEearKK0ZImZXdA" annotatedElement="_Jcd51u5rEearKK0ZImZXdA">
          <body>The query importMembers() defines which of a set of PackageableElements are actually imported into the Namespace. This excludes hidden ones, i.e., those which have names that conflict with names of ownedMembers, and it also excludes PackageableElements that would have the indistinguishable names when imported.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcd52O5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jcd51u5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jcd52e5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem | imp.isDistinguishableFrom(mem, self))))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcd52u5rEearKK0ZImZXdA" name="result" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcd52-5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jcd53O5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcd53e5rEearKK0ZImZXdA" name="imps" type="_jKxnwGwLEdq7X4sGURiZYA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcd53u5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jcd53-5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_OanVoLL4EeCBifIhhuFqZA" name="importedMember" visibility="protected" bodyCondition="_Jcd54e5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcd54O5rEearKK0ZImZXdA" annotatedElement="_OanVoLL4EeCBifIhhuFqZA">
          <body>The importedMember property is derived as the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcd54e5rEearKK0ZImZXdA" name="spec" constrainedElement="_OanVoLL4EeCBifIhhuFqZA _JcdSv-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jcd54u5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (self.importMembers(elementImport.importedElement->asSet()->union(packageImport.importedPackage->collect(p | p.visibleMembers()))->asSet()))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_RAhn8LL4EeCBifIhhuFqZA" name="result" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcd54-5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jcd55O5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jcd55e5rEearKK0ZImZXdA" name="membersAreDistinguishable" bodyCondition="_Jcd55-5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcd55u5rEearKK0ZImZXdA" annotatedElement="_Jcd55e5rEearKK0ZImZXdA">
          <body>The Boolean query membersAreDistinguishable() determines whether all of the Namespace's members are distinguishable within it.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcd55-5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jcd55e5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jcd56O5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (member->forAll( memb |
   member->excluding(memb)->forAll(other |
       memb.isDistinguishableFrom(other, self))))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcd56e5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jKxnwGwLEdq7X4sGURiZYA" name="PackageableElement" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_Jceg0O5rEearKK0ZImZXdA" annotatedElement="_jKxnwGwLEdq7X4sGURiZYA">
        <body>A PackageableElement is a NamedElement that may be owned directly by a Package. A PackageableElement is also able to serve as the parameteredElement of a TemplateParameter.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_Jceg0e5rEearKK0ZImZXdA" name="namespace_needs_visibility" constrainedElement="_jKxnwGwLEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jceg0u5rEearKK0ZImZXdA" annotatedElement="_Jceg0e5rEearKK0ZImZXdA">
          <body>A PackageableElement owned by a Namespace must have a visibility.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jceg0-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>visibility = null implies namespace = null</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_Jceg1O5rEearKK0ZImZXdA" general="_JcfH4O5rEearKK0ZImZXdA"/>
      <generalization xmi:type="uml:Generalization" xmi:id="_Jceg1e5rEearKK0ZImZXdA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_nxsncH2aEeSVK_cyXH-KWw" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA" redefinedProperty="_PfdtELG0EeCDe8CO90iVKQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jceg1u5rEearKK0ZImZXdA" annotatedElement="_nxsncH2aEeSVK_cyXH-KWw">
          <body>A PackageableElement must have a visibility specified if it is owned by a Namespace. The default visibility is public.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jceg1-5rEearKK0ZImZXdA"/>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_Jceg2O5rEearKK0ZImZXdA" type="_AyM_oGwMEdq7X4sGURiZYA" instance="_6pIAcH2aEeSVK_cyXH-KWw"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_SnNPIGwIEdq7X4sGURiZYA" name="PackageImport">
      <ownedComment xmi:type="uml:Comment" xmi:id="_Jceg2e5rEearKK0ZImZXdA" annotatedElement="_SnNPIGwIEdq7X4sGURiZYA">
        <body>A PackageImport is a Relationship that imports all the non-private members of a Package into the Namespace owning the PackageImport, so that those Elements may be referred to by their unqualified names in the importingNamespace.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_Jceg2u5rEearKK0ZImZXdA" name="public_or_private" constrainedElement="_SnNPIGwIEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jceg2-5rEearKK0ZImZXdA" annotatedElement="_Jceg2u5rEearKK0ZImZXdA">
          <body>The visibility of a PackageImport is either public or private.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jceg3O5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>visibility = VisibilityKind::public or visibility = VisibilityKind::private</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_Jceg3e5rEearKK0ZImZXdA" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jceg3u5rEearKK0ZImZXdA" name="importedPackage" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_JcZBTO5rEearKK0ZImZXdA" association="_JchkLO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jceg3-5rEearKK0ZImZXdA" annotatedElement="_Jceg3u5rEearKK0ZImZXdA">
          <body>Specifies the Package whose members are imported into a Namespace.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jceg4O5rEearKK0ZImZXdA" name="importingNamespace" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_JcZBSe5rEearKK0ZImZXdA _N3hRMAtAEeGcpbeCPJfCmw" association="_JchkM-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jceg4e5rEearKK0ZImZXdA" annotatedElement="_Jceg4O5rEearKK0ZImZXdA">
          <body>Specifies the Namespace that imports the members from a Package.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jceg4u5rEearKK0ZImZXdA" name="visibility" type="_AyM_oGwMEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jceg4-5rEearKK0ZImZXdA" annotatedElement="_Jceg4u5rEearKK0ZImZXdA">
          <body>Specifies the visibility of the imported PackageableElements within the importingNamespace, i.e., whether imported Elements will in turn be visible to other Namespaces. If the PackageImport is public, the imported Elements will be visible outside the importingNamespace, while, if the PackageImport is private, they will not.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="_Jceg5O5rEearKK0ZImZXdA" type="_AyM_oGwMEdq7X4sGURiZYA" instance="_6pIAcH2aEeSVK_cyXH-KWw"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JcfH4O5rEearKK0ZImZXdA" name="ParameterableElement" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcfH4e5rEearKK0ZImZXdA" annotatedElement="_JcfH4O5rEearKK0ZImZXdA">
        <body>A ParameterableElement is an Element that can be exposed as a formal TemplateParameter for a template, or specified as an actual parameter in a binding of a template.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcfH4u5rEearKK0ZImZXdA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JcfH6e5rEearKK0ZImZXdA" name="isCompatibleWith" bodyCondition="_JcfH6-5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcfH6u5rEearKK0ZImZXdA" annotatedElement="_JcfH6e5rEearKK0ZImZXdA">
          <body>The query isCompatibleWith() determines if this ParameterableElement is compatible with the specified ParameterableElement. By default, this ParameterableElement is compatible with another ParameterableElement p if the kind of this ParameterableElement is the same as or a subtype of the kind of p. Subclasses of ParameterableElement should override this operation to specify different compatibility constraints.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JcfH6-5rEearKK0ZImZXdA" name="spec" constrainedElement="_JcfH6e5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcfH7O5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (self.oclIsKindOf(p.oclType()))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcfH7e5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcfH7u5rEearKK0ZImZXdA" name="p" type="_JcfH4O5rEearKK0ZImZXdA"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JcfH7-5rEearKK0ZImZXdA" name="isTemplateParameter" bodyCondition="_JcfH8e5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcfH8O5rEearKK0ZImZXdA" annotatedElement="_JcfH7-5rEearKK0ZImZXdA">
          <body>The query isTemplateParameter() determines if this ParameterableElement is exposed as a formal TemplateParameter.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JcfH8e5rEearKK0ZImZXdA" name="spec" constrainedElement="_JcfH7-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JcfH8u5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (templateParameter->notEmpty())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcfH8-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JcfH9O5rEearKK0ZImZXdA" name="Realization">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcfH9e5rEearKK0ZImZXdA" annotatedElement="_JcfH9O5rEearKK0ZImZXdA">
        <body>Realization is a specialized Abstraction relationship between two sets of model Elements, one representing a specification (the supplier) and the other represents an implementation of the latter (the client). Realization can be used to model stepwise refinement, optimizations, transformations, templates, model synthesis, framework composition, etc.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcfH9u5rEearKK0ZImZXdA" general="_JcYaMO5rEearKK0ZImZXdA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DH62EKPAEdqi_5gqUMOQtA" name="Relationship" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcfH9-5rEearKK0ZImZXdA" annotatedElement="_DH62EKPAEdqi_5gqUMOQtA">
        <body>Relationship is an abstract concept that specifies some kind of relationship between Elements.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcfH-O5rEearKK0ZImZXdA" general="_kl90MGvbEdq4DLWZOhbdEA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JcfH-e5rEearKK0ZImZXdA" name="relatedElement" type="_kl90MGvbEdq4DLWZOhbdEA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_JchkKO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcfH-u5rEearKK0ZImZXdA" annotatedElement="_JcfH-e5rEearKK0ZImZXdA">
          <body>Specifies the elements related by the Relationship.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcfH--5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_h18oENlrEduDKPkA-0jJZg" name="Usage">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcgWIu5rEearKK0ZImZXdA" annotatedElement="_h18oENlrEduDKPkA-0jJZg">
        <body>A Usage is a Dependency in which the client Element requires the supplier Element (or set of Elements) for its full implementation or operation.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JcgWI-5rEearKK0ZImZXdA" general="_rEDGkGwKEdq7X4sGURiZYA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_AyM_oGwMEdq7X4sGURiZYA" name="VisibilityKind" visibility="private">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JcgWJO5rEearKK0ZImZXdA" annotatedElement="_AyM_oGwMEdq7X4sGURiZYA">
        <body>VisibilityKind is an enumeration type that defines literals to determine the visibility of Elements in a model.</body>
      </ownedComment>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_6pIAcH2aEeSVK_cyXH-KWw" name="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JcgWJe5rEearKK0ZImZXdA" annotatedElement="_6pIAcH2aEeSVK_cyXH-KWw">
          <body>A Named Element with public visibility is visible to all elements that can access the contents of the Namespace that owns it.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_Jcg9EO5rEearKK0ZImZXdA" name="private">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcg9Ee5rEearKK0ZImZXdA" annotatedElement="_Jcg9EO5rEearKK0ZImZXdA">
          <body>A NamedElement with private visibility is only visible inside the Namespace that owns it.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_Jcg9Eu5rEearKK0ZImZXdA" name="protected">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcg9E-5rEearKK0ZImZXdA" annotatedElement="_Jcg9Eu5rEearKK0ZImZXdA">
          <body>A NamedElement with protected visibility is visible to Elements that have a generalization relationship to the Namespace that owns it.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_Jcg9FO5rEearKK0ZImZXdA" name="package">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcg9Fe5rEearKK0ZImZXdA" annotatedElement="_Jcg9FO5rEearKK0ZImZXdA">
          <body>A NamedElement with package visibility is visible to all Elements within the nearest enclosing Package (given that other owning Elements have proper visibility). Outside the nearest enclosing Package, a NamedElement marked as having package visibility is not visible.  Only NamedElements that are not owned by Packages can be marked as having package visibility.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JchkKO5rEearKK0ZImZXdA" name="A_relatedElement_relationship" isDerived="true" memberEnd="_JcfH-e5rEearKK0ZImZXdA _JchkKe5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JchkKe5rEearKK0ZImZXdA" name="relationship" type="_DH62EKPAEdqi_5gqUMOQtA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_JchkKO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JchkKu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JchkK-5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JchkLO5rEearKK0ZImZXdA" name="A_importedPackage_packageImport" memberEnd="_Jceg3u5rEearKK0ZImZXdA _JchkLe5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JchkLe5rEearKK0ZImZXdA" name="packageImport" type="_SnNPIGwIEdq7X4sGURiZYA" subsettedProperty="_JciLQu5rEearKK0ZImZXdA" association="_JchkLO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JchkLu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JchkL-5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JchkMO5rEearKK0ZImZXdA" name="A_elementImport_importingNamespace" memberEnd="_JcdSu-5rEearKK0ZImZXdA _JcaPa-5rEearKK0ZImZXdA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_JchkMe5rEearKK0ZImZXdA" name="A_ownedMember_namespace" isDerived="true" memberEnd="_JcdSx-5rEearKK0ZImZXdA _1vzv0LbIEeCRxrN1JUGuxA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_JchkMu5rEearKK0ZImZXdA" name="A_ownedRule_context" memberEnd="_JcdSy-5rEearKK0ZImZXdA _JcYaTu5rEearKK0ZImZXdA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_JchkM-5rEearKK0ZImZXdA" name="A_packageImport_importingNamespace" memberEnd="_Jcd5wO5rEearKK0ZImZXdA _Jceg4O5rEearKK0ZImZXdA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_JchkNO5rEearKK0ZImZXdA" name="A_member_memberNamespace" isDerived="true" memberEnd="_JcdSw-5rEearKK0ZImZXdA _JchkNe5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JchkNe5rEearKK0ZImZXdA" name="memberNamespace" type="_ZiwkoGwLEdq7X4sGURiZYA" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_JchkNO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JchkNu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JchkN-5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JchkOO5rEearKK0ZImZXdA" name="A_importedMember_namespace" isDerived="true" memberEnd="_JcdSv-5rEearKK0ZImZXdA _JchkOe5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JchkOe5rEearKK0ZImZXdA" name="namespace" type="_ZiwkoGwLEdq7X4sGURiZYA" subsettedProperty="_JchkNe5rEearKK0ZImZXdA" association="_JchkOO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JchkOu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JchkO-5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JchkPO5rEearKK0ZImZXdA" name="A_nameExpression_namedElement" memberEnd="_JccEoO5rEearKK0ZImZXdA _JchkPe5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JchkPe5rEearKK0ZImZXdA" name="namedElement" type="_csVgUGvtEdqG6fBIPwe-mw" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JchkPO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JchkPu5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_epbu4EzPEeO2z-YY6ENIIA" name="A_clientDependency_client" memberEnd="_sD4acEzSEeO2z-YY6ENIIA _lGLv4EzPEeO2z-YY6ENIIA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_lGLv4EzPEeO2z-YY6ENIIA" name="clientDependency" visibility="private" type="_rEDGkGwKEdq7X4sGURiZYA" association="_epbu4EzPEeO2z-YY6ENIIA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_BHS38EzVEeO2z-YY6ENIIA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rQyQ8EzPEeO2z-YY6ENIIA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciLMO5rEearKK0ZImZXdA" name="A_lowerValue_owningLower" memberEnd="_Jca2fe5rEearKK0ZImZXdA _JciLMe5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciLMe5rEearKK0ZImZXdA" name="owningLower" type="_Gjgl0GveEdq4DLWZOhbdEA" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JciLMO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciLMu5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciLM-5rEearKK0ZImZXdA" name="A_upperValue_owningUpper" memberEnd="_Jca2ge5rEearKK0ZImZXdA _JciLNO5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciLNO5rEearKK0ZImZXdA" name="owningUpper" type="_Gjgl0GveEdq4DLWZOhbdEA" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JciLM-5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciLNe5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciLNu5rEearKK0ZImZXdA" name="A_importedElement_import" memberEnd="_JcaPae5rEearKK0ZImZXdA _JciLN-5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciLN-5rEearKK0ZImZXdA" name="import" type="_RPl78GwIEdq7X4sGURiZYA" subsettedProperty="_JciLQu5rEearKK0ZImZXdA" association="_JciLNu5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciLOO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JciLOe5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_bU41QAtAEeGcpbeCPJfCmw" name="A_ownedElement_owner" isDerived="true" memberEnd="_GDD2YAtAEeGcpbeCPJfCmw _N3hRMAtAEeGcpbeCPJfCmw"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciLOu5rEearKK0ZImZXdA" name="A_ownedComment_owningElement" memberEnd="_JcZBVu5rEearKK0ZImZXdA _JciLO-5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciLO-5rEearKK0ZImZXdA" name="owningElement" type="_kl90MGvbEdq4DLWZOhbdEA" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JciLOu5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciLPO5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciLPe5rEearKK0ZImZXdA" name="A_source_directedRelationship" isDerived="true" memberEnd="_JcZBSe5rEearKK0ZImZXdA _JciLPu5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciLPu5rEearKK0ZImZXdA" name="directedRelationship" type="_JBgfoKPAEdqi_5gqUMOQtA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_JchkKe5rEearKK0ZImZXdA" association="_JciLPe5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciLP-5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JciLQO5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciLQe5rEearKK0ZImZXdA" name="A_target_directedRelationship" isDerived="true" memberEnd="_JcZBTO5rEearKK0ZImZXdA _JciLQu5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciLQu5rEearKK0ZImZXdA" name="directedRelationship" type="_JBgfoKPAEdqi_5gqUMOQtA" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="_JchkKe5rEearKK0ZImZXdA" association="_JciLQe5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciLQ-5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JciLRO5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciLRe5rEearKK0ZImZXdA" name="A_supplier_supplierDependency" memberEnd="_JcZBRO5rEearKK0ZImZXdA _JciLRu5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciLRu5rEearKK0ZImZXdA" name="supplierDependency" type="_rEDGkGwKEdq7X4sGURiZYA" subsettedProperty="_JciLQu5rEearKK0ZImZXdA" association="_JciLRe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JciLR-5rEearKK0ZImZXdA" annotatedElement="_JciLRu5rEearKK0ZImZXdA">
          <body>Indicates the dependencies that reference the supplier.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciLSO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JciLSe5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciLSu5rEearKK0ZImZXdA" name="A_constrainedElement_constraint" memberEnd="_JcYaSu5rEearKK0ZImZXdA _JciLS-5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciLS-5rEearKK0ZImZXdA" name="constraint" type="_JcYaPu5rEearKK0ZImZXdA" association="_JciLSu5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciLTO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JciLTe5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciyQO5rEearKK0ZImZXdA" name="A_specification_owningConstraint" memberEnd="_JcYaUe5rEearKK0ZImZXdA _JciyQe5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciyQe5rEearKK0ZImZXdA" name="owningConstraint" type="_JcYaPu5rEearKK0ZImZXdA" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JciyQO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciyQu5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciyQ-5rEearKK0ZImZXdA" name="A_annotatedElement_comment" memberEnd="_JcYaOO5rEearKK0ZImZXdA _JciyRO5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciyRO5rEearKK0ZImZXdA" name="comment" type="_Q8DcULGzEeCDe8CO90iVKQ" association="_JciyQ-5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciyRe5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JciyRu5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JciyR-5rEearKK0ZImZXdA" name="A_mapping_abstraction" memberEnd="_JcYaM-5rEearKK0ZImZXdA _JciySO5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JciySO5rEearKK0ZImZXdA" name="abstraction" type="_JcYaMO5rEearKK0ZImZXdA" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JciyR-5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JciySe5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NVhqMGv0Edq7X4sGURiZYA" name="Model">
      <ownedComment xmi:type="uml:Comment" xmi:id="_Jcz4AO5rEearKK0ZImZXdA" annotatedElement="_NVhqMGv0Edq7X4sGURiZYA">
        <body>A model captures a view of a physical system. It is an abstraction of the physical system, with a certain purpose. This purpose determines what is to be included in the model and what is irrelevant. Thus the model completely describes those aspects of the physical system that are relevant to the purpose of the model, at the appropriate level of detail.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_Jcz4Ae5rEearKK0ZImZXdA" general="_-cvRAGvzEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_vyLfILG3EeCDe8CO90iVKQ" name="viewpoint">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcz4Au5rEearKK0ZImZXdA" annotatedElement="_vyLfILG3EeCDe8CO90iVKQ">
          <body>The name of the viewpoint that is expressed by a model (this name may refer to a profile definition).</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcz4A-5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_9nl2EGwREdq14q0ETb1t3g" name="isMetamodel" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_9s0W0OwiEdqYHf-imTcTdw" annotatedElement="_9nl2EGwREdq14q0ETb1t3g">
          <body>Determines whether this model is a metamodel.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="__8c0oGwREdq14q0ETb1t3g" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-cvRAGvzEdq7X4sGURiZYA" name="Package">
      <ownedComment xmi:type="uml:Comment" xmi:id="_Jcz4BO5rEearKK0ZImZXdA" annotatedElement="_-cvRAGvzEdq7X4sGURiZYA">
        <body>A package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.
Package specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter.
A package is used to group elements, and provides a namespace for the grouped elements.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_Jcz4Be5rEearKK0ZImZXdA" name="elements_public_or_private" constrainedElement="_-cvRAGvzEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcz4Bu5rEearKK0ZImZXdA" annotatedElement="_Jcz4Be5rEearKK0ZImZXdA">
          <body>If an element that is owned by a package has visibility, it is public or private.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jcz4B-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>packagedElement->forAll(e | e.visibility&lt;> null implies e.visibility = VisibilityKind::public or e.visibility = VisibilityKind::private)</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_Jcz4CO5rEearKK0ZImZXdA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <generalization xmi:type="uml:Generalization" xmi:id="_Jcz4Cu5rEearKK0ZImZXdA" general="_ZiwkoGwLEdq7X4sGURiZYA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jcz4C-5rEearKK0ZImZXdA" name="URI">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcz4DO5rEearKK0ZImZXdA" annotatedElement="_Jcz4C-5rEearKK0ZImZXdA">
          <body>Provides an identifier for the package that can be used for many purposes. A URI is the universally unique identification of the package following the IETF URI specification, RFC 2396 http://www.ietf.org/rfc/rfc2396.txt and it must comply with those syntax rules.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcz4De5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jcz4Du5rEearKK0ZImZXdA" name="nestedPackage" type="_-cvRAGvzEdq7X4sGURiZYA" aggregation="composite" isDerived="true" subsettedProperty="_Jc0fHO5rEearKK0ZImZXdA" association="_Jc4JeO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcz4D-5rEearKK0ZImZXdA" annotatedElement="_Jcz4Du5rEearKK0ZImZXdA">
          <body>References the packaged elements that are Packages.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcz4EO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jcz4Ee5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_XSjCgLbQEeCRxrN1JUGuxA" name="nestingPackage" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_Jc4Jde5rEearKK0ZImZXdA _1vzv0LbIEeCRxrN1JUGuxA" association="_Jc4JeO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jcz4Eu5rEearKK0ZImZXdA" annotatedElement="_XSjCgLbQEeCRxrN1JUGuxA">
          <body>References the Package that owns this Package.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jcz4E-5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_Jc0fHO5rEearKK0ZImZXdA" name="packagedElement" type="_jKxnwGwLEdq7X4sGURiZYA" aggregation="composite" subsettedProperty="_JcdSx-5rEearKK0ZImZXdA" association="_Jc4JdO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jc0fHe5rEearKK0ZImZXdA" annotatedElement="_Jc0fHO5rEearKK0ZImZXdA">
          <body>Specifies the packageable elements that are owned by this Package.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jc0fHu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jc0fH-5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_r--GcGv5Edq7X4sGURiZYA" name="applyProfile">
        <ownedComment xmi:type="uml:Comment" xmi:id="_pfXbgOwhEdqYHf-imTcTdw" annotatedElement="_r--GcGv5Edq7X4sGURiZYA">
          <body>Applies the current definition of the specified profile to this package and automatically applies required stereotypes in the profile to elements within this package's namespace hieararchy. If a different definition is already applied, automatically migrates any associated stereotype values on a &quot;best effort&quot; basis (matching classifiers and structural features by name).</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_w2ZvcGv5Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWijsX_EduPJbEsMYXjUQ"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ObBOMHF8EdqziYxiZo0YtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ObBOMXF8EdqziYxiZo0YtA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_xMwZ8Gv5Edq7X4sGURiZYA" name="profile" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_KbQ68PIEEdulR8T2OJRyFQ" annotatedElement="_xMwZ8Gv5Edq7X4sGURiZYA">
            <body>The profile to apply.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_4JyAAGwFEdq7X4sGURiZYA" name="createOwnedClass">
        <ownedComment xmi:type="uml:Comment" xmi:id="_RcX8kOwhEdqYHf-imTcTdw" annotatedElement="_4JyAAGwFEdq7X4sGURiZYA">
          <body>Creates a(n) (abstract) class with the specified name as an owned type of this package.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_94M7YGwFEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_BGSA8GwGEdq7X4sGURiZYA" name="name" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_OgV58PIEEdulR8T2OJRyFQ" annotatedElement="_BGSA8GwGEdq7X4sGURiZYA">
            <body>The name for the new class, or null.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_-i0lsGwFEdq7X4sGURiZYA" name="isAbstract" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_MPDMwPIEEdulR8T2OJRyFQ" annotatedElement="_-i0lsGwFEdq7X4sGURiZYA">
            <body>Whether the new class should be abstract.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Fqo88GwGEdq7X4sGURiZYA" name="createOwnedEnumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_aE54oOwhEdqYHf-imTcTdw" annotatedElement="_Fqo88GwGEdq7X4sGURiZYA">
          <body>Creates a enumeration with the specified name as an owned type of this package.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_MMBmUGwGEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mz9wEGwGEdq7X4sGURiZYA" name="name" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_UWEXMPIEEdulR8T2OJRyFQ" annotatedElement="_Mz9wEGwGEdq7X4sGURiZYA">
            <body>The name for the new enumeration, or null.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_SwrbIHFhEdqziYxiZo0YtA" name="createOwnedInterface">
        <ownedComment xmi:type="uml:Comment" xmi:id="_ecTWsOwhEdqYHf-imTcTdw" annotatedElement="_SwrbIHFhEdqziYxiZo0YtA">
          <body>Creates an interface with the specified name as an owned type of this package.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_SwrbIXFhEdqziYxiZo0YtA" direction="return"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_SwrbInFhEdqziYxiZo0YtA" name="name" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_YHUbQPIEEdulR8T2OJRyFQ" annotatedElement="_SwrbInFhEdqziYxiZo0YtA">
            <body>The name for the new interface, or null.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_SSSZ8GwGEdq7X4sGURiZYA" name="createOwnedPrimitiveType">
        <ownedComment xmi:type="uml:Comment" xmi:id="_bT4NMOwhEdqYHf-imTcTdw" annotatedElement="_SSSZ8GwGEdq7X4sGURiZYA">
          <body>Creates a primitive type with the specified name as an owned type of this package.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Y8BHAGwGEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_ZY7FcGwGEdq7X4sGURiZYA" name="name" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_ZtP3QPIEEdulR8T2OJRyFQ" annotatedElement="_ZY7FcGwGEdq7X4sGURiZYA">
            <body>The name for the new primitive type, or null.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_senckGwJEdq7X4sGURiZYA" name="createOwnedStereotype">
        <ownedComment xmi:type="uml:Comment" xmi:id="_VxTDgOwjEdqYHf-imTcTdw" annotatedElement="_senckGwJEdq7X4sGURiZYA">
          <body>Creates a(n) (abstract) stereotype with the specified name as an owned stereotype of this profile.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_upCswGwJEdq7X4sGURiZYA" direction="return"/>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_xOvjsGwJEdq7X4sGURiZYA" name="name" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_9ZmmAPIEEdulR8T2OJRyFQ" annotatedElement="_xOvjsGwJEdq7X4sGURiZYA">
            <body>The name for the new stereotype, or null.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_vJOosGwJEdq7X4sGURiZYA" name="isAbstract" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_73tVcPIEEdulR8T2OJRyFQ" annotatedElement="_vJOosGwJEdq7X4sGURiZYA">
            <body>Whether the new stereotype should be abstract.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_kCeTgGwFEdq7X4sGURiZYA" name="getAllAppliedProfiles" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_KHdvEOwiEdqYHf-imTcTdw" annotatedElement="_kCeTgGwFEdq7X4sGURiZYA">
          <body>Retrieves all the profiles that are applied to this package, including profiles applied to its nesting package(s).</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_kCeTgWwFEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kCeTg2wFEdq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kCeTgmwFEdq7X4sGURiZYA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_kxh7IG10EdqniMBnIUw7ig" name="getAllProfileApplications" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_pMBMQOwiEdqYHf-imTcTdw" annotatedElement="_kxh7IG10EdqniMBnIUw7ig">
          <body>Retrieves all the profile applications for this package, including profile applications for its nesting package(s).</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_pW8AAG10EdqniMBnIUw7ig" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rvqx8G10EdqniMBnIUw7ig"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rvqx8W10EdqniMBnIUw7ig" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_tasT4G11EdqniMBnIUw7ig" name="getAppliedProfile" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_SSMU0OwiEdqYHf-imTcTdw" annotatedElement="_tasT4G11EdqniMBnIUw7ig">
          <body>Retrieves the profile with the specified qualified name that is applied to this package, or null if no such profile is applied.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_wSH0AG11EdqniMBnIUw7ig" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yo7TUG11EdqniMBnIUw7ig"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yo7TUW11EdqniMBnIUw7ig" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_2bXqMG11EdqniMBnIUw7ig" name="qualifiedName" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_c7n3wPIEEdulR8T2OJRyFQ" annotatedElement="_2bXqMG11EdqniMBnIUw7ig">
            <body>The qualified name of the applied profile to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_7MPYMG11EdqniMBnIUw7ig" name="getAppliedProfile" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_fm_LsOwiEdqYHf-imTcTdw" annotatedElement="_7MPYMG11EdqniMBnIUw7ig">
          <body>Retrieves the profile with the specified qualified name that is applied to this package or any of its nesting packages (if indicated), or null if no such profile is applied.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_7MPYMW11EdqniMBnIUw7ig" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7MPYM211EdqniMBnIUw7ig"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7MPYMm11EdqniMBnIUw7ig" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_7MPYNG11EdqniMBnIUw7ig" name="qualifiedName" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_fzp00PIEEdulR8T2OJRyFQ" annotatedElement="_7MPYNG11EdqniMBnIUw7ig">
            <body>The qualified name of the applied profile to retrieve.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_8HGd8G11EdqniMBnIUw7ig" name="recurse" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_j8mnMPIEEdulR8T2OJRyFQ" annotatedElement="_8HGd8G11EdqniMBnIUw7ig">
            <body>Whether to look in nesting packages.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_ZCKeMGv5Edq7X4sGURiZYA" name="getAppliedProfiles" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_G2jX8OwiEdqYHf-imTcTdw" annotatedElement="_ZCKeMGv5Edq7X4sGURiZYA">
          <body>Retrieves the profiles that are applied to this package.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_cExTkGv5Edq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eExccGv5Edq7X4sGURiZYA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eExccWv5Edq7X4sGURiZYA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_FOcTIKO_Edqi_5gqUMOQtA" name="getProfileApplication" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_vvVvUOwiEdqYHf-imTcTdw" annotatedElement="_FOcTIKO_Edqi_5gqUMOQtA">
          <body>Retrieves the application of the specified profile to this package, or null if no such profile is applied.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_FOcTIaO_Edqi_5gqUMOQtA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FOcTI6O_Edqi_5gqUMOQtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FOcTIqO_Edqi_5gqUMOQtA" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_FOcTJKO_Edqi_5gqUMOQtA" name="profile" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_nAG0cPIEEdulR8T2OJRyFQ" annotatedElement="_FOcTJKO_Edqi_5gqUMOQtA">
            <body>The profile whose application to retrieve.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_QaTt4G11EdqniMBnIUw7ig" name="getProfileApplication" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_wmn8oOwiEdqYHf-imTcTdw" annotatedElement="_QaTt4G11EdqniMBnIUw7ig">
          <body>Retrieves the application of the specified profile to this package or any of its nesting packages (if indicated), or null if no such profile is applied.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_QaTt4W11EdqniMBnIUw7ig" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QaTt4211EdqniMBnIUw7ig"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QaTt4m11EdqniMBnIUw7ig" value="1"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_rYVqgG2JEdq0sOo3CGeQEg" name="profile" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_pERroPIEEdulR8T2OJRyFQ" annotatedElement="_rYVqgG2JEdq0sOo3CGeQEg">
            <body>The profile whose application to retrieve.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_RiuHcG11EdqniMBnIUw7ig" name="recurse" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_q8YcwPIEEdulR8T2OJRyFQ" annotatedElement="_RiuHcG11EdqniMBnIUw7ig">
            <body>Whether to look in nesting packages.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_NrOGAIbSEdqhgMOAOWpjfQ" name="isModelLibrary" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_4KKmkOwiEdqYHf-imTcTdw" annotatedElement="_NrOGAIbSEdqhgMOAOWpjfQ">
          <body>Determines whether this package is a model library.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_NrOGAYbSEdqhgMOAOWpjfQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_z4Q98Gv5Edq7X4sGURiZYA" name="isProfileApplied" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_h951MOwhEdqYHf-imTcTdw" annotatedElement="_z4Q98Gv5Edq7X4sGURiZYA">
          <body>Determines whether the specified profile is applied to this package.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_19CSEGv5Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_2TitkGv5Edq7X4sGURiZYA" name="profile" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_sf7TIPIEEdulR8T2OJRyFQ" annotatedElement="_2TitkGv5Edq7X4sGURiZYA">
            <body>The profile in question.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_448CgGv5Edq7X4sGURiZYA" name="unapplyProfile">
        <ownedComment xmi:type="uml:Comment" xmi:id="_4cT78OwhEdqYHf-imTcTdw" annotatedElement="_448CgGv5Edq7X4sGURiZYA">
          <body>Unapplies the specified profile from this package and automatically unapplies stereotypes in the profile from elements within this package's namespace hieararchy.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_6yryYGv5Edq7X4sGURiZYA" direction="return">
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWijsX_EduPJbEsMYXjUQ"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZvqLMHF8EdqziYxiZo0YtA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZvqLMXF8EdqziYxiZo0YtA" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_7KhqoGv5Edq7X4sGURiZYA" name="profile" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_ubdLsPIEEdulR8T2OJRyFQ" annotatedElement="_7KhqoGv5Edq7X4sGURiZYA">
            <body>The profile to unapply.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_WTAl8L4QEeWYh4Gu_uAtYw" name="applyProfiles">
        <ownedComment xmi:type="uml:Comment" xmi:id="_WTAl8b4QEeWYh4Gu_uAtYw" annotatedElement="_WTAl8L4QEeWYh4Gu_uAtYw">
          <body>Applies the current definitions of the specified profiles to this package and automatically applies required stereotypes in the profiles to elements within this package's namespace hieararchy. If different definitions are already applied, automatically migrates any associated stereotype values on a &quot;best effort&quot; basis (matching classifiers and structural features by name).</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_WTAl8r4QEeWYh4Gu_uAtYw" direction="return">
          <type xmi:type="uml:Class" href="org.eclipse.uml2.uml/Ecore.uml#_SeWijsX_EduPJbEsMYXjUQ"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WTAl874QEeWYh4Gu_uAtYw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WTAl9L4QEeWYh4Gu_uAtYw" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_WTAl9b4QEeWYh4Gu_uAtYw" name="profiles" effect="read">
          <ownedComment xmi:type="uml:Comment" xmi:id="_WTAl9r4QEeWYh4Gu_uAtYw" annotatedElement="_WTAl9b4QEeWYh4Gu_uAtYw">
            <body>The profiles to apply.</body>
          </ownedComment>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lb-wML4QEeWYh4Gu_uAtYw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc0fJO5rEearKK0ZImZXdA" name="allApplicableStereotypes" bodyCondition="_Jc0fJu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jc0fJe5rEearKK0ZImZXdA" annotatedElement="_Jc0fJO5rEearKK0ZImZXdA">
          <body>The query allApplicableStereotypes() returns all the directly or indirectly owned stereotypes, including stereotypes contained in sub-profiles.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jc0fJu5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jc0fJO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jc0fJ-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (let ownedPackages : Bag(Package) = ownedMember->select(oclIsKindOf(Package))->collect(oclAsType(Package)) in&#xD;
 ownedStereotype->union(ownedPackages.allApplicableStereotypes())->flatten()->asSet()&#xD;
)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc0fKO5rEearKK0ZImZXdA" name="result" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jc0fKe5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jc0fKu5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc0fK-5rEearKK0ZImZXdA" name="containingProfile" bodyCondition="_Jc0fLe5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jc0fLO5rEearKK0ZImZXdA" annotatedElement="_Jc0fK-5rEearKK0ZImZXdA">
          <body>The query containingProfile() returns the closest profile directly or indirectly containing this package (or this package itself, if it is a profile).</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jc0fLe5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jc0fK-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jc0fLu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (if self.oclIsKindOf(Profile) then &#xD;
	self.oclAsType(Profile)&#xD;
else&#xD;
	self.namespace.oclAsType(Package).containingProfile()&#xD;
endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc0fL-5rEearKK0ZImZXdA" name="result" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jc0fMO5rEearKK0ZImZXdA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc0fMe5rEearKK0ZImZXdA" name="makesVisible" bodyCondition="_Jc0fNe5rEearKK0ZImZXdA" isQuery="true" precondition="_Jc0fM-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jc0fMu5rEearKK0ZImZXdA" annotatedElement="_Jc0fMe5rEearKK0ZImZXdA">
          <body>The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jc0fM-5rEearKK0ZImZXdA" name="pre" constrainedElement="_Jc0fMe5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jc0fNO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>member->includes(el)</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jc0fNe5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jc0fMe5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jc0fNu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (ownedMember->includes(el) or
(elementImport->select(ei|ei.importedElement = VisibilityKind::public)->collect(importedElement.oclAsType(NamedElement))->includes(el)) or
(packageImport->select(visibility = VisibilityKind::public)->collect(importedPackage.member->includes(el))->notEmpty()))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc0fN-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc0fOO5rEearKK0ZImZXdA" name="el" type="_csVgUGvtEdqG6fBIPwe-mw"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc0fOe5rEearKK0ZImZXdA" name="mustBeOwned" bodyCondition="_Jc0fO-5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JcZoV-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jc0fOu5rEearKK0ZImZXdA" annotatedElement="_Jc0fOe5rEearKK0ZImZXdA">
          <body>The query mustBeOwned() indicates whether elements of this type must have an owner.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jc0fO-5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jc0fOe5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jc0fPO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (false)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc0fPe5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="__wMTILL4EeCBifIhhuFqZA" name="nestedPackage" visibility="protected" bodyCondition="_Jc0fP-5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jc0fPu5rEearKK0ZImZXdA" annotatedElement="__wMTILL4EeCBifIhhuFqZA">
          <body>Derivation for Package::/nestedPackage</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jc0fP-5rEearKK0ZImZXdA" name="spec" constrainedElement="__wMTILL4EeCBifIhhuFqZA _Jcz4Du5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jc0fQO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (packagedElement->select(oclIsKindOf(Package))->collect(oclAsType(Package))->asSet())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_EbpVoLL5EeCBifIhhuFqZA" name="result" type="_-cvRAGvzEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jc0fQe5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jc0fQu5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_kWuyMLL5EeCBifIhhuFqZA" name="ownedStereotype" visibility="protected" bodyCondition="_Jc1GIe5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jc1GIO5rEearKK0ZImZXdA" annotatedElement="_kWuyMLL5EeCBifIhhuFqZA">
          <body>Derivation for Package::/ownedStereotype</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jc1GIe5rEearKK0ZImZXdA" name="spec" constrainedElement="_kWuyMLL5EeCBifIhhuFqZA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jc1GIu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (packagedElement->select(oclIsKindOf(Stereotype))->collect(oclAsType(Stereotype))->asSet())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_mRoYoLL5EeCBifIhhuFqZA" name="result" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jc1GI-5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jc1GJO5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_yfRaMLL5EeCBifIhhuFqZA" name="ownedType" visibility="protected" bodyCondition="_Jc1GJu5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jc1GJe5rEearKK0ZImZXdA" annotatedElement="_yfRaMLL5EeCBifIhhuFqZA">
          <body>Derivation for Package::/ownedType</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jc1GJu5rEearKK0ZImZXdA" name="spec" constrainedElement="_yfRaMLL5EeCBifIhhuFqZA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jc1GJ-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (packagedElement->select(oclIsKindOf(Type))->collect(oclAsType(Type))->asSet())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_0NLGcLL5EeCBifIhhuFqZA" name="result" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jc1GKO5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jc1GKe5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc1GKu5rEearKK0ZImZXdA" name="visibleMembers" bodyCondition="_Jc1GLO5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_Jc1GK-5rEearKK0ZImZXdA" annotatedElement="_Jc1GKu5rEearKK0ZImZXdA">
          <body>The query visibleMembers() defines which members of a Package can be accessed outside it.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_Jc1GLO5rEearKK0ZImZXdA" name="spec" constrainedElement="_Jc1GKu5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_Jc1GLe5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (member->select( m | m.oclIsKindOf(PackageableElement) and self.makesVisible(m))->collect(oclAsType(PackageableElement))->asSet())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc1GLu5rEearKK0ZImZXdA" name="result" type="_jKxnwGwLEdq7X4sGURiZYA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jc1GL-5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jc1GMO5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Jc4JdO5rEearKK0ZImZXdA" name="A_packagedElement_owningPackage" memberEnd="_Jc0fHO5rEearKK0ZImZXdA _Jc4Jde5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_Jc4Jde5rEearKK0ZImZXdA" name="owningPackage" type="_-cvRAGvzEdq7X4sGURiZYA" subsettedProperty="_1vzv0LbIEeCRxrN1JUGuxA" association="_Jc4JdO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jc4Jdu5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Jc4JeO5rEearKK0ZImZXdA" name="A_nestedPackage_nestingPackage" memberEnd="_Jcz4Du5rEearKK0ZImZXdA _XSjCgLbQEeCRxrN1JUGuxA"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_AwvxoGwNEdq7X4sGURiZYA" name="Association">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdGL4O5rEearKK0ZImZXdA" annotatedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <body>A link is a tuple of values that refer to typed objects.  An Association classifies a set of links, each of which is an instance of the Association.  Each value in the link refers to an instance of the type of the corresponding end of the Association.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdGL4e5rEearKK0ZImZXdA" name="specialized_end_number" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdGL4u5rEearKK0ZImZXdA" annotatedElement="_JdGL4e5rEearKK0ZImZXdA">
          <body>An Association specializing another Association has the same number of ends as the other Association.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdGL4-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>parents()->select(oclIsKindOf(Association)).oclAsType(Association)->forAll(p | p.memberEnd->size() = self.memberEnd->size())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdGL5O5rEearKK0ZImZXdA" name="specialized_end_types" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdGL5e5rEearKK0ZImZXdA" annotatedElement="_JdGL5O5rEearKK0ZImZXdA">
          <body>When an Association specializes another Association, every end of the specific Association corresponds to an end of the general Association, and the specific end reaches the same type or a subtype of the corresponding general end.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdGL5u5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>Sequence{1..memberEnd->size()}->&#xD;
	forAll(i | general->select(oclIsKindOf(Association)).oclAsType(Association)->&#xD;
		forAll(ga | self.memberEnd->at(i).type.conformsTo(ga.memberEnd->at(i).type)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdGL5-5rEearKK0ZImZXdA" name="binary_associations" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdGL6O5rEearKK0ZImZXdA" annotatedElement="_JdGL5-5rEearKK0ZImZXdA">
          <body>Only binary Associations can be aggregations.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdGL6e5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>memberEnd->exists(aggregation &lt;> AggregationKind::none) implies (memberEnd->size() = 2 and memberEnd->exists(aggregation = AggregationKind::none))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdGL6u5rEearKK0ZImZXdA" name="association_ends" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdGL6-5rEearKK0ZImZXdA" annotatedElement="_JdGL6u5rEearKK0ZImZXdA">
          <body>Ends of Associations with more than two ends must be owned by the Association itself.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdGL7O5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>memberEnd->size() > 2 implies ownedEnd->includesAll(memberEnd)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdGL7e5rEearKK0ZImZXdA" name="ends_must_be_typed" constrainedElement="_AwvxoGwNEdq7X4sGURiZYA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdGL7u5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>memberEnd->forAll(type->notEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdGL7-5rEearKK0ZImZXdA" general="_DH62EKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdGy8O5rEearKK0ZImZXdA" name="isDerived">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdGy8e5rEearKK0ZImZXdA" annotatedElement="_JdGy8O5rEearKK0ZImZXdA">
          <body>Specifies whether the Association is derived from other model elements such as other Associations.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JdGy8u5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_WSPusK69EdqjppZik4kD8A" name="isBinary">
        <ownedComment xmi:type="uml:Comment" xmi:id="_4TWQYOwlEdqYHf-imTcTdw" annotatedElement="_WSPusK69EdqjppZik4kD8A">
          <body>Determines whether this association is a binary association, i.e. whether it has exactly two member ends.</body>
        </ownedComment>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_YmN8cK69EdqjppZik4kD8A" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_6VRNQLLREeCsYvaJqFFivQ" name="endType" visibility="protected" bodyCondition="_JdGzAO5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdGy_-5rEearKK0ZImZXdA" annotatedElement="_6VRNQLLREeCsYvaJqFFivQ">
          <body>endType is derived from the types of the member ends.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdGzAO5rEearKK0ZImZXdA" name="spec" constrainedElement="_6VRNQLLREeCsYvaJqFFivQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdGzAe5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (memberEnd->collect(type)->asSet())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_-obEgLLREeCsYvaJqFFivQ" name="result" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdGzAu5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdRLAO5rEearKK0ZImZXdA" name="Actor">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLAe5rEearKK0ZImZXdA" annotatedElement="_JdRLAO5rEearKK0ZImZXdA">
        <body>An Actor specifies a role played by a user or any other system that interacts with the subject.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdRLAu5rEearKK0ZImZXdA" name="associations" constrainedElement="_JdRLAO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLA-5rEearKK0ZImZXdA" annotatedElement="_JdRLAu5rEearKK0ZImZXdA">
          <body>An Actor can only have Associations to UseCases, Components, and Classes. Furthermore these Associations must be binary.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdRLBO5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>Association.allInstances()->forAll( a |
  a.memberEnd->collect(type)->includes(self) implies
  (
    a.memberEnd->size() = 2 and
    let actorEnd : Property = a.memberEnd->any(type = self) in
      actorEnd.opposite.class.oclIsKindOf(UseCase) or
      ( actorEnd.opposite.class.oclIsKindOf(Class) and not
         actorEnd.opposite.class.oclIsKindOf(Behavior))
      )
  )</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdRLBe5rEearKK0ZImZXdA" name="must_have_name" constrainedElement="_JdRLAO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLBu5rEearKK0ZImZXdA" annotatedElement="_JdRLBe5rEearKK0ZImZXdA">
          <body>An Actor must have a name.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdRLB-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>name->notEmpty()</body>
        </specification>
      </ownedRule>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdRLCe5rEearKK0ZImZXdA" name="Extend">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLCu5rEearKK0ZImZXdA" annotatedElement="_JdRLCe5rEearKK0ZImZXdA">
        <body>A relationship from an extending UseCase to an extended UseCase that specifies how and when the behavior defined in the extending UseCase can be inserted into the behavior defined in the extended UseCase.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdRLC-5rEearKK0ZImZXdA" name="extension_points" constrainedElement="_JdRLCe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLDO5rEearKK0ZImZXdA" annotatedElement="_JdRLC-5rEearKK0ZImZXdA">
          <body>The ExtensionPoints referenced by the Extend relationship must belong to the UseCase that is being extended.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdRLDe5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>extensionLocation->forAll (xp | extendedCase.extensionPoint->includes(xp))</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdRLDu5rEearKK0ZImZXdA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdRLD-5rEearKK0ZImZXdA" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRLEO5rEearKK0ZImZXdA" name="condition" type="_JcYaPu5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JdSZJO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLEe5rEearKK0ZImZXdA" annotatedElement="_JdRLEO5rEearKK0ZImZXdA">
          <body>References the condition that must hold when the first ExtensionPoint is reached for the extension to take place. If no constraint is associated with the Extend relationship, the extension is unconditional.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdRLEu5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRLE-5rEearKK0ZImZXdA" name="extendedCase" type="_JdRyGO5rEearKK0ZImZXdA" subsettedProperty="_JcZBTO5rEearKK0ZImZXdA" association="_JdSZJ-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLFO5rEearKK0ZImZXdA" annotatedElement="_JdRLE-5rEearKK0ZImZXdA">
          <body>The UseCase that is being extended.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRLFe5rEearKK0ZImZXdA" name="extension" type="_JdRyGO5rEearKK0ZImZXdA" subsettedProperty="_JcZBSe5rEearKK0ZImZXdA _1vzv0LbIEeCRxrN1JUGuxA" association="_JdRyQe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLFu5rEearKK0ZImZXdA" annotatedElement="_JdRLFe5rEearKK0ZImZXdA">
          <body>The UseCase that represents the extension and owns the Extend relationship.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRLF-5rEearKK0ZImZXdA" name="extensionLocation" type="_JdRLGu5rEearKK0ZImZXdA" isOrdered="true" association="_JdSZIO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLGO5rEearKK0ZImZXdA" annotatedElement="_JdRLF-5rEearKK0ZImZXdA">
          <body>An ordered list of ExtensionPoints belonging to the extended UseCase, specifying where the respective behavioral fragments of the extending UseCase are to be inserted. The first fragment in the extending UseCase is associated with the first extension point in the list, the second fragment with the second point, and so on. Note that, in most practical cases, the extending UseCase has just a single behavior fragment, so that the list of ExtensionPoints is trivial.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdRLGe5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdRLGu5rEearKK0ZImZXdA" name="ExtensionPoint">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLG-5rEearKK0ZImZXdA" annotatedElement="_JdRLGu5rEearKK0ZImZXdA">
        <body>An ExtensionPoint identifies a point in the behavior of a UseCase where that behavior can be extended by the behavior of some other (extending) UseCase, as specified by an Extend relationship.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdRLHO5rEearKK0ZImZXdA" name="must_have_name" constrainedElement="_JdRLGu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLHe5rEearKK0ZImZXdA" annotatedElement="_JdRLHO5rEearKK0ZImZXdA">
          <body>An ExtensionPoint must have a name.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdRLHu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>name->notEmpty ()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRLIO5rEearKK0ZImZXdA" name="useCase" type="_JdRyGO5rEearKK0ZImZXdA" subsettedProperty="_1vzv0LbIEeCRxrN1JUGuxA" association="_JdRyPu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRLIe5rEearKK0ZImZXdA" annotatedElement="_JdRLIO5rEearKK0ZImZXdA">
          <body>The UseCase that owns this ExtensionPoint.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdRyEO5rEearKK0ZImZXdA" name="Include">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyEe5rEearKK0ZImZXdA" annotatedElement="_JdRyEO5rEearKK0ZImZXdA">
        <body>An Include relationship specifies that a UseCase contains the behavior defined in another UseCase.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdRyEu5rEearKK0ZImZXdA" general="_JBgfoKPAEdqi_5gqUMOQtA"/>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdRyE-5rEearKK0ZImZXdA" general="_csVgUGvtEdqG6fBIPwe-mw"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRyFO5rEearKK0ZImZXdA" name="addition" type="_JdRyGO5rEearKK0ZImZXdA" subsettedProperty="_JcZBTO5rEearKK0ZImZXdA" association="_JdRyQu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyFe5rEearKK0ZImZXdA" annotatedElement="_JdRyFO5rEearKK0ZImZXdA">
          <body>The UseCase that is to be included.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRyFu5rEearKK0ZImZXdA" name="includingCase" type="_JdRyGO5rEearKK0ZImZXdA" subsettedProperty="_JcZBSe5rEearKK0ZImZXdA _1vzv0LbIEeCRxrN1JUGuxA" association="_JdRyP-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyF-5rEearKK0ZImZXdA" annotatedElement="_JdRyFu5rEearKK0ZImZXdA">
          <body>The UseCase which includes the addition and owns the Include relationship.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdRyGO5rEearKK0ZImZXdA" name="UseCase">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyGe5rEearKK0ZImZXdA" annotatedElement="_JdRyGO5rEearKK0ZImZXdA">
        <body>A UseCase specifies a set of actions performed by its subjects, which yields an observable result that is of value for one or more Actors or other stakeholders of each subject.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdRyGu5rEearKK0ZImZXdA" name="binary_associations" constrainedElement="_JdRyGO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyG-5rEearKK0ZImZXdA" annotatedElement="_JdRyGu5rEearKK0ZImZXdA">
          <body>UseCases can only be involved in binary Associations.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdRyHO5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>Association.allInstances()->forAll(a | a.memberEnd.type->includes(self) implies a.memberEnd->size() = 2)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdRyHe5rEearKK0ZImZXdA" name="no_association_to_use_case" constrainedElement="_JdRyGO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyHu5rEearKK0ZImZXdA" annotatedElement="_JdRyHe5rEearKK0ZImZXdA">
          <body>UseCases cannot have Associations to UseCases specifying the same subject.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdRyH-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>Association.allInstances()->forAll(a | a.memberEnd.type->includes(self) implies &#xD;
   (&#xD;
   let usecases: Set(UseCase) = a.memberEnd.type->select(oclIsKindOf(UseCase))->collect(oclAsType(UseCase))->asSet() in&#xD;
   usecases->size() > 1 implies usecases->collect(subject)->size() > 1&#xD;
   )&#xD;
)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdRyIO5rEearKK0ZImZXdA" name="cannot_include_self" constrainedElement="_JdRyGO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyIe5rEearKK0ZImZXdA" annotatedElement="_JdRyIO5rEearKK0ZImZXdA">
          <body>A UseCase cannot include UseCases that directly or indirectly include it.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdRyIu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>not allIncludedUseCases()->includes(self)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdRyI-5rEearKK0ZImZXdA" name="must_have_name" constrainedElement="_JdRyGO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyJO5rEearKK0ZImZXdA" annotatedElement="_JdRyI-5rEearKK0ZImZXdA">
          <body>A UseCase must have a name.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdRyJe5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>name -> notEmpty ()</body>
        </specification>
      </ownedRule>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRyJ-5rEearKK0ZImZXdA" name="extend" type="_JdRLCe5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_JciLPu5rEearKK0ZImZXdA _JcdSx-5rEearKK0ZImZXdA" association="_JdRyQe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyKO5rEearKK0ZImZXdA" annotatedElement="_JdRyJ-5rEearKK0ZImZXdA">
          <body>The Extend relationships owned by this UseCase.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdRyKe5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdRyKu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRyK-5rEearKK0ZImZXdA" name="extensionPoint" type="_JdRLGu5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_JcdSx-5rEearKK0ZImZXdA" association="_JdRyPu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyLO5rEearKK0ZImZXdA" annotatedElement="_JdRyK-5rEearKK0ZImZXdA">
          <body>The ExtensionPoints owned by this UseCase.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdRyLe5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdRyLu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdRyL-5rEearKK0ZImZXdA" name="include" type="_JdRyEO5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_JciLPu5rEearKK0ZImZXdA _JcdSx-5rEearKK0ZImZXdA" association="_JdRyP-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyMO5rEearKK0ZImZXdA" annotatedElement="_JdRyL-5rEearKK0ZImZXdA">
          <body>The Include relationships owned by this UseCase.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdRyMe5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdRyMu5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdRyN-5rEearKK0ZImZXdA" name="allIncludedUseCases" bodyCondition="_JdRyOe5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdRyOO5rEearKK0ZImZXdA" annotatedElement="_JdRyN-5rEearKK0ZImZXdA">
          <body>The query allIncludedUseCases() returns the transitive closure of all UseCases (directly or indirectly) included by this UseCase.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdRyOe5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdRyN-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdRyOu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (self.include.addition->union(self.include.addition->collect(uc | uc.allIncludedUseCases()))->asSet())</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdRyO-5rEearKK0ZImZXdA" name="result" type="_JdRyGO5rEearKK0ZImZXdA" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdRyPO5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdRyPe5rEearKK0ZImZXdA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdRyPu5rEearKK0ZImZXdA" name="A_extensionPoint_useCase" memberEnd="_JdRyK-5rEearKK0ZImZXdA _JdRLIO5rEearKK0ZImZXdA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdRyP-5rEearKK0ZImZXdA" name="A_include_includingCase" memberEnd="_JdRyL-5rEearKK0ZImZXdA _JdRyFu5rEearKK0ZImZXdA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdRyQe5rEearKK0ZImZXdA" name="A_extend_extension" memberEnd="_JdRyJ-5rEearKK0ZImZXdA _JdRLFe5rEearKK0ZImZXdA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdRyQu5rEearKK0ZImZXdA" name="A_addition_include" memberEnd="_JdRyFO5rEearKK0ZImZXdA _JdRyQ-5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdRyQ-5rEearKK0ZImZXdA" name="include" type="_JdRyEO5rEearKK0ZImZXdA" subsettedProperty="_JciLQu5rEearKK0ZImZXdA" association="_JdRyQu5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdRyRO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdRyRe5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdSZIO5rEearKK0ZImZXdA" name="A_extensionLocation_extension" memberEnd="_JdRLF-5rEearKK0ZImZXdA _JdSZIe5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdSZIe5rEearKK0ZImZXdA" name="extension" type="_JdRLCe5rEearKK0ZImZXdA" association="_JdSZIO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdSZIu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdSZI-5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdSZJO5rEearKK0ZImZXdA" name="A_condition_extend" memberEnd="_JdRLEO5rEearKK0ZImZXdA _JdSZJe5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdSZJe5rEearKK0ZImZXdA" name="extend" type="_JdRLCe5rEearKK0ZImZXdA" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JdSZJO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdSZJu5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdSZJ-5rEearKK0ZImZXdA" name="A_extendedCase_extend" memberEnd="_JdRLE-5rEearKK0ZImZXdA _JdSZKO5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdSZKO5rEearKK0ZImZXdA" name="extend" type="_JdRLCe5rEearKK0ZImZXdA" subsettedProperty="_JciLQu5rEearKK0ZImZXdA" association="_JdSZJ-5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdSZKe5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdSZKu5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-Ixo8H4XEdq7cMP_l1l5Gg" name="Duration">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdSZK-5rEearKK0ZImZXdA" annotatedElement="_-Ixo8H4XEdq7cMP_l1l5Gg">
        <body>A Duration is a ValueSpecification that specifies the temporal distance between two time instants.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdSZLO5rEearKK0ZImZXdA" name="no_expr_requires_observation" constrainedElement="_-Ixo8H4XEdq7cMP_l1l5Gg">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdSZLe5rEearKK0ZImZXdA" annotatedElement="_JdSZLO5rEearKK0ZImZXdA">
          <body>If a Duration has no expr, then it must have a single observation that is a DurationObservation.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdSZLu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>expr = null implies (observation->size() = 1 and observation->forAll(oclIsKindOf(DurationObservation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdTAMO5rEearKK0ZImZXdA" general="_JdXRr-5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTAMe5rEearKK0ZImZXdA" name="expr" type="_JdXRr-5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JdZG1O5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAMu5rEearKK0ZImZXdA" annotatedElement="_JdTAMe5rEearKK0ZImZXdA">
          <body>A ValueSpecification that evaluates to the value of the Duration.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdTAM-5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTANO5rEearKK0ZImZXdA" name="observation" type="_JdVcde5rEearKK0ZImZXdA" association="_JdZG1-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTANe5rEearKK0ZImZXdA" annotatedElement="_JdTANO5rEearKK0ZImZXdA">
          <body>Refers to the Observations that are involved in the computation of the Duration value</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdTANu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdTAN-5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_I3a88H4YEdq7cMP_l1l5Gg" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3a88X4YEdq7cMP_l1l5Gg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdTAOO5rEearKK0ZImZXdA" name="DurationConstraint">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAOe5rEearKK0ZImZXdA" annotatedElement="_JdTAOO5rEearKK0ZImZXdA">
        <body>A DurationConstraint is a Constraint that refers to a DurationInterval.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdTAOu5rEearKK0ZImZXdA" name="first_event_multiplicity" constrainedElement="_JdTAOO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAO-5rEearKK0ZImZXdA" annotatedElement="_JdTAOu5rEearKK0ZImZXdA">
          <body>The multiplicity of firstEvent must be 2 if the multiplicity of constrainedElement is 2. Otherwise the multiplicity of firstEvent is 0.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdTAPO5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>if (constrainedElement->size() = 2)&#xD;
  then (firstEvent->size() = 2) else (firstEvent->size() = 0) &#xD;
endif</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdTAPe5rEearKK0ZImZXdA" name="has_one_or_two_constrainedElements" constrainedElement="_JdTAOO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAPu5rEearKK0ZImZXdA" annotatedElement="_JdTAPe5rEearKK0ZImZXdA">
          <body>A DurationConstraint has either one or two constrainedElements.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdTAP-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>constrainedElement->size() = 1 or constrainedElement->size()=2</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdTAQO5rEearKK0ZImZXdA" general="_JdTnSe5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTAQe5rEearKK0ZImZXdA" name="firstEvent">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAQu5rEearKK0ZImZXdA" annotatedElement="_JdTAQe5rEearKK0ZImZXdA">
          <body>The value of firstEvent[i] is related to constrainedElement[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters constrainedElement[i]. If firstEvent[i] is false, then the corresponding observation event is the last time instant the execution is within constrainedElement[i].</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdTAQ-5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdTARO5rEearKK0ZImZXdA" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTARe5rEearKK0ZImZXdA" name="specification" type="_JdTAR-5rEearKK0ZImZXdA" aggregation="composite" redefinedProperty="_JdTnTO5rEearKK0ZImZXdA _JcYaUe5rEearKK0ZImZXdA" association="_JdZG0O5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTARu5rEearKK0ZImZXdA" annotatedElement="_JdTARe5rEearKK0ZImZXdA">
          <body>The DurationInterval constraining the duration.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdTAR-5rEearKK0ZImZXdA" name="DurationInterval">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdTASO5rEearKK0ZImZXdA" annotatedElement="_JdTAR-5rEearKK0ZImZXdA">
        <body>A DurationInterval defines the range between two Durations.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdTASe5rEearKK0ZImZXdA" general="_JdTnQu5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTASu5rEearKK0ZImZXdA" name="max" type="_-Ixo8H4XEdq7cMP_l1l5Gg" redefinedProperty="_JdTnRe5rEearKK0ZImZXdA" association="_JdYf1-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAS-5rEearKK0ZImZXdA" annotatedElement="_JdTASu5rEearKK0ZImZXdA">
          <body>Refers to the Duration denoting the maximum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTATO5rEearKK0ZImZXdA" name="min" type="_-Ixo8H4XEdq7cMP_l1l5Gg" redefinedProperty="_JdTnR-5rEearKK0ZImZXdA" association="_JdYf3O5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTATe5rEearKK0ZImZXdA" annotatedElement="_JdTATO5rEearKK0ZImZXdA">
          <body>Refers to the Duration denoting the minimum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdTATu5rEearKK0ZImZXdA" name="DurationObservation">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAT-5rEearKK0ZImZXdA" annotatedElement="_JdTATu5rEearKK0ZImZXdA">
        <body>A DurationObservation is a reference to a duration during an execution. It points out the NamedElement(s) in the model to observe and whether the observations are when this NamedElement is entered or when it is exited.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdTAUO5rEearKK0ZImZXdA" name="first_event_multiplicity" constrainedElement="_JdTATu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAUe5rEearKK0ZImZXdA" annotatedElement="_JdTAUO5rEearKK0ZImZXdA">
          <body>The multiplicity of firstEvent must be 2 if the multiplicity of event is 2. Otherwise the multiplicity of firstEvent is 0.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdTAUu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>if (event->size() = 2)&#xD;
  then (firstEvent->size() = 2) else (firstEvent->size() = 0)&#xD;
endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdTAU-5rEearKK0ZImZXdA" general="_JdVcde5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTAVO5rEearKK0ZImZXdA" name="event" type="_csVgUGvtEdqG6fBIPwe-mw" isOrdered="true" association="_JdYf0-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAVe5rEearKK0ZImZXdA" annotatedElement="_JdTAVO5rEearKK0ZImZXdA">
          <body>The DurationObservation is determined as the duration between the entering or exiting of a single event Element during execution, or the entering/exiting of one event Element and the entering/exiting of a second.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdTAVu5rEearKK0ZImZXdA" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTAV-5rEearKK0ZImZXdA" name="firstEvent">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAWO5rEearKK0ZImZXdA" annotatedElement="_JdTAV-5rEearKK0ZImZXdA">
          <body>The value of firstEvent[i] is related to event[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters event[i]. If firstEvent[i] is false, then the corresponding observation event is the time instant the execution exits event[i].</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdTAWe5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdTAWu5rEearKK0ZImZXdA" value="2"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8QuDcLG3EeCDe8CO90iVKQ" name="Expression">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAW-5rEearKK0ZImZXdA" annotatedElement="_8QuDcLG3EeCDe8CO90iVKQ">
        <body>An Expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands that are ValueSpecifications. It denotes a (possibly empty) set of values when evaluated in a context.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdTAXO5rEearKK0ZImZXdA" general="_JdXRr-5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTAXe5rEearKK0ZImZXdA" name="operand" type="_JdXRr-5rEearKK0ZImZXdA" isOrdered="true" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JdYf0O5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTAXu5rEearKK0ZImZXdA" annotatedElement="_JdTAXe5rEearKK0ZImZXdA">
          <body>Specifies a sequence of operand ValueSpecifications.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdTAX-5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdTAYO5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-NPagLG3EeCDe8CO90iVKQ" name="symbol">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnQO5rEearKK0ZImZXdA" annotatedElement="_-NPagLG3EeCDe8CO90iVKQ">
          <body>The symbol associated with this node in the expression tree.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdTnQe5rEearKK0ZImZXdA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdTnQu5rEearKK0ZImZXdA" name="Interval">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnQ-5rEearKK0ZImZXdA" annotatedElement="_JdTnQu5rEearKK0ZImZXdA">
        <body>An Interval defines the range between two ValueSpecifications.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdTnRO5rEearKK0ZImZXdA" general="_JdXRr-5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTnRe5rEearKK0ZImZXdA" name="max" type="_JdXRr-5rEearKK0ZImZXdA" association="_JdYfyO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnRu5rEearKK0ZImZXdA" annotatedElement="_JdTnRe5rEearKK0ZImZXdA">
          <body>Refers to the ValueSpecification denoting the maximum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTnR-5rEearKK0ZImZXdA" name="min" type="_JdXRr-5rEearKK0ZImZXdA" association="_JdYfzO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnSO5rEearKK0ZImZXdA" annotatedElement="_JdTnR-5rEearKK0ZImZXdA">
          <body>Refers to the ValueSpecification denoting the minimum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdTnSe5rEearKK0ZImZXdA" name="IntervalConstraint">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnSu5rEearKK0ZImZXdA" annotatedElement="_JdTnSe5rEearKK0ZImZXdA">
        <body>An IntervalConstraint is a Constraint that is specified by an Interval.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdTnS-5rEearKK0ZImZXdA" general="_JcYaPu5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTnTO5rEearKK0ZImZXdA" name="specification" type="_JdTnQu5rEearKK0ZImZXdA" aggregation="composite" redefinedProperty="_JcYaUe5rEearKK0ZImZXdA" association="_JdYfxO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnTe5rEearKK0ZImZXdA" annotatedElement="_JdTnTO5rEearKK0ZImZXdA">
          <body>The Interval that specifies the condition of the IntervalConstraint.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_FFMNsGveEdq4DLWZOhbdEA" name="LiteralBoolean">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnTu5rEearKK0ZImZXdA" annotatedElement="_FFMNsGveEdq4DLWZOhbdEA">
        <body>A LiteralBoolean is a specification of a Boolean value.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdTnT-5rEearKK0ZImZXdA" general="_JdU1YO5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdTnUO5rEearKK0ZImZXdA" name="value">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnUe5rEearKK0ZImZXdA" annotatedElement="_JdTnUO5rEearKK0ZImZXdA">
          <body>The specified Boolean value.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JdTnUu5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_aXS3gGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_cFthIGWKEdq-f4093SZhVA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdTnU-5rEearKK0ZImZXdA" name="booleanValue" bodyCondition="_JdTnVe5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRs-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnVO5rEearKK0ZImZXdA" annotatedElement="_JdTnU-5rEearKK0ZImZXdA">
          <body>The query booleanValue() gives the value.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdTnVe5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdTnU-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdTnVu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (value)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdTnV-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdTnWO5rEearKK0ZImZXdA" name="isComputable" bodyCondition="_JdTnWu5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRxe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdTnWe5rEearKK0ZImZXdA" annotatedElement="_JdTnWO5rEearKK0ZImZXdA">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdTnWu5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdTnWO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdTnW-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (true)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdTnXO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dy77oGveEdq4DLWZOhbdEA" name="LiteralInteger">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOUO5rEearKK0ZImZXdA" annotatedElement="_Dy77oGveEdq4DLWZOhbdEA">
        <body>A LiteralInteger is a specification of an Integer value.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdUOUe5rEearKK0ZImZXdA" general="_JdU1YO5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdUOUu5rEearKK0ZImZXdA" name="value">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOU-5rEearKK0ZImZXdA" annotatedElement="_JdUOUu5rEearKK0ZImZXdA">
          <body>The specified Integer value.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_JdUOVO5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_e2SLUGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_hAkRkGWKEdq-f4093SZhVA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdUOVe5rEearKK0ZImZXdA" name="integerValue" bodyCondition="_JdUOV-5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRue5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOVu5rEearKK0ZImZXdA" annotatedElement="_JdUOVe5rEearKK0ZImZXdA">
          <body>The query integerValue() gives the value.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdUOV-5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdUOVe5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdUOWO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (value)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdUOWe5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdUOWu5rEearKK0ZImZXdA" name="isComputable" bodyCondition="_JdUOXO5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRxe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOW-5rEearKK0ZImZXdA" annotatedElement="_JdUOWu5rEearKK0ZImZXdA">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdUOXO5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdUOWu5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdUOXe5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (true)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdUOXu5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdUOX-5rEearKK0ZImZXdA" name="LiteralNull">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOYO5rEearKK0ZImZXdA" annotatedElement="_JdUOX-5rEearKK0ZImZXdA">
        <body>A LiteralNull specifies the lack of a value.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdUOYe5rEearKK0ZImZXdA" general="_JdU1YO5rEearKK0ZImZXdA"/>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdUOYu5rEearKK0ZImZXdA" name="isComputable" bodyCondition="_JdUOZO5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRxe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOY-5rEearKK0ZImZXdA" annotatedElement="_JdUOYu5rEearKK0ZImZXdA">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdUOZO5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdUOYu5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdUOZe5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (true)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdUOZu5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdUOZ-5rEearKK0ZImZXdA" name="isNull" bodyCondition="_JdUOae5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRyu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOaO5rEearKK0ZImZXdA" annotatedElement="_JdUOZ-5rEearKK0ZImZXdA">
          <body>The query isNull() returns true.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdUOae5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdUOZ-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdUOau5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (true)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdUOa-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KF5QYK3PEeCff5DsMzqH0w" name="LiteralReal">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdUObO5rEearKK0ZImZXdA" annotatedElement="_KF5QYK3PEeCff5DsMzqH0w">
        <body>A LiteralReal is a specification of a Real value.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdUObe5rEearKK0ZImZXdA" general="_JdU1YO5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdUObu5rEearKK0ZImZXdA" name="value">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOb-5rEearKK0ZImZXdA" annotatedElement="_JdUObu5rEearKK0ZImZXdA">
          <body>The specified Real value.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_KF5QYa3PEeCff5DsMzqH0w" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_KF5QYq3PEeCff5DsMzqH0w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdUOcO5rEearKK0ZImZXdA" name="isComputable" bodyCondition="_JdUOcu5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRxe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOce5rEearKK0ZImZXdA" annotatedElement="_JdUOcO5rEearKK0ZImZXdA">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdUOcu5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdUOcO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdUOc-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (true)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdUOdO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdUOde5rEearKK0ZImZXdA" name="realValue" bodyCondition="_JdUOd-5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRz-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdUOdu5rEearKK0ZImZXdA" annotatedElement="_JdUOde5rEearKK0ZImZXdA">
          <body>The query realValue() gives the value.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdUOd-5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdUOde5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdUOeO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (value)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdUOee5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdU1YO5rEearKK0ZImZXdA" name="LiteralSpecification" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdU1Ye5rEearKK0ZImZXdA" annotatedElement="_JdU1YO5rEearKK0ZImZXdA">
        <body>A LiteralSpecification identifies a literal constant being modeled.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdU1Yu5rEearKK0ZImZXdA" general="_JdXRr-5rEearKK0ZImZXdA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5jXJsTEkEdu9VoNTbEBQkQ" name="LiteralString">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdU1Y-5rEearKK0ZImZXdA" annotatedElement="_5jXJsTEkEdu9VoNTbEBQkQ">
        <body>A LiteralString is a specification of a String value.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdU1ZO5rEearKK0ZImZXdA" general="_JdU1YO5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_RFmAkLG4EeCDe8CO90iVKQ" name="value">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdU1Ze5rEearKK0ZImZXdA" annotatedElement="_RFmAkLG4EeCDe8CO90iVKQ">
          <body>The specified String value.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdU1Zu5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_-SmgADEkEdu9VoNTbEBQkQ" name="integerValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_-SmgATEkEdu9VoNTbEBQkQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_FbLFMDElEdu9VoNTbEBQkQ" name="unlimitedValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_FbLFMTElEdu9VoNTbEBQkQ" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdU1Z-5rEearKK0ZImZXdA" name="isComputable" bodyCondition="_JdU1ae5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRxe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdU1aO5rEearKK0ZImZXdA" annotatedElement="_JdU1Z-5rEearKK0ZImZXdA">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdU1ae5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdU1Z-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdU1au5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (true)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdU1a-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdU1bO5rEearKK0ZImZXdA" name="stringValue" bodyCondition="_JdU1bu5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXR1e5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdU1be5rEearKK0ZImZXdA" annotatedElement="_JdU1bO5rEearKK0ZImZXdA">
          <body>The query stringValue() gives the value.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdU1bu5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdU1bO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdU1b-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (value)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdU1cO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q-yR4GveEdq4DLWZOhbdEA" name="LiteralUnlimitedNatural">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdU1ce5rEearKK0ZImZXdA" annotatedElement="_Q-yR4GveEdq4DLWZOhbdEA">
        <body>A LiteralUnlimitedNatural is a specification of an UnlimitedNatural number.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdU1cu5rEearKK0ZImZXdA" general="_JdU1YO5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdU1c-5rEearKK0ZImZXdA" name="value">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdU1dO5rEearKK0ZImZXdA" annotatedElement="_JdU1c-5rEearKK0ZImZXdA">
          <body>The specified UnlimitedNatural value.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
        <defaultValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdU1de5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_lSARkGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_nyfRUGWKEdq-f4093SZhVA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdU1du5rEearKK0ZImZXdA" name="isComputable" bodyCondition="_JdU1eO5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXRxe5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdU1d-5rEearKK0ZImZXdA" annotatedElement="_JdU1du5rEearKK0ZImZXdA">
          <body>The query isComputable() is redefined to be true.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdU1eO5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdU1du5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdU1ee5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (true)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdU1eu5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdVccO5rEearKK0ZImZXdA" name="unlimitedValue" bodyCondition="_JdVccu5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXR2-5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdVcce5rEearKK0ZImZXdA" annotatedElement="_JdVccO5rEearKK0ZImZXdA">
          <body>The query unlimitedValue() gives the value.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdVccu5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdVccO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdVcc-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (value)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdVcdO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdVcde5rEearKK0ZImZXdA" name="Observation" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdVcdu5rEearKK0ZImZXdA" annotatedElement="_JdVcde5rEearKK0ZImZXdA">
        <body>Observation specifies a value determined by observing an event or events that occur relative to other model Elements.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdVcd-5rEearKK0ZImZXdA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ChRfcGveEdq4DLWZOhbdEA" name="OpaqueExpression">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdVceO5rEearKK0ZImZXdA" annotatedElement="_ChRfcGveEdq4DLWZOhbdEA">
        <body>An OpaqueExpression is a ValueSpecification that specifies the computation of a collection of values either in terms of a UML Behavior or based on a textual statement in a language other than UML</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdVcee5rEearKK0ZImZXdA" name="language_body_size" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdVceu5rEearKK0ZImZXdA" annotatedElement="_JdVcee5rEearKK0ZImZXdA">
          <body>If the language attribute is not empty, then the size of the body and language arrays must be the same.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdVce-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>language->notEmpty() implies (_'body'->size() = language->size())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdVcfO5rEearKK0ZImZXdA" name="one_return_result_parameter" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdVcfe5rEearKK0ZImZXdA" annotatedElement="_JdVcfO5rEearKK0ZImZXdA">
          <body>The behavior must have exactly one return result parameter.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdVcfu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>behavior &lt;> null implies&#xD;
   behavior.ownedParameter->select(direction=ParameterDirectionKind::return)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdVcf-5rEearKK0ZImZXdA" name="only_return_result_parameters" constrainedElement="_ChRfcGveEdq4DLWZOhbdEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdVcgO5rEearKK0ZImZXdA" annotatedElement="_JdVcf-5rEearKK0ZImZXdA">
          <body>The behavior may only have return result parameters.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdVcge5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>behavior &lt;> null implies behavior.ownedParameter->select(direction&lt;>ParameterDirectionKind::return)->isEmpty()</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdVcgu5rEearKK0ZImZXdA" general="_JdXRr-5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_w__dcLG0EeCDe8CO90iVKQ" name="body" isOrdered="true" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdVchu5rEearKK0ZImZXdA" annotatedElement="_w__dcLG0EeCDe8CO90iVKQ">
          <body>A textual definition of the behavior of the OpaqueExpression, possibly in multiple languages.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdVch-5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdVciO5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_D0kWwLG1EeCDe8CO90iVKQ" name="language" isOrdered="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdVcie5rEearKK0ZImZXdA" annotatedElement="_D0kWwLG1EeCDe8CO90iVKQ">
          <body>Specifies the languages used to express the textual bodies of the OpaqueExpression.  Languages are matched to body Strings by order. The interpretation of the body depends on the languages. If the languages are unspecified, they may be implicit from the expression body or the context.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdVciu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdVci-5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_qQchgGWKEdq-f4093SZhVA" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_sRo9MGWKEdq-f4093SZhVA" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdWDg-5rEearKK0ZImZXdA" name="isIntegral" bodyCondition="_JdWDhe5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWDhO5rEearKK0ZImZXdA" annotatedElement="_JdWDg-5rEearKK0ZImZXdA">
          <body>The query isIntegral() tells whether an expression is intended to produce an Integer.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWDhe5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdWDg-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWDhu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (false)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdWDh-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdWDiO5rEearKK0ZImZXdA" name="isNonNegative" bodyCondition="_JdWDjO5rEearKK0ZImZXdA" isQuery="true" precondition="_JdWDiu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWDie5rEearKK0ZImZXdA" annotatedElement="_JdWDiO5rEearKK0ZImZXdA">
          <body>The query isNonNegative() tells whether an integer expression has a non-negative value.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWDiu5rEearKK0ZImZXdA" name="pre" constrainedElement="_JdWDiO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWDi-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>self.isIntegral()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWDjO5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdWDiO5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWDje5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (false)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdWDju5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdWDj-5rEearKK0ZImZXdA" name="isPositive" bodyCondition="_JdWDk-5rEearKK0ZImZXdA" isQuery="true" precondition="_JdWDke5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWDkO5rEearKK0ZImZXdA" annotatedElement="_JdWDj-5rEearKK0ZImZXdA">
          <body>The query isPositive() tells whether an integer expression has a positive value.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWDke5rEearKK0ZImZXdA" name="pre" constrainedElement="_JdWDj-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWDku5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>self.isIntegral()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWDk-5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdWDj-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWDlO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (false)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdWDle5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_mv9LcFYiEdqB6vblk3tuMA" name="result" visibility="protected" bodyCondition="_JdWDl-5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWDlu5rEearKK0ZImZXdA" annotatedElement="_mv9LcFYiEdqB6vblk3tuMA">
          <body>Derivation for OpaqueExpression::/result</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWDl-5rEearKK0ZImZXdA" name="spec" constrainedElement="_mv9LcFYiEdqB6vblk3tuMA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWDmO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (if behavior = null then&#xD;
	null&#xD;
else&#xD;
	behavior.ownedParameter->first()&#xD;
endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_vXTbwFYiEdqB6vblk3tuMA" name="result" direction="return">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdWDme5rEearKK0ZImZXdA"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0JhNkVYiEdqB6vblk3tuMA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdWDmu5rEearKK0ZImZXdA" name="value" bodyCondition="_JdWDnu5rEearKK0ZImZXdA" isQuery="true" precondition="_JdWDnO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWDm-5rEearKK0ZImZXdA" annotatedElement="_JdWDmu5rEearKK0ZImZXdA">
          <body>The query value() gives an integer value for an expression intended to produce one.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWDnO5rEearKK0ZImZXdA" name="pre" constrainedElement="_JdWDmu5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWDne5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>self.isIntegral()</body>
          </specification>
        </ownedRule>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWDnu5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdWDmu5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWDn-5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (0)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdWDoO5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdWqkO5rEearKK0ZImZXdA" name="StringExpression">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqke5rEearKK0ZImZXdA" annotatedElement="_JdWqkO5rEearKK0ZImZXdA">
        <body>A StringExpression is an Expression that specifies a String value that is derived by concatenating a sequence of operands with String values or a sequence of subExpressions, some of which might be template parameters.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWqku5rEearKK0ZImZXdA" name="operands" constrainedElement="_JdWqkO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqk-5rEearKK0ZImZXdA" annotatedElement="_JdWqku5rEearKK0ZImZXdA">
          <body>All the operands of a StringExpression must be LiteralStrings</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWqlO5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>operand->forAll (oclIsKindOf (LiteralString))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWqle5rEearKK0ZImZXdA" name="subexpressions" constrainedElement="_JdWqkO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqlu5rEearKK0ZImZXdA" annotatedElement="_JdWqle5rEearKK0ZImZXdA">
          <body>If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to define a collating sequence between operands and subexpressions).</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWql-5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>if subExpression->notEmpty() then operand->isEmpty() else operand->notEmpty() endif</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdWqme5rEearKK0ZImZXdA" general="_8QuDcLG3EeCDe8CO90iVKQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdWqmu5rEearKK0ZImZXdA" name="owningExpression" type="_JdWqkO5rEearKK0ZImZXdA" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JdX4yO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqm-5rEearKK0ZImZXdA" annotatedElement="_JdWqmu5rEearKK0ZImZXdA">
          <body>The StringExpression of which this StringExpression is a subExpression.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdWqnO5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdWqne5rEearKK0ZImZXdA" name="subExpression" type="_JdWqkO5rEearKK0ZImZXdA" isOrdered="true" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JdX4yO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqnu5rEearKK0ZImZXdA" annotatedElement="_JdWqne5rEearKK0ZImZXdA">
          <body>The StringExpressions that constitute this StringExpression.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdWqn-5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdWqoO5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdWqoe5rEearKK0ZImZXdA" name="stringValue" bodyCondition="_JdWqo-5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JdXR1e5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqou5rEearKK0ZImZXdA" annotatedElement="_JdWqoe5rEearKK0ZImZXdA">
          <body>The query stringValue() returns the String resulting from concatenating, in order, all the component String values of all the operands or subExpressions that are part of the StringExpression.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWqo-5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdWqoe5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWqpO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (if subExpression->notEmpty()
then subExpression->iterate(se; stringValue: String = '' | stringValue.concat(se.stringValue()))
else operand->iterate(op; stringValue: String = '' | stringValue.concat(op.stringValue()))
endif)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdWqpe5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdWqpu5rEearKK0ZImZXdA" name="TimeConstraint">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqp-5rEearKK0ZImZXdA" annotatedElement="_JdWqpu5rEearKK0ZImZXdA">
        <body>A TimeConstraint is a Constraint that refers to a TimeInterval.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWqqO5rEearKK0ZImZXdA" name="has_one_constrainedElement" constrainedElement="_JdWqpu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqqe5rEearKK0ZImZXdA" annotatedElement="_JdWqqO5rEearKK0ZImZXdA">
          <body>A TimeConstraint has one constrainedElement.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWqqu5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>constrainedElement->size() = 1</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdWqq-5rEearKK0ZImZXdA" general="_JdTnSe5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdWqrO5rEearKK0ZImZXdA" name="firstEvent">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqre5rEearKK0ZImZXdA" annotatedElement="_JdWqrO5rEearKK0ZImZXdA">
          <body>The value of firstEvent is related to the constrainedElement. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters the constrainedElement. If firstEvent is false, then the corresponding observation event is the last time instant the execution is within the constrainedElement.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdWqru5rEearKK0ZImZXdA"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JdWqr-5rEearKK0ZImZXdA" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdWqsO5rEearKK0ZImZXdA" name="specification" type="_JdXRoO5rEearKK0ZImZXdA" aggregation="composite" redefinedProperty="_JdTnTO5rEearKK0ZImZXdA _JcYaUe5rEearKK0ZImZXdA" association="_JdX4xO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqse5rEearKK0ZImZXdA" annotatedElement="_JdWqsO5rEearKK0ZImZXdA">
          <body>TheTimeInterval constraining the duration.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DylKEH4YEdq7cMP_l1l5Gg" name="TimeExpression">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqsu5rEearKK0ZImZXdA" annotatedElement="_DylKEH4YEdq7cMP_l1l5Gg">
        <body>A TimeExpression is a ValueSpecification that represents a time value.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_JdWqs-5rEearKK0ZImZXdA" name="no_expr_requires_observation" constrainedElement="_DylKEH4YEdq7cMP_l1l5Gg">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqtO5rEearKK0ZImZXdA" annotatedElement="_JdWqs-5rEearKK0ZImZXdA">
          <body>If a TimeExpression has no expr, then it must have a single observation that is a TimeObservation.</body>
        </ownedComment>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdWqte5rEearKK0ZImZXdA">
          <language>OCL</language>
          <body>expr = null implies (observation->size() = 1 and observation->forAll(oclIsKindOf(TimeObservation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdWqtu5rEearKK0ZImZXdA" general="_JdXRr-5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdWqt-5rEearKK0ZImZXdA" name="expr" type="_JdXRr-5rEearKK0ZImZXdA" aggregation="composite" subsettedProperty="_GDD2YAtAEeGcpbeCPJfCmw" association="_JdX4vu5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWquO5rEearKK0ZImZXdA" annotatedElement="_JdWqt-5rEearKK0ZImZXdA">
          <body>A ValueSpecification that evaluates to the value of the TimeExpression.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdWque5rEearKK0ZImZXdA"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdWquu5rEearKK0ZImZXdA" name="observation" type="_JdVcde5rEearKK0ZImZXdA" association="_JdX4we5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdWqu-5rEearKK0ZImZXdA" annotatedElement="_JdWquu5rEearKK0ZImZXdA">
          <body>Refers to the Observations that are involved in the computation of the TimeExpression value.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdWqvO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdWqve5rEearKK0ZImZXdA" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdkW8H4YEdq7cMP_l1l5Gg" name="stringValue" visibility="protected" isQuery="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdkW8X4YEdq7cMP_l1l5Gg" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdXRoO5rEearKK0ZImZXdA" name="TimeInterval">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRoe5rEearKK0ZImZXdA" annotatedElement="_JdXRoO5rEearKK0ZImZXdA">
        <body>A TimeInterval defines the range between two TimeExpressions.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdXRou5rEearKK0ZImZXdA" general="_JdTnQu5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdXRo-5rEearKK0ZImZXdA" name="max" type="_DylKEH4YEdq7cMP_l1l5Gg" redefinedProperty="_JdTnRe5rEearKK0ZImZXdA" association="_JdX4tO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRpO5rEearKK0ZImZXdA" annotatedElement="_JdXRo-5rEearKK0ZImZXdA">
          <body>Refers to the TimeExpression denoting the maximum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdXRpe5rEearKK0ZImZXdA" name="min" type="_DylKEH4YEdq7cMP_l1l5Gg" redefinedProperty="_JdTnR-5rEearKK0ZImZXdA" association="_JdX4ue5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRpu5rEearKK0ZImZXdA" annotatedElement="_JdXRpe5rEearKK0ZImZXdA">
          <body>Refers to the TimeExpression denoting the minimum value of the range.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdXRp-5rEearKK0ZImZXdA" name="TimeObservation">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRqO5rEearKK0ZImZXdA" annotatedElement="_JdXRp-5rEearKK0ZImZXdA">
        <body>A TimeObservation is a reference to a time instant during an execution. It points out the NamedElement in the model to observe and whether the observation is when this NamedElement is entered or when it is exited.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdXRqe5rEearKK0ZImZXdA" general="_JdVcde5rEearKK0ZImZXdA"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdXRqu5rEearKK0ZImZXdA" name="event" type="_csVgUGvtEdqG6fBIPwe-mw" association="_JdX4sO5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRq-5rEearKK0ZImZXdA" annotatedElement="_JdXRqu5rEearKK0ZImZXdA">
          <body>The TimeObservation is determined by the entering or exiting of the event Element during execution.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_JdXRrO5rEearKK0ZImZXdA" name="firstEvent">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRre5rEearKK0ZImZXdA" annotatedElement="_JdXRrO5rEearKK0ZImZXdA">
          <body>The value of firstEvent is related to the event. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters the event Element. If firstEvent is false, then the corresponding observation event is the time instant the execution exits the event Element.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JdXRru5rEearKK0ZImZXdA" value="true"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JdXRr-5rEearKK0ZImZXdA" name="ValueSpecification" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRsO5rEearKK0ZImZXdA" annotatedElement="_JdXRr-5rEearKK0ZImZXdA">
        <body>A ValueSpecification is the specification of a (possibly empty) set of values. A ValueSpecification is a ParameterableElement that may be exposed as a formal TemplateParameter and provided as the actual parameter in the binding of a template.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_JdXRsu5rEearKK0ZImZXdA" general="_jKxnwGwLEdq7X4sGURiZYA"/>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXRs-5rEearKK0ZImZXdA" name="booleanValue" bodyCondition="_JdXRte5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRtO5rEearKK0ZImZXdA" annotatedElement="_JdXRs-5rEearKK0ZImZXdA">
          <body>The query booleanValue() gives a single Boolean value when one can be computed.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdXRte5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdXRs-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdXRtu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (null)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdXRt-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdXRuO5rEearKK0ZImZXdA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXRue5rEearKK0ZImZXdA" name="integerValue" bodyCondition="_JdXRu-5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRuu5rEearKK0ZImZXdA" annotatedElement="_JdXRue5rEearKK0ZImZXdA">
          <body>The query integerValue() gives a single Integer value when one can be computed.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdXRu-5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdXRue5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdXRvO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (null)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdXRve5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdXRvu5rEearKK0ZImZXdA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXRv-5rEearKK0ZImZXdA" name="isCompatibleWith" bodyCondition="_JdXRwe5rEearKK0ZImZXdA" isQuery="true" redefinedOperation="_JcfH6e5rEearKK0ZImZXdA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRwO5rEearKK0ZImZXdA" annotatedElement="_JdXRv-5rEearKK0ZImZXdA">
          <body>The query isCompatibleWith() determines if this ValueSpecification is compatible with the specified ParameterableElement. This ValueSpecification is compatible with ParameterableElement p if the kind of this ValueSpecification is the same as or a subtype of the kind of p. Further, if p is a TypedElement, then the type of this ValueSpecification must be conformant with the type of p.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdXRwe5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdXRv-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdXRwu5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (self.oclIsKindOf(p.oclType()) and (p.oclIsKindOf(TypedElement) implies &#xD;
self.type.conformsTo(p.oclAsType(TypedElement).type)))</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdXRw-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdXRxO5rEearKK0ZImZXdA" name="p" type="_JcfH4O5rEearKK0ZImZXdA"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXRxe5rEearKK0ZImZXdA" name="isComputable" bodyCondition="_JdXRx-5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRxu5rEearKK0ZImZXdA" annotatedElement="_JdXRxe5rEearKK0ZImZXdA">
          <body>The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all ValueSpecifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute at least the value of all LiteralSpecifications.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdXRx-5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdXRxe5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdXRyO5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (false)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdXRye5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXRyu5rEearKK0ZImZXdA" name="isNull" bodyCondition="_JdXRzO5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXRy-5rEearKK0ZImZXdA" annotatedElement="_JdXRyu5rEearKK0ZImZXdA">
          <body>The query isNull() returns true when it can be computed that the value is null.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdXRzO5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdXRyu5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdXRze5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (false)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdXRzu5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXRz-5rEearKK0ZImZXdA" name="realValue" bodyCondition="_JdXR0e5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXR0O5rEearKK0ZImZXdA" annotatedElement="_JdXRz-5rEearKK0ZImZXdA">
          <body>The query realValue() gives a single Real value when one can be computed.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdXR0e5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdXRz-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdXR0u5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (null)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdXR0-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdXR1O5rEearKK0ZImZXdA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXR1e5rEearKK0ZImZXdA" name="stringValue" bodyCondition="_JdXR1-5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXR1u5rEearKK0ZImZXdA" annotatedElement="_JdXR1e5rEearKK0ZImZXdA">
          <body>The query stringValue() gives a single String value when one can be computed.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdXR1-5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdXR1e5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdXR2O5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (null)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdXR2e5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdXR2u5rEearKK0ZImZXdA"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXR2-5rEearKK0ZImZXdA" name="unlimitedValue" bodyCondition="_JdXR3e5rEearKK0ZImZXdA" isQuery="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_JdXR3O5rEearKK0ZImZXdA" annotatedElement="_JdXR2-5rEearKK0ZImZXdA">
          <body>The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.</body>
        </ownedComment>
        <ownedRule xmi:type="uml:Constraint" xmi:id="_JdXR3e5rEearKK0ZImZXdA" name="spec" constrainedElement="_JdXR2-5rEearKK0ZImZXdA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_JdXR3u5rEearKK0ZImZXdA">
            <language>OCL</language>
            <body>result = (null)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdXR3-5rEearKK0ZImZXdA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdXR4O5rEearKK0ZImZXdA"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdX4sO5rEearKK0ZImZXdA" name="A_event_timeObservation" memberEnd="_JdXRqu5rEearKK0ZImZXdA _JdX4se5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdX4se5rEearKK0ZImZXdA" name="timeObservation" type="_JdXRp-5rEearKK0ZImZXdA" association="_JdX4sO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdX4su5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdX4s-5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdX4tO5rEearKK0ZImZXdA" name="A_max_timeInterval" memberEnd="_JdXRo-5rEearKK0ZImZXdA _JdX4tu5rEearKK0ZImZXdA">
      <generalization xmi:type="uml:Generalization" xmi:id="_JdX4te5rEearKK0ZImZXdA" general="_JdYfyO5rEearKK0ZImZXdA"/>
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdX4tu5rEearKK0ZImZXdA" name="timeInterval" type="_JdXRoO5rEearKK0ZImZXdA" redefinedProperty="_JdYfye5rEearKK0ZImZXdA" association="_JdX4tO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdX4t-5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdX4uO5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdX4ue5rEearKK0ZImZXdA" name="A_min_timeInterval" memberEnd="_JdXRpe5rEearKK0ZImZXdA _JdX4u-5rEearKK0ZImZXdA">
      <generalization xmi:type="uml:Generalization" xmi:id="_JdX4uu5rEearKK0ZImZXdA" general="_JdYfzO5rEearKK0ZImZXdA"/>
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdX4u-5rEearKK0ZImZXdA" name="timeInterval" type="_JdXRoO5rEearKK0ZImZXdA" redefinedProperty="_JdYfze5rEearKK0ZImZXdA" association="_JdX4ue5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdX4vO5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdX4ve5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdX4vu5rEearKK0ZImZXdA" name="A_expr_timeExpression" memberEnd="_JdWqt-5rEearKK0ZImZXdA _JdX4v-5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdX4v-5rEearKK0ZImZXdA" name="timeExpression" type="_DylKEH4YEdq7cMP_l1l5Gg" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JdX4vu5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdX4wO5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdX4we5rEearKK0ZImZXdA" name="A_observation_timeExpression" memberEnd="_JdWquu5rEearKK0ZImZXdA _JdX4wu5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdX4wu5rEearKK0ZImZXdA" name="timeExpression" type="_DylKEH4YEdq7cMP_l1l5Gg" association="_JdX4we5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdX4w-5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdX4xO5rEearKK0ZImZXdA" name="A_specification_timeConstraint" memberEnd="_JdWqsO5rEearKK0ZImZXdA _JdX4xu5rEearKK0ZImZXdA">
      <generalization xmi:type="uml:Generalization" xmi:id="_JdX4xe5rEearKK0ZImZXdA" general="_JdYfxO5rEearKK0ZImZXdA"/>
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdX4xu5rEearKK0ZImZXdA" name="timeConstraint" type="_JdWqpu5rEearKK0ZImZXdA" redefinedProperty="_JdYfxu5rEearKK0ZImZXdA" association="_JdX4xO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdX4x-5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdX4yO5rEearKK0ZImZXdA" name="A_subExpression_owningExpression" memberEnd="_JdWqne5rEearKK0ZImZXdA _JdWqmu5rEearKK0ZImZXdA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdYfxO5rEearKK0ZImZXdA" name="A_specification_intervalConstraint" memberEnd="_JdTnTO5rEearKK0ZImZXdA _JdYfxu5rEearKK0ZImZXdA">
      <generalization xmi:type="uml:Generalization" xmi:id="_JdYfxe5rEearKK0ZImZXdA" general="_JciyQO5rEearKK0ZImZXdA"/>
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdYfxu5rEearKK0ZImZXdA" name="intervalConstraint" type="_JdTnSe5rEearKK0ZImZXdA" redefinedProperty="_JciyQe5rEearKK0ZImZXdA" association="_JdYfxO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdYfx-5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdYfyO5rEearKK0ZImZXdA" name="A_max_interval" memberEnd="_JdTnRe5rEearKK0ZImZXdA _JdYfye5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdYfye5rEearKK0ZImZXdA" name="interval" type="_JdTnQu5rEearKK0ZImZXdA" association="_JdYfyO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdYfyu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdYfy-5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdYfzO5rEearKK0ZImZXdA" name="A_min_interval" memberEnd="_JdTnR-5rEearKK0ZImZXdA _JdYfze5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdYfze5rEearKK0ZImZXdA" name="interval" type="_JdTnQu5rEearKK0ZImZXdA" association="_JdYfzO5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdYfzu5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdYfz-5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdYf0O5rEearKK0ZImZXdA" name="A_operand_expression" memberEnd="_JdTAXe5rEearKK0ZImZXdA _JdYf0e5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdYf0e5rEearKK0ZImZXdA" name="expression" type="_8QuDcLG3EeCDe8CO90iVKQ" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JdYf0O5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdYf0u5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdYf0-5rEearKK0ZImZXdA" name="A_event_durationObservation" memberEnd="_JdTAVO5rEearKK0ZImZXdA _JdYf1O5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdYf1O5rEearKK0ZImZXdA" name="durationObservation" type="_JdTATu5rEearKK0ZImZXdA" association="_JdYf0-5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdYf1e5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdYf1u5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdYf1-5rEearKK0ZImZXdA" name="A_max_durationInterval" memberEnd="_JdTASu5rEearKK0ZImZXdA _JdYf2e5rEearKK0ZImZXdA">
      <generalization xmi:type="uml:Generalization" xmi:id="_JdYf2O5rEearKK0ZImZXdA" general="_JdYfyO5rEearKK0ZImZXdA"/>
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdYf2e5rEearKK0ZImZXdA" name="durationInterval" type="_JdTAR-5rEearKK0ZImZXdA" redefinedProperty="_JdYfye5rEearKK0ZImZXdA" association="_JdYf1-5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdYf2u5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdYf2-5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdYf3O5rEearKK0ZImZXdA" name="A_min_durationInterval" memberEnd="_JdTATO5rEearKK0ZImZXdA _JdYf3u5rEearKK0ZImZXdA">
      <generalization xmi:type="uml:Generalization" xmi:id="_JdYf3e5rEearKK0ZImZXdA" general="_JdYfzO5rEearKK0ZImZXdA"/>
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdYf3u5rEearKK0ZImZXdA" name="durationInterval" type="_JdTAR-5rEearKK0ZImZXdA" redefinedProperty="_JdYfze5rEearKK0ZImZXdA" association="_JdYf3O5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdYf3-5rEearKK0ZImZXdA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdYf4O5rEearKK0ZImZXdA" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdZG0O5rEearKK0ZImZXdA" name="A_specification_durationConstraint" memberEnd="_JdTARe5rEearKK0ZImZXdA _JdZG0u5rEearKK0ZImZXdA">
      <generalization xmi:type="uml:Generalization" xmi:id="_JdZG0e5rEearKK0ZImZXdA" general="_JdYfxO5rEearKK0ZImZXdA"/>
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdZG0u5rEearKK0ZImZXdA" name="durationConstraint" type="_JdTAOO5rEearKK0ZImZXdA" redefinedProperty="_JdYfxu5rEearKK0ZImZXdA" association="_JdZG0O5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdZG0-5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdZG1O5rEearKK0ZImZXdA" name="A_expr_duration" memberEnd="_JdTAMe5rEearKK0ZImZXdA _JdZG1e5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdZG1e5rEearKK0ZImZXdA" name="duration" type="_-Ixo8H4XEdq7cMP_l1l5Gg" subsettedProperty="_N3hRMAtAEeGcpbeCPJfCmw" association="_JdZG1O5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdZG1u5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_JdZG1-5rEearKK0ZImZXdA" name="A_observation_duration" memberEnd="_JdTANO5rEearKK0ZImZXdA _JdZG2O5rEearKK0ZImZXdA">
      <ownedEnd xmi:type="uml:Property" xmi:id="_JdZG2O5rEearKK0ZImZXdA" name="duration" type="_-Ixo8H4XEdq7cMP_l1l5Gg" association="_JdZG1-5rEearKK0ZImZXdA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdZG2e5rEearKK0ZImZXdA"/>
      </ownedEnd>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_0TBYYGvaEdq4DLWZOhbdEA">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_0TBYYWvaEdq4DLWZOhbdEA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <Ecore:EPackage xmi:id="_LWVYQN7NEduglsXU_NKRsA" base_Package="_o8I_sGvaEdq4DLWZOhbdEA" packageName="uml" nsPrefix="uml" nsURI="http://www.eclipse.org/uml2/5.0.0/UML" basePackage="org.eclipse.uml2" prefix="UML"/>
  <Ecore:EOperation xmi:id="_SnLRYMb4EdyrC427ygySag" base_Operation="_mv9LcFYiEdqB6vblk3tuMA" operationName="getResult" visibility="None"/>
  <Ecore:EOperation xmi:id="_26LegMb6EdyrC427ygySag" base_Operation="_qQchgGWKEdq-f4093SZhVA" visibility="None"/>
  <Ecore:EOperation xmi:id="_5WV-8Mb6EdyrC427ygySag" base_Operation="_e2SLUGWKEdq-f4093SZhVA" visibility="None"/>
  <Ecore:EOperation xmi:id="_n89b0Mb7EdyrC427ygySag" base_Operation="_aXS3gGWKEdq-f4093SZhVA" visibility="None"/>
  <Ecore:EOperation xmi:id="_poGH8Mb7EdyrC427ygySag" base_Operation="_qtCaIFYkEdqB6vblk3tuMA" visibility="None"/>
  <Ecore:EOperation xmi:id="_q6DfEMb7EdyrC427ygySag" base_Operation="_vlEgEFYkEdqB6vblk3tuMA" visibility="None"/>
  <Ecore:EOperation xmi:id="_O5LY0Mb8EdyrC427ygySag" base_Operation="_lSARkGWKEdq-f4093SZhVA" visibility="None"/>
  <Ecore:EOperation xmi:id="_oEJMcMb8EdyrC427ygySag" base_Operation="_I3a88H4YEdq7cMP_l1l5Gg" visibility="None"/>
  <Ecore:EOperation xmi:id="_p3eLQMb8EdyrC427ygySag" base_Operation="_JdkW8H4YEdq7cMP_l1l5Gg" visibility="None"/>
  <Ecore:EOperation xmi:id="_tDBhQMb8EdyrC427ygySag" base_Operation="_-SmgADEkEdu9VoNTbEBQkQ" visibility="None"/>
  <Ecore:EOperation xmi:id="_upizIMb8EdyrC427ygySag" base_Operation="_FbLFMDElEdu9VoNTbEBQkQ" visibility="None"/>
  <Ecore:EAttribute xmi:id="_qlk0MLGzEeCDe8CO90iVKQ" isUnsettable="true" xmlFeatureKind="Element" base_Property="_WiuJ4LGzEeCDe8CO90iVKQ"/>
  <Ecore:EAttribute xmi:id="_F9XrwLG0EeCDe8CO90iVKQ" isUnsettable="true" base_Property="_8n2t4LGzEeCDe8CO90iVKQ"/>
  <Ecore:EAttribute xmi:id="_Y0N18LG0EeCDe8CO90iVKQ" isUnsettable="true" base_Property="_PfdtELG0EeCDe8CO90iVKQ"/>
  <Ecore:EAttribute xmi:id="_m8ZRkLG0EeCDe8CO90iVKQ" isUnsettable="true" base_Property="_fO7PkLG0EeCDe8CO90iVKQ"/>
  <Ecore:EAttribute xmi:id="_78jRoLG0EeCDe8CO90iVKQ" isUnsettable="true" xmlFeatureKind="Element" base_Property="_w__dcLG0EeCDe8CO90iVKQ"/>
  <Ecore:EAttribute xmi:id="_HIUmgLG1EeCDe8CO90iVKQ" isUnsettable="true" base_Property="_D0kWwLG1EeCDe8CO90iVKQ"/>
  <Ecore:EAttribute xmi:id="_yBw8ILG3EeCDe8CO90iVKQ" isUnsettable="true" base_Property="_vyLfILG3EeCDe8CO90iVKQ"/>
  <Ecore:EAttribute xmi:id="_A6JssLG4EeCDe8CO90iVKQ" isUnsettable="true" base_Property="_-NPagLG3EeCDe8CO90iVKQ"/>
  <Ecore:EAttribute xmi:id="_XOU5YLG4EeCDe8CO90iVKQ" isUnsettable="true" base_Property="_RFmAkLG4EeCDe8CO90iVKQ"/>
  <Ecore:EOperation xmi:id="_CRhSILLSEeCsYvaJqFFivQ" base_Operation="_6VRNQLLREeCsYvaJqFFivQ" operationName="getEndTypes" visibility="None"/>
  <Ecore:EOperation xmi:id="_ezWUELL3EeCBifIhhuFqZA" base_Operation="_Y8IpELL3EeCBifIhhuFqZA" operationName="getLower" visibility="None"/>
  <Ecore:EOperation xmi:id="_ig3HoLL3EeCBifIhhuFqZA" base_Operation="_a_qnELL3EeCBifIhhuFqZA" operationName="getUpper" visibility="None"/>
  <Ecore:EOperation xmi:id="_0bHGsLL3EeCBifIhhuFqZA" base_Operation="_qV1f0LL3EeCBifIhhuFqZA" operationName="getNamespace" visibility="None"/>
  <Ecore:EOperation xmi:id="_GMe2kLL4EeCBifIhhuFqZA" base_Operation="_8RZtgLL3EeCBifIhhuFqZA" operationName="getQualifiedName" visibility="None"/>
  <Ecore:EOperation xmi:id="_WLi7ULL4EeCBifIhhuFqZA" base_Operation="_OanVoLL4EeCBifIhhuFqZA" operationName="getImportedMembers" visibility="None"/>
  <Ecore:EOperation xmi:id="_kOOy8LL4EeCBifIhhuFqZA" base_Operation="_aGIhkLL4EeCBifIhhuFqZA" operationName="getOwnedMembers" visibility="None"/>
  <Ecore:EOperation xmi:id="_K1fzoLL5EeCBifIhhuFqZA" base_Operation="__wMTILL4EeCBifIhhuFqZA" operationName="getNestedPackages" visibility="None"/>
  <Ecore:EOperation xmi:id="_rz9_0LL5EeCBifIhhuFqZA" base_Operation="_kWuyMLL5EeCBifIhhuFqZA" operationName="getOwnedStereotypes" visibility="None"/>
  <Ecore:EOperation xmi:id="_ANO_ALL6EeCBifIhhuFqZA" base_Operation="_yfRaMLL5EeCBifIhhuFqZA" operationName="getOwnedTypes" visibility="None"/>
  <Ecore:EOperation xmi:id="_6p4ogIRfEeOrzvVsV3Q4sA" base_Operation="_uR4xEIRfEeOrzvVsV3Q4sA" operationName="getClientDependencies" visibility="None"/>
  <Ecore:EAttribute xmi:id="_nyeDgH2aEeSVK_cyXH-KWw" isUnsettable="true" base_Property="_nxsncH2aEeSVK_cyXH-KWw"/>
</xmi:XMI>
