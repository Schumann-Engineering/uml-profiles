[comment encoding = UTF-8 /]
[module Connection(
	'http://www.eclipse.org/uml2/5.0.0/UML',
	'http://schumann.engineering/csmn/1'
)]


[import engineering::schumann::uml::m2t::csmn::common::lifecycle::common /]
[import engineering::schumann::uml::m2t::csmn::common::flow::Connection /]
[import engineering::schumann::uml::m2t::csmn::common::elements::SecurityZone /]
[import engineering::schumann::uml::m2t::csmn::html::assets::Asset /]
[import engineering::schumann::uml::m2t::csmn::html::characteristics::common /]
[import engineering::schumann::uml::m2t::html::Table /]
[import engineering::schumann::uml::m2t::html::Layout /]
[import engineering::schumann::uml::m2t::html::Boxes /]
[import engineering::schumann::uml::m2t::html::Html /]


[query public csmn_connectionsForPorts(
	this			: Set(Port)
) : OrderedSet(Dependency) =
	this
	.csmn_allConnectionInvolved()
	->flatten()
	->select(csmn_isConnection())
	->sortedBy(name)
	->asOrderedSet()
/]


[query public csmn_connectionsForPort(
	this			: Port
) : OrderedSet(Dependency) =
	Set(Port) { this }
	->csmn_connectionsForPorts()
/]


[query private _connections(
	interfaces 		: Set(Port)
) : OrderedSet(Dependency) =
	interfaces->csmn_connectionsForPorts()
/]



[template public printConnectionsForInterfacesAsList(
	interfaces 		: Set(Port),
	startNewPage	: Boolean
)
post(trim())
{
	connections	: OrderedSet(Dependency)	= interfaces->_connections();
}]
[if (connections->notEmpty())]
<p>
	<b>Overview</b>
</p>
<ul>
[for (connections->sortedBy(name))]
	<li>[name._simpleTextToXHtml() /]</li>
[/for]
</ul>
[if (startNewPage)]
[html_PAGE_end('')/]
[html_PAGE_start('')/]
[else]
[html_PAGE_BREAK('') /]
[/if]
[/if]
[/template]


[template public printConnectionsForInterfacesAsTable(
	interfaces 		: Set(Port),
	startNewPage	: Boolean
)
post(trim())
{
	connections	: OrderedSet(Dependency)	= interfaces->_connections();
}]
[if (connections->oclIsUndefined() or connections->oclIsInvalid())]
[html_ANSI_DANGER_start() /]
<p>
	Something is wrong with the model. See debug information below.<br/>
	Most common error: name is empty
</p>
[html_ANSI_DANGER_end() /]
[elseif (connections->notEmpty())]
[for (connections)]
<p>
	<b>Connection "[name._simpleTextToXHtml()/]"</b>
</p>

[self.printConnectionAsTable() /]
[if (startNewPage)]
[html_PAGE_end('')/]
[html_PAGE_start('')/]
[else]
[html_PAGE_BREAK('') /]
[/if]

[/for]
[else]
<p>
	None
</p>
[/if]
[/template]


[template private printConnectionAsTable(
	this : Dependency
)
? (this.csmn_isConnection())
post(trim())
{
	clients   : Set(NamedElement) = this
									.source
									->filter(NamedElement)
									->select(source : NamedElement |
										source.oclIsKindOf(Port) or
										source.oclIsKindOf(Component) or
										source.oclIsKindOf(Actor)
									)
									->csmn_filterInScope();
	suppliers : Set(NamedElement) = this
									.target
									->filter(NamedElement)
									->select(source : NamedElement |
										source.oclIsKindOf(Port) or
										source.oclIsKindOf(Component) or
										source.oclIsKindOf(Actor)
									)
									->csmn_filterInScope();
	connection   : Connection     = this.csmn_connection();
	supplierFlow : Set(DataType)  = if (connection <> null) then
										connection.flowToSupplier->filter(DataType)
									else
										Set(DataType) {}
									endif;
	clientFlow   : Set(DataType)  = if (connection <> null) then
										connection.flowToClient->filter(DataType)
									else
										Set(DataType) {}
									endif;
}]
<table class="table-2-columns" style="width: 100%">
[comment Supplier /]
	<tr>
		<th style="text-align: center;" colspan="2">Supplier[if (suppliers->size() > 1)](s)[/if]</th>
	</tr>
	<tr>
		<th style="text-align: right;">Source[if (suppliers->size() > 1)](s)[/if]</th>
		<td style="text-align: left;">
			<ol>
			[for (
				OrderedSet(NamedElement) {}
				->union(suppliers->filter(Port).owner.oclAsType(NamedElement))
				->union(suppliers->filter(Component))
				->union(suppliers->filter(Actor))
				->sortedBy(eClass().name + '@' + name)
			)]
				<li>«[eClass().name /]»&nbsp;[name._simpleTextToXHtml() /]&nbsp;<i>(Trust boundary: [if (csmn_securityZoneElement().oclIsUndefined())]./.[else][csmn_securityZoneElement().name._simpleTextToXHtml() /][/if])</i></li>
			[/for]
			</ol>
		</td>
	</tr>
[comment Supplier Security Zone /]
[comment]
	<tr>
		<th style="text-align: right">Security Zone</th>
		<td style="text-align: left">
			<ol>
				[for (suppliers.owner.oclAsType(NamedElement))]
				<li>[if (csmn_securityZoneElement().oclIsUndefined())]./.[else][csmn_securityZoneElement().name._simpleTextToXHtml() /][/if]</li>
			[/for]
			</ol>
		</td>
	</tr>
[/comment]
[comment Supplier Interface /]
[if (suppliers->filter(Port)->notEmpty())]
	<tr>
		<th style="text-align: right;">Interface</th>
		<td style="text-align: left;">
			<ol>
			[for (suppliers->filter(Port))]
				<li>[self.name._simpleTextToXHtml() /]</li>
			[/for]
			</ol>
		</td>
	</tr>
[/if]
[comment Client /]
	<tr>
		<th style="text-align: center;" colspan="2">Client[if (clients->size() > 1)](s)[/if]</th>
	</tr>
	<tr>
		<th style="text-align: right;">Target[if (clients->size() > 1)](s)[/if]</th>
		<td style="text-align: left;">
			<ol>
			[for (
				OrderedSet(NamedElement) {}
				->union(clients->filter(Port).owner.oclAsType(NamedElement))
				->union(clients->filter(Component))
				->union(clients->filter(Actor))
				->sortedBy(eClass().name + '@' + name)
			)]
				<li>«[eClass().name /]»&nbsp;[name._simpleTextToXHtml() /]&nbsp;<i>(Trust boundary: [if (csmn_securityZoneElement().oclIsUndefined())]./.[else][csmn_securityZoneElement().name._simpleTextToXHtml() /][/if])</i></li>
			[/for]
			</ol>
		</td>
	</tr>
[comment Client Interface /]
[if (clients->filter(Port)->notEmpty())]
	<tr>
		<th style="text-align: right;">Interface</th>
		<td style="text-align: left;">
			<ol>
			[for (clients->filter(Port))]
				<li>[self.name._simpleTextToXHtml() /]</li>
			[/for]
			</ol>
		</td>
	</tr>
[/if]
[comment Client Zone /]
[comment]
	<tr>
		<th style="text-align: right">Security Zone</th>
		<td style="text-align: left">
			[for (clients.owner.oclAsType(NamedElement)) separator('<hr/>')][if (csmn_securityZoneElement().oclIsUndefined())]./.[else][csmn_securityZoneElement().name._simpleTextToXHtml() /][/if][/for]
		</td>
	</tr>
[/comment]
[comment Flow ← /]
	<tr>
		<th style="text-align: center;" colspan="2">Asset Flow</th>
	</tr>
	<tr>
		<th style="text-align: right;">Supplier ← Client</th>
		<td style="text-align: left">
[if (supplierFlow->notEmpty())]
			<ul>
[for (supplierFlow)]
				<li>[self.printAssetWithType() /]</li>
[/for]
			</ul>
[else]
			./.
[/if]
		</td>
	</tr>
[comment ===CONNECTION=== /]
[comment]
	<tr>
		<th style="text-align: right;">Connection</th>
		<th style="text-align: right;">Name</th>
		<td style="text-align: left;">[this.name._simpleTextToXHtml() /]</td>
	</tr>
[/comment]
[comment Flow → /]
	<tr>
		<th style="text-align: right">Supplier → Client</th>
		<td style="text-align: left">
[if (clientFlow->notEmpty())]
			<ul>
[for (clientFlow)]
				<li>[self.printAssetWithType() /]</li>
[/for]
			</ul>
[else]
			./.
[/if]
		</td>
	</tr>
[comment CONNECTION Characteristics /]
	<tr>
		<th style="text-align: center;" colspan="2">CONNECTION Characteristics</th>
	</tr>
	<tr>
		<td style="text-align: left;" colspan="2">[this.printCharacteristics(false)/]</td>
	</tr>
</table>


[/template]