[comment encoding = UTF-8 /]
[module AssetCharacteristic(
	'http://www.eclipse.org/uml2/5.0.0/UML',
	'http://schumann.engineering/csmn/1'
)
extends engineering::schumann::uml::m2t::csmn::html::characteristics::GenericCharacteristic
]


[import engineering::schumann::uml::m2t::docgen::converter::Converter /]
[import engineering::schumann::uml::m2t::csmn::common::assets::Asset /]
[import engineering::schumann::uml::m2t::csmn::common::characteristics::E_AssetCategory /]
[import engineering::schumann::uml::m2t::csmn::common::characteristics::E_STRIDE /]
[import engineering::schumann::uml::m2t::common::services::StringService /]
[import engineering::schumann::uml::m2t::html::Boxes /]
[import engineering::schumann::uml::m2t::csmn::html::characteristics::Comment /]
[import engineering::schumann::uml::m2t::common::services::VariableService /]


[template public printAssetCharacteristic(
	this 						: NamedElement,
	includeAssetCharacteristics	: Boolean
) 
? (this.csmn_isAsset())
post(trim())
{
	asset : Asset = this.csmn_asset();
}]
[asset.print(this, includeAssetCharacteristics) /]
[/template]


[template public print(
	this 						: Asset,
	element						: NamedElement,
	includeAssetCharacteristics	: Boolean
)
post(trim())]
[if (includeAssetCharacteristics)]
[comment type/]
[if (this.assetType <> null and this.assetType <> AssetType::Unspecified)]
[printCharacteristicTitle('Asset type') /]

<ul>
	<li>
[if (assetType <> AssetType::Unspecified)]
		<i>Type</i>: [this.assetType.csmn_toString() /]
[else]
		[html_ANSI_DANGER_start() /]
		<p>
			Type is unspecified
		</p>	
		[html_ANSI_DANGER_end() /]
		[env_addError('"' + element.name + '" does not have a Type for Asset Characteristic', null) /] 
[/if]
	</li>
</ul>
[/if]
[comment flight level/]
[printCharacteristicTitle('Asset Level') /]

<ul>
	<li>
[if (flightLevel <> AssetFlightLevel::UNSPECIFIED)]
		<i>[this.flightLevel /]</i>
[else]
		[html_ANSI_DANGER_start() /]
		<p>
			Level is unspecified
		</p>	
		[html_ANSI_DANGER_end() /]
		[env_addError('"' + element.name + '" does not have a Level for Asset Characteristic', null) /] 
[/if]
	</li>
</ul>
[comment category/]
[printCharacteristicTitle('Asset Category') /]

<ul>
	<li>
[if (assetCategory <> AssetCategory::UNSPECIFIED)]
		<i>[this.assetCategory /]</i>
[else]
		[html_ANSI_DANGER_start() /]
		<p>
			Category is unspecified
		</p>	
		[html_ANSI_DANGER_end() /]
		[env_addError('"' + element.name + '" does not have a Category for Asset Characteristic', null) /] 
[/if]
	</li>
</ul>
[comment spec /]
[if (not this.assetSpec._isNullOrEmpty())]
[printCharacteristicTitle('Asset specification') /]
<p>
	[this.assetSpec /]
</p>
[/if]
[comment CIAAN+UML /]
[printCharacteristicTitle('Protection goals (CIAAN+UML model)') /]
[protectionGoalsToHtml(
	this.assetCategory.csmn_toProtectionGoals(),
	this.protectionGoal
) /]
[comment Threats/]
[printCharacteristicTitle('Threats (CIAAN+UML model)') /]
[threatsByProtectionGoalsToHtml(
	element
) /]
[comment CIAAN+UML -> STRIDE /]
[printCharacteristicTitle('Mapping (CIAAN+UML model ➡ STRIDE model)') /]
[protectionGoalsToStrideToHtml(
	this.protectionGoal
) /]
[comment STRIDE/]
[printCharacteristicTitle('Threats (STRIDE model)') /]
[strideToHtml(
	this.protectionGoal,
	this.stride
) /]
[else]
[printCharacteristicTitle('Asset, Protection Goals (CIAAN+UML) and Threats (STRIDE) properties') /]
[html_INFO_start() /]
<p>
	This is an ASSET. The ASSET Characteristics can be found in the respective section for ASSETs.
</p>
[html_INFO_end() /]
[/if]
[comment Comment /]
[if (this.comment->notEmpty())]
[this.comment->printComment() /]
[/if]
[/template]



[template private protectionGoalsToHtml(
	byCategory		: Set(ProtectionGoal),
	selected		: Set(ProtectionGoal)
)
post(trim())]
<table class="table-ciaanuml">
	<thead>
		<tr>
			<th>PROTECTION GOAL</th>
			<th>derived from category</th>
			<th>selected for ASSET</th>
		</tr>
	</thead>

	<tbody>
		<tr>
			<th class="table-column-literal">C = Confidentiality</th>
			<td class="table-column-icon">[byCategory->csmn_hasProtectionGoal_Confidentiality().toIcon() /]</td>
			<td class="table-column-icon">[selected->csmn_hasProtectionGoal_Confidentiality().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">I = Integrity</th>
			<td class="table-column-icon">[byCategory->csmn_hasProtectionGoal_Integrity().toIcon() /]</td>
			<td class="table-column-icon">[selected->csmn_hasProtectionGoal_Integrity().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">A = Availability</th>
			<td class="table-column-icon">[byCategory->csmn_hasProtectionGoal_Availability().toIcon() /]</td>
			<td class="table-column-icon">[selected->csmn_hasProtectionGoal_Availability().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">A = Authenticity</th>
			<td class="table-column-icon">[byCategory->csmn_hasProtectionGoal_Authenticity().toIcon() /]</td>
			<td class="table-column-icon">[selected->csmn_hasProtectionGoal_Authenticity().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">N = Non-repudiation</th>
			<td class="table-column-icon">[byCategory->csmn_hasProtectionGoal_NonRepudiation().toIcon() /]</td>
			<td class="table-column-icon">[selected->csmn_hasProtectionGoal_NonRepudiation().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">U = Usability</th>
			<td class="table-column-icon">[byCategory->csmn_hasProtectionGoal_Usability().toIcon() /]</td>
			<td class="table-column-icon">[selected->csmn_hasProtectionGoal_Usability().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">M = Money</th>
			<td class="table-column-icon">[byCategory->csmn_hasProtectionGoal_Money().toIcon() /]</td>
			<td class="table-column-icon">[selected->csmn_hasProtectionGoal_Money().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">L = Legal</th>
			<td class="table-column-icon">[byCategory->csmn_hasProtectionGoal_Legal().toIcon() /]</td>
			<td class="table-column-icon">[selected->csmn_hasProtectionGoal_Legal().toIcon() /]</td>
		</tr>
	</tbody>
</table>
[/template]


[template private protectionGoalsToStrideToHtml(
	selected		: Set(ProtectionGoal)
)
post(trim())]
[if (selected->notEmpty())]
<table class="table-ciaanuml-2-stride">
	<thead>
		<tr>
			<th rowspan="2">Violated PROTECTION GOAL</th>
			<th>S</th>
			<th>T</th>
			<th>R</th>
			<th>I</th>
			<th>D</th>
			<th>E</th>
		</tr>
	</thead>

	<tbody>
		<tr>
			<th class="table-column-literal">C = Confidentiality</th>
[if (selected->csmn_hasProtectionGoal_Confidentiality())]
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">✅</td>
[else]
			<td colspan="6">not applicable</td>
[/if]
		</tr>
		<tr>
			<th class="table-column-literal">I = Integrity</th>
[if (selected->csmn_hasProtectionGoal_Integrity())]
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">✅</td>
[else]
			<td colspan="6">not applicable</td>
[/if]
		</tr>
		<tr>
			<th class="table-column-literal">A = Availability</th>
[if (selected->csmn_hasProtectionGoal_Availability())]
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">❌</td>
[else]
			<td colspan="6">not applicable</td>
[/if]
		</tr>
		<tr>
			<th class="table-column-literal">A = Authenticity</th>
[if (selected->csmn_hasProtectionGoal_Authenticity())]
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">✅</td>
[else]
			<td colspan="6">not applicable</td>
[/if]
		</tr>
		<tr>
			<th class="table-column-literal">N = Non-Repudiation</th>
[if (selected->csmn_hasProtectionGoal_NonRepudiation())]
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">✅</td>
[else]
			<td colspan="6">not applicable</td>
[/if]
		</tr>
		<tr>
			<th class="table-column-literal">U = Usability</th>
[if (selected->csmn_hasProtectionGoal_Usability())]
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
[else]
			<td colspan="6">not applicable</td>
[/if]
		</tr>
		<tr>
			<th class="table-column-literal">M = Money</th>
[if (selected->csmn_hasProtectionGoal_Money())]
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
[else]
			<td colspan="6">not applicable</td>
[/if]
		</tr>
		<tr>
			<th class="table-column-literal">L = Legal</th>
[if (selected->csmn_hasProtectionGoal_Legal())]
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">✅</td>
			<td class="table-column-icon">❌</td>
			<td class="table-column-icon">❌</td>
[else]
			<td colspan="6">not applicable</td>
[/if]
		</tr>
	</tbody>
</table>
[else]
<p>
	no PROTECTION GOAL assigned to ASSET
</p>
[/if]
[/template]


[template private threatsByProtectionGoalsToHtml(
	this			: Asset,
	element			: NamedElement
)
post(trim())]
[if (true)]
[if (protectionGoal->notEmpty())]
<table class="table-ciaanuml-2-threats">
	<thead>
		<tr>
			<th class="protectionGoal">Violated PROTECTION GOAL</th>
			<th class="domain">Domain</th>
			<th class="threat">Threat</th>
			<th class="name">Name</th>
		</tr>
	</thead>

	<tbody>
[comment
	====================
	CONFIDENTIALITY
	==================== /]
		<tr>
			<th class="protectionGoal table-column-literal">C = Confidentiality</th>
[if (protectionGoal->csmn_hasProtectionGoal_Confidentiality())]
			<td class="domain">Security / Privacy</td>
			<td class="threat"><b><i>'[element.name /]'</i> compromised</b></td>
			<td class="name">breach</td>
[else]
			<td class="notApplicable" colspan="3">(not applicable)</td>
[/if]
		</tr>
[comment
	====================
	INTEGRITY
	==================== /]
		<tr>
			<th rowspan="2" class="protectionGoal table-column-literal">I = Integrity</th>
[if (protectionGoal->csmn_hasProtectionGoal_Integrity())]
			<td class="domain" rowspan="2">Safety</td>
			<td class="threat"><b><i>'[element.name /]'</i> does not work as intended / according to spec</b></td>
			<td class="name">defect</td>
[else]
			<td class="notApplicable" rowspan="2" colspan="3">(not applicable)</td>
[/if]
		</tr>
		<tr>
[if (protectionGoal->csmn_hasProtectionGoal_Integrity())]
			<td class="threat"><b><i>'[element.name /]'s'</i> performance deteriorated</b></td>
			<td class="name">deterioration</td>
[/if]
		</tr>
[comment
	====================
	AVAILABILITY
	==================== /]
		<tr>
			<th class="protectionGoal table-column-literal">A = Availability</th>
[if (protectionGoal->csmn_hasProtectionGoal_Availability())]
			<td class="domain">Safety</td>
			<td class="threat"><b><i>'[element.name /]'</i> is not available</b></td>
			<td class="name">failure / loss</td>
[else]
			<td class="notApplicable" colspan="3">(not applicable)</td>
[/if]
		</tr>
[comment
	====================
	AUTHENTICITY
	==================== /]
[let typeMatch : Boolean = Set(AssetType) { AssetType::Credentials, AssetType::Data, AssetType::Information, AssetType::Signal }->includes(assetType)] 
		<tr>
			<th class="protectionGoal table-column-literal" rowspan="2">A = Authenticity</th>
[if (protectionGoal->csmn_hasProtectionGoal_Authenticity())]
			<td class="domain">Security</td>
			<td class="threat"><b><i>'[element.name /]'</i> is (used by) an unauthorized entity</b></td>
			<td class="name">un-authorized</td>
[else]
			<td class="notApplicable" colspan="3" [if (not typeMatch)]rowspan="2"[/if]>(not applicable)</td>
[/if]
		</tr>
		<tr>
[if (protectionGoal->csmn_hasProtectionGoal_Authenticity() and typeMatch)]
			<td class="domain">Legal</td>
			<td class="threat"><b><i>'[element.name /]'</i> is a forgery</b></td>
			<td class="name">forgery</td>
[/if]
		</tr>
[/let]
[comment
	====================
	NON-REPUDIATION
	==================== /]
		<tr>
			<th class="protectionGoal table-column-literal">N = Non-Repudiation</th>
[if (protectionGoal->csmn_hasProtectionGoal_NonRepudiation())]
			<td class="domain">Security / Legal</td>
			<td class="threat"><b><i>'[element.name /]'s'</i> origin can not be authenticated</b></td>
			<td class="name">un-authenticated</td>
[else]
			<td class="notApplicable" colspan="3">(not applicable)</td>
[/if]
		</tr>
[comment
	====================
	USABILITY
	==================== /]
		<tr>
			<th rowspan="2" class="protectionGoal table-column-literal">U = Usability</th>
[if (protectionGoal->csmn_hasProtectionGoal_Usability())]
			<td class="domain">Safety</td>
			<td class="threat"><b><i>'[element.name /]'</i> is used in an unintended way</b></td>
			<td class="name">abnormal use</td>
[else]
			<td class="notApplicable" rowspan="2" colspan="3">(not applicable)</td>
[/if]
		</tr>
		<tr>
[if (protectionGoal->csmn_hasProtectionGoal_Usability())]
			<td class="domain">Usability</td>
			<td class="threat"><b><i>'[element.name /]'</i> is not understood by user</b></td>
			<td class="name">error use</td>
[/if]
		</tr>
[comment
	====================
	MONEY
	==================== /]
		<tr>
			<th class="protectionGoal table-column-literal">M = Money</th>
[if (protectionGoal->csmn_hasProtectionGoal_Money())]
			<td class="domain">Financial</td>
			<td class="threat"><b><i>'[element.name /]'</i> leads to bad press</b></td>
			<td class="name">reputation</td>
[else]
			<td class="notApplicable" colspan="3">(not applicable)</td>
[/if]
		</tr>
[comment
	====================
	LEGAL
	==================== /]
		<tr>
			<th class="protectionGoal table-column-literal">L = Legal</th>
[if (protectionGoal->csmn_hasProtectionGoal_Legal())]
			<td class="domain">Legal</td>
			<td class="threat"><b><i>'[element.name /]'</i> is in violation of regulation</b></td>
			<td class="name">legal issue</td>
[else]
			<td class="notApplicable" colspan="3">(not applicable)</td>
[/if]
		</tr>
	</tbody>
</table>
[else]
<p>
	no PROTECTION GOAL assigned to ASSET
</p>
[/if]
[else]
<p>
	does not apply to assets of type "[assetType /]"
</p>
[/if]
[/template]


[template private strideToHtml(
	selectedGoals		: Set(ProtectionGoal),
	selectedStride		: Set(STRIDE)
)
post(trim())
{
	derivedStride		: Set(STRIDE) = selectedGoals->csmn_toSTRIDE();
	actualStride		: Set(STRIDE) = if (selectedStride->notEmpty()) then
											selectedStride
										else
											derivedStride
										endif;
}
]
[if (selectedGoals->notEmpty())]
<table class="table-stride">
	<thead>
		<tr>
			<th>STRIDE</th>
[comment]
			<th>Violated property</th>
			<th>Threat</th>
[/comment]
			<th>derived from PROTECTION GOALs</th>
			<th>selected for ASSET</th>
		</tr>
	</thead>

	<tbody>
		<tr>
			<th class="table-column-literal">S = Spoofing</th>
[comment]
			<td>Authentication</td>
			<td>Pretending to be something or someone other than yourself</td>
[/comment]
			<td>[derivedStride->csmn_hasSTRIDE_Spoofing().toIcon() /]</td>
			<td>[actualStride->csmn_hasSTRIDE_Spoofing().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">T = Tampering</th>
[comment]
			<td>Integrity</td>
			<td>Modifying something on disk, network, memory, or elsewhere</td>
[/comment]
			<td>[derivedStride->csmn_hasSTRIDE_Tampering().toIcon() /]</td>
			<td>[actualStride->csmn_hasSTRIDE_Tampering().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">R = Repudiation</th>
[comment]
			<td>Non-repudiation</td>
			<td>Claiming that you didn't do something or where not responsible; can be honest or false</td>
[/comment]
			<td>[derivedStride->csmn_hasSTRIDE_Repudiation().toIcon() /]</td>
			<td>[actualStride->csmn_hasSTRIDE_Repudiation().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">I = Information disclosure</th>
[comment]
			<td>Confidentiality</td>
			<td>Providing information to someone not authorized to access it</td>
[/comment]
			<td>[derivedStride->csmn_hasSTRIDE_InformationDisclosure().toIcon() /]</td>
			<td>[actualStride->csmn_hasSTRIDE_InformationDisclosure().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">D = Denial of service</th>
[comment]
			<td>Availability</td>
			<td>Exhausting resources needed to provide service</td>
[/comment]
			<td>[derivedStride->csmn_hasSTRIDE_DenialOfService().toIcon() /]</td>
			<td>[actualStride->csmn_hasSTRIDE_DenialOfService().toIcon() /]</td>
		</tr>
		<tr>
			<th class="table-column-literal">E = Elevation of privilege</th>
[comment]
			<td>Authorization</td>
			<td>Allowing someone to do something are not authorized to do</td>
[/comment]
			<td>[derivedStride->csmn_hasSTRIDE_ElevationOfPrivilege().toIcon() /]</td>
			<td>[actualStride->csmn_hasSTRIDE_ElevationOfPrivilege().toIcon() /]</td>
		</tr>
	</tbody>
</table>
[else]
<p>
	no PROTECTION GOAL assigned to ASSET
</p>
[/if]
[/template]