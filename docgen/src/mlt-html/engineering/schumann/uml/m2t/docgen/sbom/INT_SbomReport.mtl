[comment encoding = UTF-8 /]
[module INT_SbomReport(
	'http://www.eclipse.org/uml2/5.0.0/UML',
	'http://schumann.engineering/csmn/1',
	'http://schumann.engineering/sbom/1'
)
extends engineering::schumann::uml::m2t::docgen::common::BasicHtmlDocument
]


[import engineering::schumann::uml::m2t::sbom::common::Sbom /]
[import engineering::schumann::uml::m2t::csmn::common::lifecycle::common /]
[import engineering::schumann::uml::m2t::csmn::common::lifecycle::Scope /]
[import engineering::schumann::uml::m2t::csmn::html::lifecycle::Scope /]
[import engineering::schumann::uml::m2t::docgen::common::FileName /]
[import engineering::schumann::uml::m2t::docgen::security::Ref_Regulatory /]
[import engineering::schumann::uml::m2t::common::Metadata /]
[import engineering::schumann::uml::m2t::common::services::EnvironmentService /]

[import engineering::schumann::uml::m2t::html::Boxes /]
[import engineering::schumann::uml::m2t::html::DocumentClassification /]
[import engineering::schumann::uml::m2t::html::DocumentMetadata /]
[import engineering::schumann::uml::m2t::html::Image /]
[import engineering::schumann::uml::m2t::html::Layout /]
[import engineering::schumann::uml::m2t::html::Link /]
[import engineering::schumann::uml::m2t::html::ProtectedArea /]
[import engineering::schumann::uml::m2t::html::common::terms::Terms /]
[import engineering::schumann::uml::m2t::html::Toc /]

[import engineering::schumann::uml::m2t::sbom::html::Sbom /]


[template public generateDocument_INT_SbomReport(
	this : NamedElement
)
? (this.csmn_isScoped())
{
	products		: Set(Product)		= this.csmn_scope().csmn_productInScope();
}
]
[for (product : Product | products)]
[for (softwareVersion : String | product.softwareVersion)]
[let sbomFilename : String = this.name + '-' + product.model + '-' + softwareVersion]
[if (hasSbom(sbomFilename))]
[let sbom : Sbom = readSbom(sbomFilename)]
[sbom.generateDocument_INT_SbomReport(this) /]
[/let]
[/if]
[/let]
[/for]
[/for]
[/template]


[template public generateDocument_INT_SbomReport(
	this : Sbom,
	owner : NamedElement
)
{
	documentTitle	: String	= 'Software Bill of Material (SBOM)';
}]
[setEnv('DOCUMENT_NAME',        'INT_SbomReport') /]
[setEnv('DOCUMENT_EXTENSION',   'html') /]

[file (owner.FILE_URI_DOCUMENT('4'), false, 'UTF-8')]
[HTML_START(documentTitle) /]
	[owner.CoverPage_Chapter_print() /]

	[let content : String = generateDocumentContent(owner)]

	[HTML_TOC(documentTitle) /]

	[invoke(
		'engineering.schumann.uml.m2t.common.services.StringServiceImpl',
		'fixAcceleoOutput(java.lang.String)',
		Sequence { content }) /]
	[/let]
	
[comment HTML_END() /]
	</body>
</html>
[/file]
[/template]


[template private generateDocumentContent(
	this 	: Sbom,
	owner	: NamedElement
)
post(trim())]
[owner.Introduction_Chapter_print() /]

[owner.BasicInformation_Chapter_print() /]

[owner.SoftwareComponents_Chapter_print(this) /]

[owner.VulnerabilityHandling_Chapter_print(this) /]

[owner.Appendix_Licenses_print(this) /]
[/template]


[comment
	====================
	COVER PAGE
	====================
/]
[template private CoverPage_Chapter_print(
	this : NamedElement
)]
[html_PAGE_begin('cover page', 'cover-page document-classification-public')/]
	[DOC_Classiciation_PUBLIC() /]
	[DOC_Timestamp() /]

	[TOC_Title_begin('Software<br/>Bill of Material<br/>(SBOM)') /]
		[this.printScope(true, true) /]
	[TOC_Title_end() /]

	[html_ANSI_CAUTION_Start() /]
		<p>
			This document is the human readable representation of the SBOM.
		</p>
		<p>
			The authoritive source is the digital, machine readable SBOM.
		</p>
		<p>
			This document is provided for convenience of reviews and audits only and should not be used to derive information about the product.
		</p>
	[html_ANSI_CAUTION_End() /]

	[html_ANSI_NOTICE_Start() /]
		The SBOM is provided in SPDX as well as CycloneDX format.
	[html_ANSI_NOTICE_End() /]
[html_PAGE_end('cover page') /]
[/template]


[comment
	====================
	INTRODUCTION
	====================
/]
[template private Introduction_Chapter_print(
	this : NamedElement
)]
[html_PAGE_begin('introduction') /]
	[TOC_Chapter_begin('Introduction') /]
		[TOC_Section_begin('Purpose') /]
			<p>
				This documents describe the software bill of material (SBOM) of the product(s) in scope.
			</p>
	
			[LegalRef_IMDRF_STED_Cybersec() /]
			[LegalRef_China_Cybersec() /]
		[TOC_Section_end() /]
		
		[TOC_Section_begin('Target audience') /]
			<p>
				This document is targeted at:
			</p>

			<ul>
				<li>customers owning the product</li>
				<li>regulatory authorities</li>
				<li>notified body</li>
				<li>risk manangers</li>
			</ul>
		[TOC_Section_end() /]
		
		[TOC_Section_begin('Scope') /]
			[this.printScope(true, false) /]
		[TOC_Section_end() /]
		
		[TOC_Section_begin('Abbreviations') /]
			[TERMS_START() /]
				[TERM_SECURITY_CPE() /]
				[TERM_SECURITY_CVE() /]
				[TERM_SOFTWARE_COTS() /]
				[TERM_SOFTWARE_FOSS() /]
				[TERM_SOFTWARE_OSS() /]
				[TERM_SOFTWARE_OTS() /]
				[TERM_HEALTHCARE_HDO() /]
			[TERMS_END() /]
		[TOC_Section_end() /]
	[TOC_Chapter_end() /]
[html_PAGE_end('introduction') /]
[/template]


[comment
	====================
	BASIC INFORMATION
	====================
/]
[template private BasicInformation_Chapter_print(
	this : NamedElement
)]
[html_PAGE_begin('basic information') /]
	[TOC_Chapter_begin('Basic information') /]
		[comment
			--------------------
			HARDWARE
			--------------------
		/]
		[TOC_Section_begin('Hardware') /]
			[printScope(false, true) /]
		[TOC_Section_end() /]
	
		[comment
			--------------------
			SOFTWARE
			--------------------
		/]
		[TOC_Section_begin('Software') /]
			[printScopeAsSoftware( CommonPlatformEnumerationType::Firmware ) /]
		[TOC_Section_end() /]
	[TOC_Chapter_end() /]
[html_PAGE_end('basic information') /]
[/template]


[comment
	====================
	SOFTWARE COMPONENTS
	====================
/]
[template private SoftwareComponents_Chapter_print(
	this : NamedElement,
	sbom : Sbom
)]
[html_PAGE_begin('software components') /]
	[TOC_Chapter_begin('Software Components') /]
		[SoftwareComponent_Overview_Section_print(sbom) /]
[html_PAGE_end('software components') /]

[html_PAGE_begin('definitions') /]
		[SoftwareComponent_Definitions_Section_print(sbom) /]
[html_PAGE_end('definitions') /]

[html_PAGE_begin('os and firmware') /]
		[TOC_Section_begin('Software from ' + VENDOR_NAME()) /]
			[SoftwareComponent_Firmware_SubSection_print(sbom) /]
[html_PAGE_end('os and firmware') /]

[html_PAGE_begin('application') /]
			[SoftwareComponent_Application_SubSection_print(sbom) /]
[html_PAGE_end('application') /]

[html_PAGE_begin('library') /]
			[SoftwareComponent_Library_SubSection_print(sbom) /]
		[TOC_Section_end() /]
[html_PAGE_end('library') /]

[html_PAGE_begin('3rdparty') /]
		[SoftwareComponent_3rdParty_Section_print(sbom) /]
	[TOC_Chapter_end() /]
[html_PAGE_end('3rdparty') /]
[/template]


[comment
	--------------------
	SOFTWARE COMPONENTS > Overview
	--------------------
/]
[template private SoftwareComponent_Overview_Section_print(
	this : NamedElement,
	sbom : Sbom
)]
[TOC_Section_begin('Overview') /]
	<p>
		The following table shows all components present. Details for each component will be provided in later sections.
	</p>

	[sbom.printAsTable() /]
[TOC_Section_end() /]
[/template]


[comment
	--------------------
	SOFTWARE COMPONENTS > Definitions
	--------------------
/]
[template private SoftwareComponent_Definitions_Section_print(
	this : NamedElement,
	sbom : Sbom
)]
[TOC_Section_begin('Definitions') /]
	[TOC_SubSection_begin('IEC 81001-5-1 Classification')/]
		<p>
			Each component is classified according to IEC 81001-5-1:
		</p>
	
		<ul>
			<li><b><i>MAINTAINED SOFTWARE</i></b></li>
			<li><b><i>SUPPORTED SOFTWARE</i></b></li>
			<li><b><i>REQUIRED SOFTWARE</i></b></li>
		</ul>
	
		[html_IMG(
			'../../_snippets/IEC 81001-5-1/IEC 81001-5-1 SOFTWARE ITEM classification.svg',
			'IEC 81001-5-1 SOFTWARE ITEM classification',
			'overview and comparison of IEC 81001-5-1 SOFTWARE ITEM classification',
			'width: 100%'
		) /]
	[TOC_SubSection_end() /]

	[TOC_SubSection_begin('NIST IR 7695 - CPE Part')/]
		<p>
			"Part" is a termn defined in NIST IR 7695 for CPE:
		</p>

		<blockquote>
			<p>
				The part attribute SHALL have one of these three string values:
			</p>
		
			<ul>
				<li>The value "a", when the WFN is for a class of applications.</li>
				<li>The value "o", when the WFN is for a class of operating systems.</li>
				<li>The value "h", when the WFN is for a class of hardware devices.</li>
			</ul>
	
			<div class="cite-source">
				National Institue of Standards and Technology (NIST) - U.S. Department of Commerce,
				"Common Platform Enumeration: Naming Specification Version 2.3",
				section 5.3.3.1 "Part",
				<a href="https://csrc.nist.gov/pubs/ir/7695/final">NIST IR 7695</a>
			</div>
		</blockquote>
	[TOC_SubSection_end() /]

	[TOC_SubSection_begin('NIST IR 7695 - Operating System')/]
		<blockquote>
			<p>
				Operating System: 
				A computer program, implemented in either software or firmware, which acts as an intermediary between users of a computer and the computer hardware. 
				The purpose of an operating system is to provide an environment in which a user can execute applications.
			</p>

			<div class="cite-source">
				National Institue of Standards and Technology (NIST) - U.S. Department of Commerce,
				"Common Platform Enumeration: Naming Specification Version 2.3",
				section 2.1. "Definitions",
				<a href="https://csrc.nist.gov/pubs/ir/7695/final">NIST IR 7695</a>
			</div>
		</blockquote> 

		<p>
			This definition also applies to software running on a embedded device. Such a software is often not a dedicated product in its own rights. In addition, it often comes with an operating system enrichted by custom user interface and functionality.
		</p>

		<p>
			Such an embedded software is donated by NIST IR 7695 as "operating system". The list above distinguish this use-case to "Device Software" as well.
		</p>
	[TOC_SubSection_end() /]

	[TOC_SubSection_begin('NIST IR 7695 - Application')/]
		<blockquote>
			<p>
				Application:
				A system for collecting, saving, processing, and presenting data by means of a computer (ISO 19770-2:4.1.1).
				The term application is generally used when referring to a component of software that can be executed. The terms application and software application are often used synonymously. 
			</p>

			<div class="cite-source">
				National Institue of Standards and Technology (NIST) - U.S. Department of Commerce,
				"Common Platform Enumeration: Naming Specification Version 2.3",
				section 2.1. "Definitions",
				<a href="https://csrc.nist.gov/pubs/ir/7695/final">NIST IR 7695</a>
			</div>
		</blockquote> 

		<p>
			This definition also applies to libraries which cannot be executables standalone. Such libraries are used very often from the C(OTS) and (F)OSS realm.
		</p>

		<p>
			Libaries is donated by NIST IR 7695 as "Application". The list above distinguish this use-case to "Library" as well.
		</p>
	[TOC_SubSection_end() /]
[TOC_Section_end() /]
[/template]


[comment
	--------------------
	SOFTWARE COMPONENTS > vendor > Firmware
	--------------------
/]
[template private SoftwareComponent_Firmware_SubSection_print(
	this : NamedElement,
	sbom : Sbom
)]
[TOC_SubSection_begin('Operating System and Firmware') /]
	<p>
		The following lists the firmware included in the software.
	</p>

	[html_NOTE_Start() /]
		developed by [VENDOR_NAME() /]
	[html_NOTE_End() /]

	[html_TIP_Start()/]
		Firmware is any software run on an embedded system, no matter if it runs on a field programable gate array (FPGA), micro controller (uC), digital signal processor (DSP), or general purpose computational unit (CPU).
	[html_TIP_End()/]

	[sbom.printOperatingSystemAndFirmware() /]
[TOC_SubSection_end() /]
[/template]


[comment
	--------------------
	SOFTWARE COMPONENTS > vendor > Application
	--------------------
/]
[template private SoftwareComponent_Application_SubSection_print(
	this : NamedElement,
	sbom : Sbom
)]
[TOC_SubSection_begin('Applications') /]
	<p>
		The following lists the applications included in the software.
	</p>

	[html_NOTE_Start() /]
		developed by [VENDOR_NAME() /]
	[html_NOTE_End() /]

	[html_TIP_Start()/]
		An application is any executable. Libraries used by such an application will be listed in a separate section later.
	[html_TIP_End()/]

	[sbom.printApplications() /]
[TOC_SubSection_end() /]
[/template]


[comment
	--------------------
	SOFTWARE COMPONENTS > Library
	--------------------
/]
[template private SoftwareComponent_Library_SubSection_print(
	this : NamedElement,
	sbom : Sbom
)]
[TOC_SubSection_begin('Libraries') /]
	<p>
		The following lists the libraries included in the software.
	</p>

	[html_NOTE_Start()/]
		Includes only libraries by [VENDOR_NAME() /]. Libraries from 3rd parties are listed in a separate section later.
	[html_NOTE_End()/]

	[sbom.printLibraries() /]
[TOC_SubSection_end() /]
[/template]


[comment
	--------------------
	SOFTWARE COMPONENTS > 3rd Party / C(OTS) / (F)OSS
	--------------------
/]
[template private SoftwareComponent_3rdParty_Section_print(
	this : NamedElement,
	sbom : Sbom
)]
[TOC_Section_begin('Software from 3rd Party / C(OTS) / (F)OSS') /]
	<p>
		The following lists components (applications, firmware, libraries etc.).
	</p>

	[html_NOTE_Start()/]
		Includes everything developed by a 3rd party, i.e. C(OTS) and (F)OSS, and <b>NOT</b> by [VENDOR_NAME() /].
	[html_NOTE_End()/]

	[sbom.print3rdParty() /]
[TOC_Section_end() /]
[/template]


[comment
	====================
	APPENDIX
	====================
/]
[template private VulnerabilityHandling_Chapter_print(
	this : NamedElement,
	sbom : Sbom
)]
[html_PAGE_begin('vulnerability handling') /]
[TOC_Chapter_begin('Vulnerability handling') /]
	[TOC_Section_begin('Vulnerability reporting') /]
		[html_ANSI_NOTICE_Start() /]
			<p>
				Vulnerabilities can be reported by anyone through various channels. 
			</p>
	
			<p>
				For contact and reporting procedure details, please check [VENDOR_NAME() /] website at [html_Link(VENDOR_WEBSITE()) /].
			</p>
		[html_ANSI_NOTICE_End() /]
	[TOC_Section_end() /]

	[TOC_Section_begin('Vulnerability disclosure') /]
		[html_ANSI_NOTICE_Start() /]
			<p>
				Vulnerabilities aren't disclosed in this document due to their nature of evolving over time.
			</p>
	
			<p>
				For current vulnerability information, please check [VENDOR_NAME() /] website at [html_Link(VENDOR_WEBSITE()) /].
			</p>
		[html_ANSI_NOTICE_End() /]
	
		[html_INFO_Start() /]
			[html_Link('Vulnerability Exploitability eXchange (VEX)', 'https://cyclonedx.org/capabilities/vex/') /] as well as [html_Link('Common Security Advisory Framework (CSAF)', 'https://oasis-open.github.io/csaf-documentation/index.html') /] are used for machine readable and automatable monitoring of evolving threats. 
		[html_INFO_End() /]
	[TOC_Section_end() /]
[TOC_Chapter_end() /]
[html_PAGE_end('vulnerability handling') /]
[/template]



[comment
	====================
	APPENDIX
	====================
/]
[template private Appendix_Licenses_print(
	this : NamedElement,
	sbom : Sbom
)
{
	licenses : OrderedSet(String) = sbom.license();
}]
[if (not licenses->isEmpty())]
[html_PAGE_begin('appendix a') /]
[TOC_Chapter_begin('Appendix A - Licenses') /]

[for (licenses)]
[if (i > 1)]
[html_PAGE_end() /]
[html_PAGE_begin(self) /]
[/if]
	[TOC_Section_begin('license ' + self) /]
	[TOC_anchor(self) /]
	<p>
		<b>COMPONENTS</b> with this license:
	</p>
	<ul>
	[for (sbom.allComponentsWithicense(self))]
		<li>[TOC_link(name, name._toString()) /]</li>
	[/for]
	</ul>

	[this.protectedArea('Licenses > ' + self, this.DIRECTORY_URI_SNIPPETS('4')) /]
	[this.TOC_Section_end() /]
[/for]
[html_PAGE_end('appendix - a') /]
[/if]
[/template]