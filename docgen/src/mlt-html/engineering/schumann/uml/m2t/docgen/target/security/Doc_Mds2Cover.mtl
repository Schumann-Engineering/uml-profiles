[comment encoding = UTF-8 /]
[module Doc_Mds2Cover(
	'http://www.eclipse.org/uml2/5.0.0/UML',
	'http://schumann.engineering/csmn/1',
	'http://schumann.engineering/sbom/1',
	'http://schumann.engineering/docgen/1'
)]


[**
 * ====================
 * DOCUMENT: 	Manufacturer Disclosure Statement for Medical Device Security (MDS2)
 * REALM:    	International
 * CONTENT:  	
 * PROFILES: 	./.
 * UUID:		9f557eb4-0942-4747-a259-cb6129338931 
 * ====================
 **/]

[comment CSMN profile /]
[comment ... common /]
[import engineering::schumann::uml::m2t::csmn::common::CommonPlatformEnumerationType /]
[import engineering::schumann::uml::m2t::csmn::common::elements::SystemElement /]
[import engineering::schumann::uml::m2t::csmn::common::lifecycle::common /]
[import engineering::schumann::uml::m2t::csmn::common::lifecycle::Dt_SoftwareVersion /]
[import engineering::schumann::uml::m2t::csmn::common::lifecycle::Dt_Model /]
[import engineering::schumann::uml::m2t::csmn::common::lifecycle::Scope /]
[import engineering::schumann::uml::m2t::csmn::common::lifecycle::ScopeConstraint /]

[comment HTML profile /]
[comment ... common /]
[import engineering::schumann::uml::m2t::html::Boxes /]
[import engineering::schumann::uml::m2t::html::Layout /]

[comment SBOM profile /]
[comment ... common /]
[import engineering::schumann::uml::m2t::sbom::common::Sbom /]

[comment UML profile /]
[comment ... common /]
[import engineering::schumann::uml::m2t::common::Metadata /]
[comment ... services /]
[import engineering::schumann::uml::m2t::common::services::VariableService /]

[comment DocGen /]
[comment ... common /]
[comment import engineering::schumann::uml::m2t::docgen::filesystem::FileName /]
[import engineering::schumann::uml::m2t::docgen::filesystem::FileName.sbom /]
[comment ... html /]
[import engineering::schumann::uml::m2t::csmn::html::lifecycle::Scope /]
[import engineering::schumann::uml::m2t::docgen::html::BasicHtmlDocument /]
[import engineering::schumann::uml::m2t::docgen::html::QualityManagement /]
[import engineering::schumann::uml::m2t::docgen::html::Toc /]
[import engineering::schumann::uml::m2t::docgen::target::security::Chapter_BasicInformation /]
[import engineering::schumann::uml::m2t::docgen::target::security::Chapter_CoverPage /]
[comment ... services /]
[import engineering::schumann::uml::m2t::docgen::services::DocGenService /]


[**
 * IMPORTANT: Generation is *per software system* of a product
 ** /]
[template public generateDocument_INT_Mds2Cover(
	this : Model
)
{
	templateUUID		: String			= '9f557eb4-0942-4747-a259-cb6129338931';
	templateVersion		: String			= '0.1';
	documentTitle		: String			= env(templateUUID + '.Output.Title', 'Manufacturer Disclosure Statement for Medical Device Security (MDS2)');

	productElements		: Set(Package) 		= this.allOwnedElements()
												->filter(Package)
												->select( p : Package | p.csmn_isScoped() );
	softwareElements	: Set(Component) 	= this.csmn_allOperatingSystem();
}]
[setEnv(templateUUID + '.Output.Extension',   	'html') /]
[setEnv(templateUUID + '.Classification',		'public') /]


[for (productElement : NamedElement | productElements)]
	[comment iterate over products /]
	[for (product : Product | productElement.csmn_scope().csmn_productInScope()->select(model.csmn_shallGenerateProductModel()))]
		[comment find all Components/SystemElements which constraint/match product /]
		[for (os : Component | softwareElements->select(csmn_isMatch(product)))]
			[comment iterate over all software version of the system element /]
			[for (softwareVersion : String | os.csmn_scopeConstraint().softwareConstraint.softwareVersion->select(csmn_shallGenerateSoftwareVersion()))]
				[let _context : Context = os.getContext(product, softwareVersion, documentTitle, templateUUID, templateVersion)]
[productElement.generateDocument_INT_MDS2(_context)/]
				[/let]
			[/for]
		[/for]
	[/for]
[/for]
[/template]


[template public generateDocument_INT_MDS2(
	this			: NamedElement,
	_context		: Context
)]
[file (DocGen_File_URI(_context), false, 'UTF-8')]
[HTML_START(_context) /]
	[CoverPage_Chapter_print_start(_context) /]
		[html_ANSI_CAUTION_start() /]
			<p>
				This document is the human readable representation of the MDS2.
			</p>
			<p>
				The authoritive source is the digital, machine readable MDS2.
			</p>
			<p>
				This document is provided for convenience of reviews and audits only and should not be used to derive information about the product.
			</p>
		[html_ANSI_CAUTION_end() /]
	
		[html_ANSI_NOTICE_start() /]
			The MDS2 is provided in Excel as defined by ANSI/NEMA HN-1.
		[html_ANSI_NOTICE_end() /]
	[CoverPage_Chapter_print_end(_context) /]

	[let content : String = generateDocumentContent(this, _context)]
	[HTML_PAGE_ERRORS(_context)/]

	[QM_PAGE_Signatory(_context) /]

[comment]
	[invoke(
		'engineering.schumann.uml.m2t.common.services.StringServiceImpl',
		'fixAcceleoOutput(java.lang.String)',
		Sequence { HTML_PAGE_TOC(_context) }) /]
[/comment]

	[invoke(
		'engineering.schumann.uml.m2t.common.services.StringServiceImpl',
		'fixAcceleoOutput(java.lang.String)',
		Sequence { content }) /]
	
	[/let]
[HTML_END(_context)/]
[/file]
[/template]


[template private generateDocumentContent(
	this			: NamedElement,
	_context		: Context
)
post(trim())]
[Introduction_Chapter_print(_context) /]

[BasicInformation_Chapter_print(_context) /]

[MDS2_ChapterL_print(_context) /]
[/template]


[comment
	====================
	INTRODUCTION
	====================
/]
[template private Introduction_Chapter_print(
	this 			: NamedElement,
	_context		: Context
)]
[html_PAGE_start('introduction') /]
	[TOC_Chapter_start('Introduction') /]
		[TOC_Section_start('Purpose') /]
			<p>
				This documents describe the security capabailities of product(s) in scope based on ANSI/NEMA HN-1 as well as other standards.
			</p>
		[TOC_Section_end() /]
		
		[TOC_Section_start('Target audience') /]
			<p>
				This document is targeted at:
			</p>

			<ul>
				<li>customers owning the product</li>
				<li>regulatory authorities</li>
				<li>notified body</li>
			</ul>
		[TOC_Section_end() /]
		
		[TOC_Section_start('Scope') /]
			[this.printScopeForSoftware(_context) /]
		[TOC_Section_end() /]
	[TOC_Chapter_end() /]
[html_PAGE_end('introduction') /]
[/template]


[comment
	====================
	MDS2
	====================
/]
[template private MDS2_ChapterL_print(
	this			: NamedElement,
	_context		: Context
)]
[html_PAGE_start('MDS2') /]
[TOC_Chapter_start('Security Capabilities') /]

[TOC_Chapter_end() /]
[html_PAGE_end('MDS2') /]
[/template]