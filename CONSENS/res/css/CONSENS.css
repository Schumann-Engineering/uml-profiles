* {
	shapeDirection:	2; /* 0 = top-left, 1 = top, 2 = top-right, 3 = left, 4 = center, 5 = right, 6 = bottom-left, 7 = bottom, 8 = bottom-right. */
}


/* ====================
 * COMPONENT
 * ==================== */
/*
 * close all compartments of a component
 */
ComponentDiagram Compartment {
	visible: 					false;
	showTitle:					false;
}


ComponentDiagram Component {
	bold:						true;
	/*
	topMarginLabel:				10;
	*/
}



/* ====================
 * PORT
 * ==================== */
/*
 * only show name of port.
 */
ComponentDiagram Port {
	maskLabel:					name visibility;
	portPosition:				"onLine"; /*inside, onLine, outside*/
	
	italic:						true;
	
	/* Forced the label to one position, by default(for port) it will placed according to the parent position.
	 * 
	 * type:	Boolean
	 * default:	false
	 */
	labelConstrained: 			true;	
}


/* ====================
 * FLOW
 * ==================== */
ComponentDiagram Dependency > Label {
	underline:					true;
}


/* ====================
 * LABELS
 * ==================== */
ComponentDiagram Label {
	isNameWrap:					true;
}


/* ====================
 * CONNECTOR
 * ==================== */
/*
 * only show name of port.
 */
ComponentDiagram Connector > Label {
	visible:					false;
}

*[appliedStereotypes~="CONSENS::Connection"][direction="uni_directional"] {
	sourceDecoration:			none;
}

*[appliedStereotypes~="CONSENS::Connection"][direction="bi_directional"] {
	sourceDecoration:			none;
	targetDecoration:			none;
}

*[appliedStereotypes~="CONSENS::Connection"] {
	/* line style */
	lineColor:					#000000;
	lineStyle:					solid;
	lineWidth:					2;
}

/*
Relationship[appliedStereotypes~="CONSENS::Connection"][connectionType="Energy"] {
}
*/

*[appliedStereotypes~="CONSENS::Connection"][connectionType="Disturbance"] {
	lineColor:					#FF0000;
	lineStyle:					solid;
}

*[appliedStereotypes~="CONSENS::Connection"][connectionType="Information"] {
	lineStyle:					dashed;
	lineDashLength:				5;
	lineDashGap:				5;
}

*[appliedStereotypes~="CONSENS::Connection"][connectionType="Material"] {
	lineWidth:					5;
}

*[appliedStereotypes~="CONSENS::Connection"][connectionType="Mechanical"] {
	lineColor:					#CCCCCC;
	lineWidth:					5;
	targetDecoration:			none;
	sourceDecoration:			none;
}



/* ====================
 * STEREOTYPES
 * ==================== */ 
ComponentDiagram Compartment[type=StereotypeCompartment] {
	visible:					false;
}

ComponentDiagram Compartment[type=StereotypeBrace] {
	visible:					false;
}

/* Display the properties in Comment > Compartment*/
ComponentDiagram StereotypeComment Compartment[type=StereotypeCompartment] {
	visible:					true;
}

Label[type=StereotypeLabel] {
	visible:					false;
}


/* ====================
 * STEREOTYPES
 * ==================== */
/* hide stereotype names */
Label[stereotype="CONSENS::Connection"],
Compartment[stereotype="CONSENS::Connection"],
Dependency[stereotype="CONSENS::Connection"] > Label[type="Sterotype"],
Label[stereotype="CONSENS::System-Element"],
Compartment[stereotype="CONSENS::System-Element"],
Label[stereotype="CONSENS::User"],
Compartment[stereotype="CONSENS::User"],
Label[stereotype="CONSENS::Environment"],
Compartment[stereotype="CONSENS::Environment"],
/* Zone label: shall be shown! */
Compartment[stereotype="CONSENS::Zone"]
Label[stereotype="CONSENS::Box"],
Compartment[stereotype="CONSENS::Box"] {
	visible:					false;
	displayHeader:				false;	
}

Label[stereotype="CONSENS::Zone"] {
	visible:					true;
	displayHeader:				false;
	bold:						true;
}


/* ====================
 * LABELS
 * ==================== */
Port > Label[kind="FloatingLabel"],
Port {
	/* Set to true if the floating label is constrained on eight position, you can move it manually.
	 * 
	 * type:	Boolean
	 * default:	false
	 */
	isFloatingLabelConstrained:	true;
	
	/* Forced the label to one position, by default(for port) it will placed according to the parent position.
	 * 
	 * type:	Boolean
	 * default:	false
	 */
	labelConstrained: 			true;
}


/* hide stereotype label of connection */
Dependency[appliedStereotypes~="CONSENS::Connection"] > Label[kind=Stereotype] {
	visible: 		false;
}

/* hide text label of connection */
Dependency[appliedStereotypes~="CONSENS::Connection"] > Label[kind=Name] {
	visible: 		true;
}


/* ====================
 * COMPARTMENTS
 * ==================== */
/* no compartments by default */
Component[appliedStereotypes~="CONSENS::System-Element"] > Compartment,
Component[appliedStereotypes~="CONSENS::Environment"] > Compartment,
Component[appliedStereotypes~="CONSENS::User"] > Compartment,
Component[appliedStereotypes~="CONSENS::Zone"] > Compartment,
Comment[appliedStereotypes~="CONSENS::Box"] > Compartment {
	visible:					false;
}


/* ====================
 * ZONE (Part 1/2)
 * 
 * NOTE: Zone is done first here because System Element might
 * override some settings later on. This allows for a component
 * to be a Zone as well as System Element
 * ==================== */
Component[appliedStereotypes~="CONSENS::Zone"],
Package[appliedStereotypes~="CONSENS::Zone"] {
	/* fill */
	fillColor:					#FFFFFF;
	transparency:				50;
	gradient:					#FFFFFF vertical;
	
	/* border */
	lineColor:					#FF0000;
	lineWidth:					2;
	borderStyle:				dash;

	/* decorator */
	/* specialized in rules below */
	
	/* FQN */
	qualifiedNameDepth:			none;
}

Component[appliedStereotypes~="CONSENS::Zone"] > Compartment[kind=packagedelements] {
	collapsed:					false;
	visible:					true;
}


/* ====================
 * SYSTEM ELEMENT
 * ==================== */
Component[appliedStereotypes~="CONSENS::System-Element"] {
	/* fill */
	fillColor:					#DAE8FC !important;
	transparency:				0;
	gradient:					#FFFFFF vertical;

	/* border */
	lineColor:					#000000;
	lineWidth:					2;
	borderstyle:				solid;
	
	/* decorator */
	/*
	shapeVisibility:			true;
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/package-variant.svg';
	*/
	elementIcon:				true;
	
	/* FQN */
	qualifiedNameDepth:			none;
}

Component[appliedStereotypes~="CONSENS::System-Element"][isContainer=true] > Compartment[kind=packagedelements] {
	collapsed:					false;
	visible:					true;
}

Component[appliedStereotypes~="CONSENS::System-Element"][isContainer=false] > Compartment[kind=packagedelements] {
	collapsed:					false;
	visible:					false;
}


/* ====================
 * USER
 * ==================== */
Component[appliedStereotypes~="CONSENS::User"] {
	/* fill */
	fillColor:					#D5E8D4 !important;
	transparency:				0;
	gradient:					#FFFFFF vertical;

	/* border */
	lineColor:					#000000;
	lineWidth:					2;
	
	/* icon */
	elementIcon:				false;
	shapeVisibility:			true;	
	
	/* FQN */
	qualifiedNameDepth:			none;
}


/* ====================
 * ENVIRONMENT
 * ==================== */
Component[appliedStereotypes~="CONSENS::Environment"] {
	/* fill */
	fillColor:					#FFFFFF !important;
	transparency:				0;

	/* border */
	lineColor:					#000000;
	lineWidth:					2;
	borderstyle:				solid;	

	/* decorator */
	shapeVisibility:			true;
	elementIcon:				false;
		
	/* FQN */
	qualifiedNameDepth:			none;
}

Component[appliedStereotypes~="CONSENS::Environment"][isContainer=true] > Compartment[kind=packagedelements] {
	collapsed:					false;
	visible:					true;
}

Component[appliedStereotypes~="CONSENS::Environment"][isContainer=false] > Compartment[kind=packagedelements] {
	collapsed:					false;
	visible:					false;
}


/* ====================
 * BOX
 * ==================== */
ComponentDiagram Comment[appliedStereotypes~="CONSENS::Box"],
ComponentDiagram Package[appliedStereotypes~="CONSENS::Box"] {
	/* fill */
	fillColor:					#F5F5F5;
	gradient:					none;

	/* text */
	textAlignment:				center;
	fontColor:					#000000;
	bold:						true;
	
	/* border */
	lineColor:					#000000;
	lineWidth:					2;
	borderStyle:				solid;
	
	/* decorator */
	shapeVisibility:			true;
	elementIcon:				false;
	
	/* FQN */
	qualifiedNameDepth:			none;
}


ComponentDiagram Package > Compartment[kind=packagedelements] {
	collapsed:					false;
	visible:					true;	
}




/* ====================
 * ICONS & SYMBOLS
 * ==================== */
/* Box */
ComponentDiagram Comment[appliedStereotypes~="CONSENS::Box"] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/information-outline.svg';
	shapeDirection:				2;
	shapeVisibility:			true;
	elementIcon:				false;
}
ComponentDiagram Package[appliedStereotypes~="CONSENS::Box"] {
	shapeVisibility:			false;
	elementIcon:				true;
}

/* User.Generic (DEFAULT) */
Component[appliedStereotypes~="CONSENS::User"][UserType="Generic"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-circle.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Generic"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-circle-outline.svg';
}

/* User.Administrator */
Component[appliedStereotypes~="CONSENS::User"][UserType="Administrator"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-cog.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Administrator"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-cog-outline.svg';
}

/* User.Attacker */
Component[appliedStereotypes~="CONSENS::User"][UserType="Attacker"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/emoticon-devil.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Attacker"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/emoticon-devil-outline.svg';
}

/* User.Auditor */
Component[appliedStereotypes~="CONSENS::User"][UserType="Auditor"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-eye.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Auditor"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-eye-outline.svg';
}

/* User.Authority */
Component[appliedStereotypes~="CONSENS::User"][UserType="Authority"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-tie-hat.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Authority"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-tie-hat-outline.svg';
}

/* User.EthicalHacker */
Component[appliedStereotypes~="CONSENS::User"][UserType="EthicalHacker"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-cowboy-hat.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="EthicalHacker"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-cowboy-hat-outline.svg';
}

/* User.Operator */
Component[appliedStereotypes~="CONSENS::User"][UserType="Operator"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Operator"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-outline.svg';
}

/* User.OperatorEducated */
Component[appliedStereotypes~="CONSENS::User"][UserType="OperatorEducated"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-school.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="OperatorEducated"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-school-outline.svg';
}

/* User.Owner */
Component[appliedStereotypes~="CONSENS::User"][UserType="Owner"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-tie.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Owner"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-tie-outline.svg';
}

/* User.Patient */
Component[appliedStereotypes~="CONSENS::User"][UserType="Patient"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-injury.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Patient"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-injury-outline.svg';
}

/* User.Service */
Component[appliedStereotypes~="CONSENS::User"][UserType="Service"][UseFilledIcon=true] {	
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-wrench.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Service"][UseFilledIcon=false] {	
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-wrench-outline.svg';
}

/* User.UNKNOWN */
Component[appliedStereotypes~="CONSENS::User"][UserType="UNKNOWN"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-question.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="UNKNOWN"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/account-question-outline.svg';
}

/* User.Vendor */
Component[appliedStereotypes~="CONSENS::User"][UserType="Vendor"][UseFilledIcon=true] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/factory.svg';
}
Component[appliedStereotypes~="CONSENS::User"][UserType="Vendor"][UseFilledIcon=false] {
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/factory.svg';
}

/* Environment = always show symbol, not icon */
Component[appliedStereotypes~="CONSENS::Environment"] {
	shapeVisibility:			true;
	elementIcon:				false;
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/earth.svg';
}

/* System-Element = symbol only */
Component[appliedStereotypes~="CONSENS::System-Element"] {
	shapeVisibility:			true;
	elementIcon:				false;
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/puzzle-outline.svg';
}

/* Environment = symbol only */
Component[appliedStereotypes~="CONSENS::Environment"] {
	shapeVisibility:			true;
	elementIcon:				false;
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/earth.svg';
}
 
/* Zone = always show symbol, not icon */
Component[appliedStereotypes~="CONSENS::Zone"] {
	shapeVisibility:			true;
	elementIcon:				false;
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/security.svg';
}

/* System-Element, which is a Zone = show symbol and icon, prefer symbol of Zone */
Component[appliedStereotypes~="CONSENS::System-Element"][appliedStereotypes~="CONSENS::Zone"],
Component[appliedStereotypes~="CONSENS::Environment"][appliedStereotypes~="CONSENS::Zone"] {
	shapeVisibility:			true;
	elementIcon:				true;
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/security.svg';
}

/* Zone as package = always show icon, not symbol */
Package[appliedStereotypes~="CONSENS::Zone"] {
	shapeVisibility:			false;
	elementIcon:				true;
}


/* ====================
 * ZONE (Part 2/2)
 * 
 * NOTE: this overrides the border
 *
 * ==================== */
/* override border for  */ 
Component[appliedStereotypes~="CONSENS::Zone"] {
	/* border */
	lineColor:					#FF0000;
	lineWidth:					2;
	
	/* decorator */
	shapeVisibility:			true;
	svgFile:					'platform:/resource/schumann-engineering.uml-profiles/CONSENS/res/assets/security.svg';
	
	maxNumberOfSymbol:			2;
}