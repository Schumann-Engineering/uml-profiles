[comment encoding = UTF-8 /]
[module PackageableElement('http://www.eclipse.org/uml2/5.0.0/UML')/]
[import engineering::schumann::uml::m2t::services::EnvironmentService /]
[import engineering::schumann::uml::m2t::NamedElement /]
[import engineering::schumann::uml::m2t::Namespace /]


[comment 
	Returns the full qualified name of an element 
/]
[query public _fqn(element : PackageableElement) : String = 
	_join( _fqnPath_(element), env('NAMESPACE_DIVIDER') )
/]
[**	if _fqnPath_(element)->size() = 1 then _fqnPath_(element)->first() else '' + _fqnPath_(element)->sep(env('NAMESPACE_DIVIDER')) endif **]
[** _namespace_( element._owningPackages()->append(element) ) **]


[comment
	Returns a list of { <full namespace string> (if exist), <element name> }
/]
[query private _fqnPath_(element : PackageableElement) : Sequence(String) =
	if element._hasOwner() then element._namespacePath_()->append( element._name() ) else Sequence{element._name()} endif
/]


[comment 
	Returns true if element has an owner. False otherwise
/]
[query public _hasOwner(element : PackageableElement) : Boolean =
	not element.owner.oclIsUndefined()
/]


[comment 
	Constructs the path of packages of an element
/]
[query private _namespacePath_(element : PackageableElement) : Sequence(String) =
	element._owningPackages()._name()
/]


[comment 
	Returns the complete namespace of an element 
/]
[query public _namespace(element : PackageableElement) : String =
	_join( element._namespacePath_(), env('NAMESPACE_DIVIDER') )
/]


[comment
	Returns the sequence of parent packages, starting w/ the top most element 
/]
[query public _owningPackages(element : PackageableElement) : Sequence(NamedElement) =
	if element.namespace <> null then element.namespace._owningPackages() else Sequence{} endif
/]
 