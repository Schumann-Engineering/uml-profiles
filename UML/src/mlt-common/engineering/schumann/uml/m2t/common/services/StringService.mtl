[module StringService('http://www.eclipse.org/uml2/5.0.0/UML')/]


[comment creates a comment block out of a string /]
[query public comment(arg0 : String, arg1 : String) : String
	= invoke('engineering.schumann.uml.m2t.common.services.StringServiceImpl', 'comment(java.lang.String, java.lang.String)', Sequence{arg0, arg1}) /]

[comment Escapes characters if needed /]
[query public escape(arg0 : String) : String
	= invoke('engineering.schumann.uml.m2t.common.services.StringServiceImpl', 'escape(java.lang.String)', Sequence{arg0}) /]

[comment returns just the upper case characters from a string /]
[query public getUChars(arg0 : String) : String
	= invoke('engineering.schumann.uml.m2t.common.services.StringServiceImpl', 'getUChars(java.lang.String)', Sequence{arg0}) /]

[query public hasContent(arg0 : String) : Boolean
	= not isNullOrEmpty( arg0 ) /]

[query public isEmpty(arg0 : String) : Boolean = 
	if (arg0 = null) then 
		true
	else
		arg0.trim() = ''
	endif
/]

[query public isNull(arg0 : String) : Boolean
	= arg0 = null /]

[query public isNullOrEmpty(arg0 : String) : Boolean
	= isNull(arg0) or isEmpty(arg0) /]

[comment pads a string to the left /]
[query public padLeft(str : String, length : Integer) : String
	= str.padLeft(length, ' ') /]

[comment pads a string to the left (UNSAFE) /]
[query public padLeftUnsafe(str : OclAny, length : Integer) : String
	= str.padLeftUnsafe(length, ' ') /]

[comment pads a string to the left /]
[query public padLeft(str : String, length : Integer, padding : String) : String
	= invoke('engineering.schumann.uml.m2t.common.services.StringServiceImpl', 'padLeft(java.lang.String, java.lang.Integer, java.lang.String)', Sequence{str, length, padding}) /]

[comment pads a string to the left (UNSAFE) /]
[query public padLeftUnsafe(str : OclAny, length : Integer, padding : String) : String
	= invoke('engineering.schumann.uml.m2t.common.services.StringServiceImpl', 'padLeft(java.lang.String, java.lang.Integer, java.lang.String)', Sequence{str, length, padding}) /]

[comment pads a string to the right /]
[query public padRight(str : String, length : Integer) : String
	= str.padRight(length, ' ') /]

[comment pads a string to the right (UNSAFE) /]
[query public padRightUnsafe(str : OclAny, length : Integer) : String
	= str.padRightUnsafe(length, ' ') /]

[comment pads a string to the right /]
[query public padRight(str : String, length : Integer, padding : String) : String
	= invoke('engineering.schumann.uml.m2t.common.services.StringServiceImpl', 'padRight(java.lang.String, java.lang.Integer, java.lang.String)', Sequence{str, length, padding}) /]

[comment pads a string to the right (UNSAFE) /]
[query public padRightUnsafe(str : OclAny, length : Integer, padding : String) : String
	= invoke('engineering.schumann.uml.m2t.common.services.StringServiceImpl', 'padRight(java.lang.String, java.lang.Integer, java.lang.String)', Sequence{str, length, padding}) /]

[query public replaceEachRepeatedly(str :OclAny, pattern : String, value : String) : String
	= invoke('engineering.schumann.uml.m2t.common.services.StringServiceImpl', 'replaceEachRepeatedly(java.lang.String, java.lang.String, java.lang.String)', Sequence{str, pattern, value}) /]

[comment trims a string by looking for a certain string /]
[query public trim(arg0 : String, arg1 : String) : String
	= invoke('engineering.schumann.uml.m2t.common.services.StringServiceImpl', 'trim(java.lang.String, java.lang.String)', Sequence{arg0, arg1}) /]