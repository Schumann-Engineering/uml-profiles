[comment encoding = UTF-8 /]
[module VariableService('http://www.eclipse.org/uml2/5.0.0/UML')/]


[query public loadEnvironment(
	fileName : String
) : OclVoid =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl', 
		'loadEnvironment(java.lang.String)', 
		Sequence{
			fileName
		})
/]


[query private defaultValue(
	key		: String,
	default	: String
) : String =
	let propertyValue	: String = getProperty(key) in
	if (propertyValue = null or propertyValue.trim() = '') then 
		default 
	else 
		propertyValue 
	endif
/]


[query public env(
	key 	: String
) : String =
	env(key, null, null)
/]


[query public env(
	key 	: String, 
	default : String
) : String =
	env(key, default, null)
/]


[query public env(
	key 		: String, 
	default 	: String,
	_context	: String 
) : String =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl', 
		'getVariable(java.lang.String, java.lang.String, java.lang.Object)',
		Sequence{
			key,
			defaultValue(key, default),
			null
		})
/]


[query public env(
	key 	: String,
	default : String,
	params	: Sequence(String)
) : String =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl', 
		'getVariable(java.lang.String, java.lang.String, java.lang.Object)',
		Sequence{
			key,
			defaultValue(key, default),
			params
		})
/]


[query public env(
	key 		: String,
	default 	: String,
	params		: Sequence(String),
	_context : String 
) : String =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl', 
		'getVariable(java.lang.String, java.lang.String, java.lang.Object)',
		Sequence{
			key,
			defaultValue(key, default),
			params
		})
/]


[query public isTrue(
	key 	: String
) : Boolean =
	let value : String =
		if (exists(key)) then
			env(key, '')
		else
			getProperty(key)
		endif
	in
		invoke(
			'engineering.schumann.uml.m2t.common.services.StringServiceImpl',
			'isTrue(java.lang.String)', 
			Sequence{
				value
			})
/]


[query public isFalse(
	key 	: String
) : Boolean = 
	not isTrue(key)
/]


[query public exists(
	key 	: String
) : Boolean = 
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl', 
		'exists(java.lang.String)', 
		Sequence{
			key
		})
/]


[query public env_clearErrors(
	_context	: String
) : Boolean 
	= invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl',
		'clearErrors()', 
		Sequence{
		})
/]


[query public env_hasError(
	_context	: String
) : Boolean 
	= invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl',
		'hasError()', 
		Sequence{
		})
/]


[query public env_lastError(
	_context	: String
) : String =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl',
		'lastError()',
		Sequence{
		})
/]


[query public env_addError(
	errorMessage	: String,
	_context	: String
) : Sequence(String) =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl',
		'addError(java.lang.String)',
		Sequence{
			errorMessage
		})
/]


[query public env_getErrors(
	_context	: String
) : Sequence(String) =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl',
		'getErrors()',
		Sequence{
		})
/]


[query public setEnv(
	key 	: String,
	value	: String
) : String =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl',
		'setVariable(java.lang.String, java.lang.String)', 
		Sequence{
			key,
			value
		})
/]


[query public setEnv(
	key 		: String,
	value		: String,
	_context	: String
) : String =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl',
		'setVariable(java.lang.String, java.lang.String)', 
		Sequence{
			key,
			value
		})
/]


[query public setEnvIfNotExists(
	key 	: String,
	value	: String
) : String =
	invoke(
		'engineering.schumann.uml.m2t.common.services.VariableServiceImpl',
		'setVariableIfNotExist(java.lang.String, java.lang.String)', 
		Sequence{
			key,
			value
		})
/]