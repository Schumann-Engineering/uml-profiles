[comment encoding = UTF-8 /]
[module Element('http://www.eclipse.org/uml2/5.0.0/UML')/]


[import engineering::schumann::uml::m2t::services::StereotypeService /]


[query public _allStereotypedElements(
	element : Element,
	stereotypeName : String
) : Set(Element) =
	element
	.allOwnedElements()
	->select( element : Element | element._hasStereotype(stereotypeName))
/]


[query public _allStereotypedElements(
	element : Element
) : Set(Element) =
	element
	.allOwnedElements()
	->select( element : Element | element._hasStereotypes() )
/]


[query public _getTaggedValue(
	stereotypedElement : Element, 
	stereotype : Stereotype, 
	propertyName : String
) : OclAny = 
	if not stereotype.oclIsUndefined() then
       stereotypedElement.getValue(stereotype, propertyName)
    else 
       null
    endif
/]


[query public _getTaggedValue(
	stereotypedElement : Element, 
	stereotypeName : String, 
	propertyName : String
) : OclAny = 
	let stereotype : Stereotype = stereotypedElement.getAppliedStereotype(stereotypeName) in
	stereotypedElement._getTaggedValue(stereotype, propertyName)
/]


[query public _hasStereotype(element : Element, stereotypeName : String) : Boolean = 
	element.hasStereotype(element, stereotypeName)
/]


[query public _getStereotype(element : Element, stereotypeName : String) : Stereotype = 
	element.getStereotype(element, stereotypeName)
/]


[query public _getStereotypeInstance(
	element : Element,
	stereotypeName : String
) : OclAny =
	element.getStereotypeInstance(stereotypeName)
/]


[query public _getStereotypeInstance(
	element : Element,
	stereotype : Stereotype
) : OclAny =
	element.getStereotypeInstance(stereotype)
/]


[query public _hasStereotypes(element : Element) : Boolean = 
	element._listStereotypes()->size() > 0
/]


[query public _listStereotypes(element : Element) : Set(Stereotype) =
	element.getAppliedStereotypes() 
/]


[query public _model(element : Element) : Model =
	if (element.oclIsKindOf(Model)) then
		element.oclAsType(Model)
	else if (element.owner = null) then
		null
	else
		element.owner._model()
	endif
	endif
/]
