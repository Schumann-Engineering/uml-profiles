/* ============================================================
 * ============================================================
 * ALL ELEMENTS
 * ============================================================
 * ============================================================ */
* {
	/* put symbols at uniform position 
	 *
	 * NOTE: we take top-right because it is out of the way
	 *       more often than not
	 * 
	 * VALUES:
	 * 		0 = top-left
	 * 		1 = top
	 * 		2 = top-right
	 * 		3 = left
	 * 		4 = center
	 * 		5 = right
	 * 		6 = bottom-left
	 * 		7 = bottom
	 * 		8 = bottom-right.}
	 */
	shapeDirection:				2; 
}

Port {
	shapeDirection:				4;
}


/* ============================================================
 * ============================================================
 * DIAGRAM CONFIGURATION
 * ============================================================
 * ============================================================ */
/* --------------------
 * --------------------
 * UML Component Diagram
 * --------------------
 * -------------------- */
/* close all compartments of a component */
ComponentDiagram Compartment {
	visible: 					false;
	showTitle:					false;
	collapsed:					false;
}

/* make component stand out visually */
ComponentDiagram Component {
	bold:						true;
	/*
	topMarginLabel:				10;
	*/
}

/* only show name of port */
ComponentDiagram Port {
	maskLabel:					name visibility;
	portPosition:				"onLine"; /*inside, onLine, outside*/
	
	italic:						true;
	
	/* Forced the label to one position, by default(for port) it will placed according to the parent position.
	 * 
	 * type:	Boolean
	 * default:	false
	 */
	labelConstrained: 			true;	
}

/* highlight relationship labels */
ComponentDiagram Dependency > Label {
	underline:					true;
}

/* wrap labels in general */
ComponentDiagram Label {
	isNameWrap:					true;
}

/* hide label for connectors */
ComponentDiagram Connector > Label {
	visible:					false;
}

/* hide stereotype compartment by default */
ComponentDiagram Compartment[type=StereotypeCompartment] {
	visible:					false;
}

/* hide stereotype braced compartment by default */
ComponentDiagram Compartment[type=StereotypeBrace] {
	visible:					false;
}

/* Display the properties in Comment > Compartment*/
ComponentDiagram StereotypeComment Compartment[type=StereotypeCompartment] {
	visible:					true;
}

/* for ports, show symbol compartment. This scales the symbols / 
 * icons down nicely, instead of a nasty overlay */
ComponentDiagram Port > Compartment[kind=symbol] {
	visible:					true;
}

/* hide stereotype labels by default */
ComponentDiagram Label[type=StereotypeLabel] {
	visible:					false;
}

ComponentDiagram Port > Label[kind="FloatingLabel"],
ComponentDiagram Port {
	/* Set to true if the floating label is constrained on eight position, you can move it manually.
	 * 
	 * type:	Boolean
	 * default:	false
	 */
	isFloatingLabelConstrained:	true;
	
	/* Forced the label to one position, by default(for port) it will placed according to the parent position.
	 * 
	 * type:	Boolean
	 * default:	false
	 */
	labelConstrained: 			true;
}


/* ============================================================
 * ============================================================
 * ELEMENTS
 * ============================================================
 * ============================================================ */
 
/* --------------------
 * --------------------
 * Security Zone (Part 1/2)
 * 
 * NOTE: Security Zone is done first here because System Element
 * might override some settings later on. This allows for a
 * component to be a Zone as well as System Element
 * --------------------
 * -------------------- */
 
/* hide stereotype compartment, BUT NOT name */
Compartment[stereotype="CSMN::SecurityZone"] {
	visible:					false;
	displayHeader:				false;	
}

/* show stereotype name */
Label[stereotype="CSMN::SecurityZone"] {
	visible:					true;
	displayHeader:				false;
	bold:						true;
}

/* no compartments by default */
Component[appliedStereotypes~="CSMN::SecurityZone"] > Compartment {
	visible:					false;
}

/* default style */
Component[appliedStereotypes~="CSMN::SecurityZone"],
Package[appliedStereotypes~="CSMN::SecurityZone"] {
	/* fill */
	fillColor:					#FFFFFF;
	transparency:				50;
	gradient:					#FFFFFF vertical;
	
	/* border */
	lineColor:					#FF0000;
	lineWidth:					2;
	borderStyle:				dash;

	/* decorator */
	/* specialized in rules below */
	
	/* FQN */
	qualifiedNameDepth:			none;
}

/* show packaged element compartment */
Component[appliedStereotypes~="CSMN::SecurityZone"] > Compartment[kind=packagedelements] {
	collapsed:					false;
	visible:					true;
}

/* === ICONS === */
/* Zone = always show symbol, not icon */
Component[appliedStereotypes~="CSMN::SecurityZone"] {
	shapeVisibility:			true;
	elementIcon:				false;
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/security.svg';
}

/* SystemElement, which is a Zone = show symbol and icon, prefer symbol of Zone */
/*
Component[appliedStereotypes~="CSMN::SystemElement"][appliedStereotypes~="CSMN::SecurityZone"],
Component[appliedStereotypes~="CSMN::EnvironmentElement"][appliedStereotypes~="CSMN::SecurityZone"] {
	shapeVisibility:			true;
	elementIcon:				true;
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/security.svg';
}
*/

/* Zone as package = always show icon, not symbol */
Package[appliedStereotypes~="CSMN::SecurityZone"] {
	shapeVisibility:			false;
	elementIcon:				true;
} 
 
 
/* --------------------
 * --------------------
 * System Element
 * --------------------
 * -------------------- */
 
/* hide stereotype compartment and name */
Label[stereotype="CSMN::SystemElement"],
Compartment[stereotype="CSMN::SystemElement"] {
	visible:					false;
	displayHeader:				false;	
}

/* no compartments by default */
Component[appliedStereotypes~="CSMN::SystemElement"] > Compartment {
	visible:					false;
}

/* default style */
Component[appliedStereotypes~="CSMN::SystemElement"] {
	/* fill */
	fillColor:					#DAE8FC !important;
	transparency:				0;
	gradient:					#FFFFFF vertical;

	/* border */
	lineColor:					#000000;
	lineWidth:					2;
	borderstyle:				solid;
	
	/* decorator */
	/*
	shapeVisibility:			true;
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/package-variant.svg';
	*/
	elementIcon:				true;
	
	/* FQN */
	qualifiedNameDepth:			none;
}

/* === ICONS === */
/* SystemElement = symbol only */
Component[appliedStereotypes~="CSMN::SystemElement"] {
	shapeVisibility:			true;
	elementIcon:				false;
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/puzzle-outline.svg';
}


 
/* --------------------
 * --------------------
 * Environment Element
 * --------------------
 * -------------------- */
 
/* hide stereotype compartment and name */
Label[stereotype="CSMN::EnvironmentElement"],
Compartment[stereotype="CSMN::EnvironmentElement"] {
	visible:					false;
	displayHeader:				false;	
}

/* no compartments by default */
Component[appliedStereotypes~="CSMN::EnvironmentElement"] > Compartment {
	visible:					false;
}

/* default style */
Component[appliedStereotypes~="CSMN::EnvironmentElement"] {
	/* fill */
	fillColor:					#FFFFFF !important;
	transparency:				0;

	/* border */
	lineColor:					#000000;
	lineWidth:					2;
	borderstyle:				solid;	

	/* decorator */
	shapeVisibility:			true;
	elementIcon:				false;
		
	/* FQN */
	qualifiedNameDepth:			none;
}


/* === ICONS === */
/* Environment = always show symbol, not icon */
Component[appliedStereotypes~="CSMN::EnvironmentElement"] {
	shapeVisibility:			true;
	elementIcon:				false;
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/earth.svg';
}


/* Environment = symbol only */
Component[appliedStereotypes~="CSMN::EnvironmentElement"] {
	shapeVisibility:			true;
	elementIcon:				false;
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/earth.svg';
}

 
/* --------------------
 * --------------------
 * User
 * --------------------
 * -------------------- */
 
/* hide stereotype compartment and name */
Label[stereotype="CSMN::User"],
Compartment[stereotype="CSMN::User"] {
	visible:					false;
	displayHeader:				false;	
}

/* no compartments by default */
*[appliedStereotypes~="CSMN::User"] > Compartment {
	visible:					false;
}

/* default style */
*[appliedStereotypes~="CSMN::User"] {
	/* fill */
	fillColor:					#D5E8D4 !important;
	transparency:				0;
	gradient:					#FFFFFF vertical;

	/* border */
	lineColor:					#000000;
	lineWidth:					2;
	
	/* icon */
	elementIcon:				false;
	shapeVisibility:			true;	
	
	/* FQN */
	qualifiedNameDepth:			none;
}

/* === ICONS === */
/* User.Generic (DEFAULT) */
*[appliedStereotypes~="CSMN::User"][userType="Generic"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-circle.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Generic"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-circle-outline.svg';
}

/* User.Administrator */
*[appliedStereotypes~="CSMN::User"][userType="Administrator"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-cog.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Administrator"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-cog-outline.svg';
}

/* User.Attacker */
*[appliedStereotypes~="CSMN::User"][userType="Attacker"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/emoticon-devil.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Attacker"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/emoticon-devil-outline.svg';
}

/* User.Auditor */
*[appliedStereotypes~="CSMN::User"][userType="Auditor"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-eye.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Auditor"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-eye-outline.svg';
}

/* User.Authority */
*[appliedStereotypes~="CSMN::User"][userType="Authority"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-tie-hat.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Authority"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-tie-hat-outline.svg';
}

/* User.EthicalHacker */
*[appliedStereotypes~="CSMN::User"][userType="EthicalHacker"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-cowboy-hat.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="EthicalHacker"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-cowboy-hat-outline.svg';
}

/* User.Operator */
*[appliedStereotypes~="CSMN::User"][userType="Operator"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Operator"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-outline.svg';
}

/* User.OperatorEducated */
*[appliedStereotypes~="CSMN::User"][userType="OperatorEducated"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-school.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="OperatorEducated"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-school-outline.svg';
}

/* User.Owner */
*[appliedStereotypes~="CSMN::User"][userType="Owner"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-tie.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Owner"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-tie-outline.svg';
}

/* User.Patient */
*[appliedStereotypes~="CSMN::User"][userType="Patient"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-injury.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Patient"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-injury-outline.svg';
}

/* User.Service */
*[appliedStereotypes~="CSMN::User"][userType="Service"][useFilledIcon=true] {	
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-wrench.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Service"][useFilledIcon=false] {	
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-wrench-outline.svg';
}

/* User.UNKNOWN */
*[appliedStereotypes~="CSMN::User"][userType="UNKNOWN"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-question.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="UNKNOWN"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/account-question-outline.svg';
}

/* User.Vendor */
*[appliedStereotypes~="CSMN::User"][userType="Vendor"][useFilledIcon=true] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/factory.svg';
}
*[appliedStereotypes~="CSMN::User"][userType="Vendor"][useFilledIcon=false] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/factory.svg';
}

/* show symbol compartment for Actor instead of symbol */
Actor[appliedStereotypes~="CSMN::User"] {
	shapeVisibility:			false;
	elementIcon:				true;
}
Actor[appliedStereotypes~="CSMN::User"] > Compartment[kind=symbol] {
	visible:					true;
}


/* --------------------
 * --------------------
 * Box
 * --------------------
 * -------------------- */
 
/* hide stereotype compartment and name */
Label[stereotype="CSMN::Box"],
Compartment[stereotype="CSMN::Box"] {
	visible:					false;
	displayHeader:				false;	
}

/* no compartments by default */
Comment[appliedStereotypes~="CSMN::Box"] > Compartment {
	visible:					false;
}

/* default style */
ComponentDiagram Comment[appliedStereotypes~="CSMN::Box"],
ComponentDiagram Package[appliedStereotypes~="CSMN::Box"] {
	/* fill */
	fillColor:					#F5F5F5;
	gradient:					none;

	/* text */
	textAlignment:				center;
	fontColor:					#000000;
	bold:						true;
	
	/* border */
	lineColor:					#000000;
	lineWidth:					2;
	borderStyle:				solid;
	
	/* decorator */
	shapeVisibility:			true;
	elementIcon:				false;
	
	/* FQN */
	qualifiedNameDepth:			none;
}

/* show compartment for packaged elements */
ComponentDiagram Package > Compartment[kind=packagedelements] {
	collapsed:					false;
	visible:					true;	
}

/* === ICONS === */
ComponentDiagram Comment[appliedStereotypes~="CSMN::Box"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/information-outline.svg';
	shapeDirection:				2;
	shapeVisibility:			true;
	elementIcon:				false;
}
ComponentDiagram Package[appliedStereotypes~="CSMN::Box"] {
	shapeVisibility:			false;
	elementIcon:				true;
}


/* --------------------
 * --------------------
 * Security ZoneE (Part 2/2)
 * 
 * NOTE: this overrides the border
 * --------------------
 * -------------------- */
 
/* override border for  */ 
Component[appliedStereotypes~="CSMN::SecurityZone"] {
	/* border */
	lineColor:					#FF0000;
	lineWidth:					2;
	
	/* decorator */
	/*
	shapeVisibility:			true;
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/security.svg';
	*/
	
	maxNumberOfSymbol:			2;
}


/* ============================================================
 * ============================================================
 * CONNECTIONS
 * ============================================================
 * ============================================================ */
 
/* --------------------
 * --------------------
 * Connection
 * --------------------
 * -------------------- */
 
/* hide stereotype names */
Label[stereotype="CSMN::Connection"],
Compartment[stereotype="CSMN::Connection"],
Dependency[stereotype="CSMN::Connection"] > Label[type="Sterotype"] {
	visible:					false;
	displayHeader:				false;
}


/* hide stereotype label of connection */
Dependency[appliedStereotypes~="CSMN::Connection"] > Label[kind=Stereotype] {
	visible: 		false;
}

/* hide text label of connection */
Dependency[appliedStereotypes~="CSMN::Connection"] > Label[kind=Name] {
	visible: 		true;
}
 
/* show one arrow on uni-directional connections */
*[appliedStereotypes~="CSMN::Connection"][directionType="UniDirectional"] {
	sourceDecoration:			none;
	targetDecoration:			open_arrow;
}
*[appliedStereotypes~="CSMN::Connection"][directionType="UniDirectional"][directionType="Supplier"] {
	sourceDecoration:			open_arrow;
	targetDecoration:			none;
}
/* reverse arrow for dependency to show flow instead of dependency */
Dependency[appliedStereotypes~="CSMN::Connection"][directionType="UniDirectional"] {
	sourceDecoration:			open_arrow;
	targetDecoration:			none;
}
Dependency[appliedStereotypes~="CSMN::Connection"][directionType="UniDirectional"][directionPrimary="Supplier"] {
	sourceDecoration:			none;
	targetDecoration:			open_arrow;
}


/* show two arrows on bi-directional connections */
*[appliedStereotypes~="CSMN::Connection"][directionType="BiDirectional"][directionPrimary="Client"] {
	sourceDecoration:			solid_arrow_empty;
	targetDecoration:			solid_arrow_filled;
}
*[appliedStereotypes~="CSMN::Connection"][directionType="BiDirectional"][directionPrimary="Supplier"] {
	sourceDecoration:			solid_arrow_filled;
	targetDecoration:			solid_arrow_empty;
}
*[appliedStereotypes~="CSMN::Connection"][directionType="BiDirectional"][directionPrimary="Equal"] {
	sourceDecoration:			solid_arrow_empty;
	targetDecoration:			solid_arrow_empty;
}
/* reverse arrow for dependency to show flow instead of dependency */
Dependency[appliedStereotypes~="CSMN::Connection"][directionType="BiDirectional"][directionPrimary="Client"] {
	sourceDecoration:			solid_arrow_filled;
	targetDecoration:			solid_arrow_empty;
}
Dependency[appliedStereotypes~="CSMN::Connection"][directionType="BiDirectional"][directionPrimary="Supplier"] {
	sourceDecoration:			solid_arrow_empty;
	targetDecoration:			solid_arrow_filled;
}
Dependency[appliedStereotypes~="CSMN::Connection"][directionType="BiDirectional"][directionPrimary="Equal"] {
	sourceDecoration:			solid_arrow_empty;
	targetDecoration:			solid_arrow_empty;
}
 
/* default style for a connection 
 * NOTE: will be specialized later
 */
*[appliedStereotypes~="CSMN::Connection"] {
	/* line style */
	lineColor:					#000000;
	lineStyle:					solid;
	lineWidth:					2;
}

/* Unspecified */
*[appliedStereotypes~="CSMN::Connection"][connectionType="Unspecified"] {
	lineStyle:					dashed;
	lineDashLength:				3;
	lineDashGap:				10;
}


/*
Relationship[appliedStereotypes~="CSMN::Connection"][connectionType="Energy"] {
}
*/

/* Disturbance */
*[appliedStereotypes~="CSMN::Connection"][connectionType="Disturbance"] {
	lineColor:					#FF0000;
	lineStyle:					solid;
}

/* Information */
*[appliedStereotypes~="CSMN::Connection"][connectionType="Information"] {
	lineStyle:					dashed;
	lineDashLength:				5;
	lineDashGap:				5;
}

/* Material */
*[appliedStereotypes~="CSMN::Connection"][connectionType="Material"] {
	lineWidth:					5;
}

/* Mechanical */
*[appliedStereotypes~="CSMN::Connection"][connectionType="Mechanical"] {
	lineColor:					#CCCCCC;
	lineWidth:					5;
	targetDecoration:			none;
	sourceDecoration:			none;
}


/* ============================================================
 * ============================================================
 * CHARACTERISTICS (Asset)
 * ============================================================
 * ============================================================ */

/* --------------------
 * --------------------
 * Asset
 * --------------------
 * -------------------- */
/* Default style */
*[appliedStereotypes~="CSMN::Asset"] {
	shapeVisibility:			true;
	elementIcon:				false;
} 

/* === ICONS === */
/* === AssetType.Unspecified === */
*[appliedStereotypes~="CSMN::Asset"][assetType="Unspecified"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/help-circle-outline.svg';
} 

/* === AssetType.Energy === */
*[appliedStereotypes~="CSMN::Asset"][assetType="Energy"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/lightning-bolt.svg';
} 

/* === AssetType.Data === */
*[appliedStereotypes~="CSMN::Asset"][assetType="Data"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/database-outline.svg';
} 

/* === AssetType.Disturbance === */
*[appliedStereotypes~="CSMN::Asset"][assetType="Disturbance"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/leak.svg';
} 

/* === AssetType.Information === */
*[appliedStereotypes~="CSMN::Asset"][assetType="Information"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/information-box-outline.svg';
} 

/* === AssetType.Material === */
*[appliedStereotypes~="CSMN::Asset"][assetType="Material"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/palette-swatch.svg';
} 

/* === AssetType.Mechanical === */
*[appliedStereotypes~="CSMN::Asset"][assetType="Mechanical"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/connection.svg';
} 

/* === AssetType.Signal === */
*[appliedStereotypes~="CSMN::Asset"][assetType="Signal"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/waveform.svg';
} 


/* --------------------
 * --------------------
 * AssetLibrary
 * --------------------
 * -------------------- */
/* Default style */
Package[appliedStereotypes~="CSMN::AssetLibrary"] {
	shapeVisibility:			false;
	elementIcon:				true;
} 



/* ============================================================
 * ============================================================
 * CHARACTERISTICS (Flow)
 * ============================================================
 * ============================================================ */

/* --------------------
 * --------------------
 * OsiCharacteristic
 * --------------------
 * -------------------- */
 
/* == STEREOTYPE == */
/* hide stereotype names */
Label[stereotype="CSMN::OsiCharacteristic"],
Compartment[stereotype="CSMN::OsiCharacteristic"] {
	visible:					false;
}

/* == LABEL == */
/* hide stereotype label of connection */
Dependency[appliedStereotypes~="CSMN::OsiCharacteristic"] > Label[kind=Stereotype] {
	visible: 					false;
}

/* == LABEL == */
/* hide text label of connection */
Dependency[appliedStereotypes~="CSMN::OsiCharacteristic"] > Label[kind=Name] {
	visible: 					true;
}


/* ============================================================
 * ============================================================
 * CHARACTERISTICS (Interface)
 * ============================================================
 * ============================================================ */

/* --------------------
 * --------------------
 * InterfaceCharacteristic
 * --------------------
 * -------------------- */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"] {
	shapeVisibility:			false;
	elementIcon:				false;
}



/* === InterfaceType.Unspecified === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Unspecified"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/help-circle-outline.svg';
}

/* === InterfaceType.AirByFan === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="AirByFan"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/fan.svg';
}

/* === InterfaceType.AirByTurbine === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="AirByTurbine"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/turbine.svg';
}

/* === InterfaceType.Alarm === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Alarm"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/alarm-light.svg';
}

/* === InterfaceType.Bluetooth === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Bluetooth"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/bluetooth.svg';
}

/* === InterfaceType.Cellular === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Cellular"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/signal-cellular-3.svg';
}

/* === InterfaceType.Cellular2G === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Cellular2G"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/signal-2g.svg';
}

/* === InterfaceType.Cellular3G === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Cellular3G"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/signal-3g.svg';
}

/* === InterfaceType.Cellular4G === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Cellular4G"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/signal-4g.svg';
}

/* === InterfaceType.Cellular5G === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Cellular5G"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/signal-5g.svg';
}

/* === InterfaceType.Display === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Display"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/monitor.svg';
}

/* === InterfaceType.DisplaySmall === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="DisplaySmall"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/monitor-small.svg';
}

/* === InterfaceType.Ethernet === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Ethernet"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/ethernet.svg';
}

/* === InterfaceType.Hardwired === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Hardwired"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/link-variant.svg';
}

/* === InterfaceType.Hdmi === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Hdmi"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/hdmi-port.svg';
}

/* === InterfaceType.Knob === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Knob"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/knob.svg';
}

/* === InterfaceType.Nfc === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Nfc"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/nfc.svg';
}

/* === InterfaceType.Optical === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Optical"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/toslink.svg';
}

/* === InterfaceType.PowerBattery === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="PowerBattery"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/battery.svg';
}

/* === InterfaceType.PowerPlug === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="PowerPlug"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/power-plug.svg';
}

/* === InterfaceType.PowerSocket === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="PowerSocket"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/power-socket.svg';
}

/* === InterfaceType.Proprietary === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Proprietary"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/midi-port.svg';
}

/* === InterfaceType.SdCard === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="SdCard"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/sd.svg';
}

/* === InterfaceType.Serial === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Serial"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/serial-port.svg';
}

/* === InterfaceType.Speaker === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Speaker"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/speaker.svg';
}

/* === InterfaceType.Touch === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Touch"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/gesture-tap.svg';
}

/* === InterfaceType.Usb === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Usb"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/usb.svg';
}

/* === InterfaceType.UsbA === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="UsbA"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/usb-port.svg';
}

/* === InterfaceType.UsbC === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="UsbC"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/usb-c-port.svg';
}

/* === InterfaceType.UsbFlash === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="UsbFlash"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/usb-flash-drive.svg';
}

/* === InterfaceType.WifiAccessPoint === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="WifiAccessPoint"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/access-point.svg';
}

/* === InterfaceType.WifiClient === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="WifiClient"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/wifi.svg';
}

/* === InterfaceType.Zigbee === */
*[appliedStereotypes~="CSMN::InterfaceCharacteristic"][interfaceType="Zigbee"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/zigbee.svg';
}


/* ============================================================
 * ============================================================
 * CHARACTERISTICS (Storage)
 * ============================================================
 * ============================================================ */



/* ============================================================
 * ============================================================
 * LIFE CYCLE
 * ============================================================
 * ============================================================ */

/* --------------------
 * --------------------
 * Scope
 * --------------------
 * -------------------- */

/* hide stereotype compartment and name */
Label[stereotype="CSMN::Scope"],
Compartment[stereotype="CSMN::Scope"] {
	visible:					false;
	displayHeader:				false;	
}

Package[appliedStereotypes~="CSMN::Scope"] {
	shapeVisibility:			false;
	elementIcon:				true;
}

/* === ICONS === */
*[appliedStereotypes~="CSMN::Scope"],
Component[appliedStereotypes~="CSMN::Scope"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/package-variant-closed.svg';
	shapeVisibility:			true;
	elementIcon:				false;
}



/* --------------------
 * --------------------
 * ScopeConstraint
 * --------------------
 * -------------------- */

/* hide stereotype compartment and name */
Label[stereotype="CSMN::ScopeConstraint"],
Compartment[stereotype="CSMN::ScopeConstraint"] {
	visible:					false;
	displayHeader:				false;	
}


/* === ICONS === */
Port[appliedStereotypes~="CSMN::ScopeConstraint"] {
	shapeDirection:				4;
}

Component[appliedStereotypes~="CSMN::ScopeConstraint"][constraintType="Added"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/puzzle-plus-outline.svg';
	shapeVisibility:			true;
	elementIcon:				false;
}
/* expect for ports */
Port[appliedStereotypes~="CSMN::ScopeConstraint"][constraintType="Added"] {
	shapeVisibility:			false;
}

Component[appliedStereotypes~="CSMN::ScopeConstraint"][constraintType="Removed"] {
	svgFile:					'platform:/plugin/engineering.schumann.uml.profile.csmn/res/assets/puzzle-remove-outline.svg';
	shapeVisibility:			true;
	elementIcon:				false;
}
/* expect for ports */
Port[appliedStereotypes~="CSMN::ScopeConstraint"][constraintType="Removed"] {
	shapeVisibility:			false;
}
