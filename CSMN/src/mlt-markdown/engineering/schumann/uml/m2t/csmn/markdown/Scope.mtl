[comment encoding = UTF-8 /]
[module Scope(
	'http://www.eclipse.org/uml2/5.0.0/UML',
	'http://www.eclipse.org/uml2/5.0.0/Types',
	'http://schumann.engineering/csmn/1'
)]

[import engineering::schumann::uml::m2t::Model /]
[import engineering::schumann::uml::m2t::Element /]
[import engineering::schumann::uml::m2t::services::StereotypeService/]
[import engineering::schumann::uml::m2t::csmn::common::CpeCharacteristic /]
[import engineering::schumann::uml::m2t::csmn::common::Product /]
[import engineering::schumann::uml::m2t::csmn::markdown::Product /]
[import engineering::schumann::uml::m2t::csmn::common::Scope /]
[import engineering::schumann::uml::m2t::services::StringService /]


[template public printScope(
	this : Package,
	printSoftware : Boolean,
	printCpe : Boolean
)
? ( this.csmn_isScoped() )
]
| Trade name      | Model or version number   | UDI-DI / GTIN   | Base-UDI-DI / GMN    |[if (printSoftware)] Software release |[/if][if (printCpe)] CPE                                                |[/if]
| :-------------: | :-----------------------: | :-------------: | :------------------: |[if (printSoftware)] :--------------: |[/if][if (printCpe)] :------------------------------------------------: |[/if]
[for (product : Product | this.csmn_getScopeProducts())]
| [product.productName.padRightUnsafe(15, ' ') /] | [product.model.padRightUnsafe(25, ' ') /] | [product.udiDi.padRightUnsafe(15, ' ') /] | [product.udiDiBase.padRightUnsafe(20, ' ')/] |[if (printSoftware)][for (product.softwareVersion) separator ('<br/>')] [self/][/for] |[/if][if (printCpe)] [product.csmn_markdown_getCpeLink().padRightUnsafe(55, ' ')/]<br/>old: [product.csmn_markdown_getCpeLinkOld().padRightUnsafe(55, ' ')/] |[/if]
[/for]
[/template]








[template public printScope(
	model : Model
)]
| Trade name | Model or version number | UDI-DI / GTIN | Base-UDI-DI / GMN | Software release |
| :--------: | :---------------------: | :-----------: | :---------------: | :--------------: |
[for (scopedElement : Element | model.csmn_getAllScopeElements())]
[self/]

[for (product : Product | scopedElement.csmn_getScopeProducts())]
[self/]
[/for]


[/for]



# stereotyped elements
[for (model._getAllStereotypedElements())]
[self/]
- stereotypes:    [self.hasStereotypes()/]
- [self.getAppliedStereotypes().qualifiedName /]
- [self._hasStereotype('CSMN::Scope') /]
[/for]

[/template]