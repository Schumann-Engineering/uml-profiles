[comment encoding = UTF-8 /]
[module main(
	'http://www.eclipse.org/uml2/5.0.0/UML',
	'http://schumann.engineering/csmn/1'
)]

[import engineering::schumann::uml::m2t::services::EnvironmentService/]
[import engineering::schumann::uml::m2t::csmn::markdown::lifecycle::Scope /]


[query public getFileName(
	model : Model
) : String =
	'model - ' + model.name + '.md'
/]


[query public getFileName(
	aPackage : Package
) : String =
	'package - ' + aPackage.name + '.md'
/]


[**
 * ====================
 * MAIN
 * ====================
*/]
[template public mainComponent(
	component : Component
)]
	[comment @main/]

	[file ('components/component ' + component.name + '.md', false, 'UTF-8')]
Test 1 of [component.name /]
	[/file]
[/template]


[template public mainScope(
	scope : SecurityZone
)]
	[comment @main/]

	[file ('scopes/scope.md', true, 'UTF-8')]
[self/] = [self.base_Component/]
	[/file]
[/template]


[template public mainModel(
	model : Model
)]
	[comment @main/]

	[comment
		====================
		SETUP
		====================

		Configure environment by loading properties file passed as argument to template.

		NOTE: this is done by passing a list of properties files to the execution engine.
	/]
	[comment
		this isn't necessary since Acceleo 3.1. Load properties by passing them as argument
	/]

	[comment 
		====================
		GO!
		====================
	/]
	[model.generateMarkdown() /]
[/template]



[**
 * ====================
 * TEMPLATES
 * ====================
*/]
[**
 * Generates markdown files for a model
 */]
[template private generateMarkdown(
	model : Model
)]
	[file (model.getFileName(), false, 'UTF-8')]
# Profiles

[for (profile : ProfileApplication | model.profileApplication)]
	[profile/]
	[profile.appliedProfile /]
	[profile.appliedProfile.URI /]
	[profile.appliedProfile.eIsProxy() /]
[/for]

# Scope

[model.printScope() /]
	[/file]
[/template]