[comment encoding = UTF-8 /]
[module FileName('http://www.eclipse.org/uml2/5.0.0/UML')]


[import engineering::schumann::uml::m2t::services::EnvironmentService /]


[comment]
NOTE:

Acceleo caches results of queries. This is according to MOF Specification.
HOWEVER, this prevents queries and templates to be "dynamic", i.e. the result
is based on a changing variable.

Hence, these methods have a UUID field. The only reason for this: to cache
results based on the element AND another "unique" qualifier for the cache entry.
UUID can be anything, really.

This allows for multiple files being generated by the same engine / run. Otherwise,
each file would need a new engine / run.
[/comment]

[query private DIRECTORY_NAME_SNIPPETS(
	this 	: NamedElement,
	UUID	: String
) : String =
	envVariable(UUID, 'DIRECTORY_NAME_SNIPPETS', '_snippets')
/]


[query private DIRECTORY_NAME_IMAGES(
	this 	: NamedElement,
	UUID	: String
) : String =
	envVariable(UUID, 'DIRECTORY_NAME_IMAGES', '_images')
/]


[query private DIRECTORY_NAME_DOCUMENT(
	this 	: NamedElement,
	UUID	: String
) : String =
	envVariable(UUID, 'DIRECTORY_NAME_DOCUMENT', this.eClass().name + PATH_SEPARATOR(UUID) + this.name)
/]


[query public DIRECTORY_URI_SNIPPETS(
	this	: NamedElement,
	UUID	: String
) : Sequence(String) =
	Sequence(String)
	{
		DIRECTORY_NAME_DOCUMENT(UUID)
		+ PATH_SEPARATOR(UUID)
		+ DIRECTORY_NAME_SNIPPETS(UUID)
	    + PATH_SEPARATOR(UUID)
		+ DOCUMENT_NAME(UUID)
		+ PATH_SEPARATOR(UUID),

		DIRECTORY_NAME_SNIPPETS(UUID)
		+ PATH_SEPARATOR(UUID)
	}
/]


[query public DIRECTORY_URI_IMAGES(
	this 	: NamedElement,
	UUID	: String
) : String =
	DIRECTORY_NAME_IMAGES(UUID)
    + PATH_SEPARATOR(UUID)
/]


[query private DOCUMENT_EXTENSION(
	this 	: NamedElement,
	UUID	: String
) : String =
	envVariable(UUID, 'DOCUMENT_EXTENSION', 'txt')
/]


[query private DOCUMENT_NAME(
	this 	: NamedElement,
	UUID	: String
) : String =
	envVariable(UUID, 'DOCUMENT_NAME', this.name)
/]


[query private FILE_EXTENSION_SEPARATOR(
	this 	: NamedElement,
	UUID	: String
) : String =
	envVariable(UUID, 'FILE_EXTENSION_SEPARATOR', '.')
/]


[query private FILE_NAME_DOCUMENT(
	this 	: NamedElement,
	UUID	: String
) : String =
	DOCUMENT_NAME(UUID) + FILE_EXTENSION_SEPARATOR(UUID) + DOCUMENT_EXTENSION(UUID)
/]


[query public FILE_URI_DOCUMENT(
	this 	: NamedElement,
	UUID	: String
) : String = 
	DIRECTORY_NAME_DOCUMENT(UUID)
	+ PATH_SEPARATOR(UUID)
	+ FILE_NAME_DOCUMENT(UUID) 
/]


[query private PATH_SEPARATOR(
	this 	: NamedElement,
	UUID	: String
) : String =
	envVariable(UUID, 'PATH_SEPARATOR', '/')
/]