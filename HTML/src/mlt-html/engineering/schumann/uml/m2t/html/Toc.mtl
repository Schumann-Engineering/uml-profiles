[comment encoding = UTF-8 /]
[module Toc('http://www.eclipse.org/uml2/5.0.0/UML')]


[template private TOC_Header(
	title   : String,
	level	: Integer
)
post(trim())]
[addAutoBreadcrumb(title, level)/]
<h[level/] id="[getBreadcrumbsRaw(2).toHtmlId()/]">[title /]</h[level/]>
[getBreadcrumbsHtmlSkipLast(2) /]
[/template]


[template private TOC_HeaderWithId(
	title   : String,
	id		: String,
	level	: Integer
)
post(trim())]
[addBreadcrumb(title, id, level)/]
<h[level/] id="[id.toHtmlId()/]">[title /]</h[level/]>
[getBreadcrumbsHtmlSkipLast(2) /]
[/template]


[template public TOC_Title_begin(
	title   	: String
)][TOC_Header(title, 1) /][/template]
[template public TOC_Title_end(
	devNull : Element
)][/template]


[template public TOC_Chapter_begin(
	title   : String
)][TOC_Header(title, 2) /][/template]
[template public TOC_Chapter_begin(
	title   : String,
	id		: String
)][TOC_HeaderWithId(title, id, 2) /][/template]
[template public TOC_Chapter_end(
	devNull : Element
)][/template]


[template public TOC_Section_begin(
	title   : String
)][TOC_Header(title, 3) /][/template]
[template public TOC_Section_begin(
	title   : String,
	id		: String
)][TOC_HeaderWithId(title, id, 3) /][/template]
[template public TOC_Section_end(
	devNull : Element
)][/template]


[template public TOC_SubSection_begin(
	title   : String
)][TOC_Header(title, 4) /][/template]
[template public TOC_SubSection_begin(
	title   : String,
	id		: String
)][TOC_HeaderWithId(title, id, 4) /][/template]
[template public TOC_SubSection_end(
	devNull : Element
)][/template]


[template public TOC_SubSubSection_begin(
	title   : String
)][TOC_Header(title, 5) /][/template]
[template public TOC_SubSubSection_begin(
	title   : String,
	id		: String
)][TOC_HeaderWithId(title, id, 4) /][/template]
[template public TOC_SubSubSection_end(
	devNull : Element
)][/template]


[template private addBreadcrumb(
	title   : String,
	id		: String,
	level   : Integer
)
post(trim())][invoke(
	'engineering.schumann.uml.m2t.html.services.TocServiceImpl',
	'Add(java.lang.String, java.lang.String, java.lang.Integer)',
	Sequence {
		title,
		id,
		level
	}
)
/][/template]


[template private addAutoBreadcrumb(
	title   : String,
	level   : Integer
)
post(trim())]
[invoke(
	'engineering.schumann.uml.m2t.html.services.TocServiceImpl',
	'Add(java.lang.String, java.lang.String, java.lang.Integer)',
	Sequence {
		title,
		null,
		level
	}
)
/]
[/template]


[template public getBreadcrumbsHtml(
	minLevel : Integer
)
post(trim())]
[let breadcrumbs : String = _getBreadcrumbsHtml(2)]
[if (breadcrumbs <> '')]
<p class="breadcrumbs">
	<i>back to</i> [breadcrumbs /]
</p>
[/if]
[/let]
[/template]


[template public getBreadcrumbsHtmlSkipLast(
	minLevel : Integer
)
post(trim())]
[let breadcrumbs : String = _getBreadcrumbsHtmlSkipLast(2).trim()]
[if (breadcrumbs <> '')]
<p class="breadcrumbs">
	<i>back to</i> [breadcrumbs /]
</p>
[/if]
[/let]
[/template]


[template private _getBreadcrumbsHtml(
	minLevel : Integer
)
post(trim())]
[for (invoke(
		'engineering.schumann.uml.m2t.html.services.TocServiceImpl',
		'toList(java.lang.Integer)',
		Sequence {
			minLevel
		}
	)) separator(' &gt; ')][TOC_link(self.toString())/][/for]
[/template]


[template private _getBreadcrumbsHtmlSkipLast(
	minLevel : Integer
)
post(trim())]
[for (invoke(
		'engineering.schumann.uml.m2t.html.services.TocServiceImpl',
		'toListSkipLastN(java.lang.Integer, java.lang.Integer)',
		Sequence {
			minLevel,
			1
		}
	)) separator(' &gt; ')][TOC_link(self.toString())/][/for]
[/template]


[template public getBreadcrumbsRaw(
	minLevel : Integer
)
post(trim())]
[for (invoke(
			'engineering.schumann.uml.m2t.html.services.TocServiceImpl',
			'toList(java.lang.Integer)',
			Sequence {
				minLevel
			}
		)) separator(' > ')][self /][/for]
[/template]


[template public TOC_link(
	text	: String
)][TOC_link(text, text) /][/template]


[template public TOC_link(
	text	: String,
	anchor	: String
)]<a class="breadcrumb" href="#[anchor.toHtmlId() /]">[text /]</a>[/template]


[template public TOC_anchor(
	anchor	: String
)][TOC_anchor(anchor, '') /][/template]


[template public TOC_anchor(
	anchor	: String,
	text	: String
)]<a id="[anchor.toHtmlId() /]">[text /]</a>[/template]


[query public toHtmlId(
	text : String
) : String =
	'id-link-' + 
	text
	.replaceAll(' ', 		'')
	.replaceAll('<br/>', 	'')
	.replaceAll('<br>', 	'')
	.replaceAll('>', 		'__')
	.replaceAll('<', 		'')
	.replaceAll('&amp;',	'-')
	.replaceAll('\\$',		'')
	.replaceAll('\\(',		'')
	.replaceAll('\\)',		'')
	.replaceAll('\\[',		'')
	.replaceAll('\\]',		'')
	.replaceAll('\\\\',		'')
	.replaceAll('/',		'')
	.replaceAll('\\+',		'')
	.toLower()
/]


[query public TOC_getTOC(
	devNull	: OclAny
) : Sequence(Sequence(String)) = 
	invoke(
		'engineering.schumann.uml.m2t.html.services.TocServiceImpl',
		'getToc()',
		Sequence {}
	)
/]


[template public TOC_init(
	devNull	: String
)
post(trim())
][invoke(
		'engineering.schumann.uml.m2t.html.services.TocServiceImpl',
		'initToc()',
		Sequence {}
	)/][/template]